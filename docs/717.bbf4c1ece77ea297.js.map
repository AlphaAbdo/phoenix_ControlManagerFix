{"version":3,"file":"717.bbf4c1ece77ea297.js","mappings":"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","names":["RObjectPainter","ObjectPainter","constructor","dom","obj","opt","csstype","super","this","v7EvalAttr","name","dflt","getObject","cssprefix","type_check","res","undefined","typ1","typ2","parseFloat","fAttr","m","value","v","rstyle","fBlocks","blks","k","length","block","selector","fId","fCssClass","map","toLowerCase","v7SetAttr","v7EvalLength","sizepx","Math","round","norm","px","val","operand","pos","console","log","slice","Number","isFinite","v7EvalColor","pp","getPadPainter","_auto_color_cnt","pal","getHistPalette","cnt","num","_num_primitives","getColorOrdinal","_auto_colors","error","ordinal","v7EvalFont","dflts","fontScale","size","rfont","_dfltRFont","fFamily","fStyle","fWeight","text_size","text_angle","text_align","align","text_color","color","font_family","font_style","font_weight","getPadHeight","handler","FontHandler","setAngle","setAlign","setColor","createv7AttFill","prefix","pattern","createAttFill","color_as_svg","createv7AttLine","width","style","createAttLine","lineatt","setBorder","createv7AttMarker","refsize","createAttMarker","v7AttrChange","req","kind","snapid","_typename","ids","names","values","update","push","parseInt","JSON","stringify","v7SendAttrChanges","do_update","canp","getCanvPainter","v7SubmitRequest","method","submitDrawableRequest","_pending_request","assignSnapId","id","p","v7CommMode","_websocket","v7NormalMode","v7OfflineMode","RAxisPainter","arg1","axis","Object","assign","AxisPainterMethods","initAxisPainter","embedded","cleanup","axis_g","cleanupAxisPainter","getAxisType","configureZAxis","fp","_log","logbase","abs","exp","logz","configureAxis","min","max","smin","smax","vertical","frame_range","axis_range","opts","full_min","full_max","_symlog","reverse","timeoffset","toffset","fLabelsIndex","own_labels","labels","func","d3_scaleTime","domain","convertDate","symlog","d3_scaleSymlog","constant","d3_scaleLog","base","d3_scaleLinear","scale_min","scale_max","gr_range","range","axis_shift","gr","format","ndiv","nticks","nticks2","nticks3","floor","scale_range","tf1","tf2","chooseTimeFormat","tfunc1","tfunc2","d3_timeFormat","formatTime","noexp","moreloglabels","formatLog","formatLabels","order","ndig","formatNormal","getScaleMin","getScaleMax","d","indx","fNBinsNoOver","i","pair","second","first","fLabels","createTicks","only_major_as_array","optionNoexp","optionNoopt","optionInt","noticksopt","handle","nminor","nmiddle","nmajor","minor","middle","major","produceTicks","delta","unshift","reset","next","doround","tick","grpos","last_major","next_major_grpos","maxorder","minorder","exclorder3","maxtick","mintick","ord1","log10","ord2","bestorder","bestndig","bestlen","lbls","totallen","lbl","indexOf","warn","isCenteredLabels","processLabelsMove","arg","optionUnlab","label_g","select","box","node","getBBox","append","classed","attr","x","y","height","drag_pos0","offset","property","remove","side","labelsOffset","changeAxisAttr","scalingSize","addTitleDrag","title_g","settings","isBatchMode","acc_x","acc_y","new_x","new_y","alt_pos","curr_indx","drag_rect","drag_move","d3_drag","subject","on","evnt","sourceEvent","preventDefault","stopPropagation","title_length","titlePos","off","swap","isReverseAxis","title_align","isTitleRotated","dx","dy","set_x","set_y","besti","basepos","titleOffset","call","isInsideGrRange","delta1","delta2","getGrRange","drawMainLine","ending","endingSize","endingStyle","sz","sz7","drawTicks","main_draw","ticks","ticks_plusminus","ticksSide","h1","ticksSize","h2","startingSize","ticksColor","ticksWidth","gap0","gap","drawLabels","gaps","center_lbls","rotate_lbls","labelsFont","angle","textscale","maxtextlen","lbls_tilt","lbl_pos","max_lbl_width","max_lbl_height","process_drawtext_ready","painter","result_width","result_height","textwidth","maxwidth","gap_before","gap_after","scale","scaleTextDrawing","lastpos","fix_offset","fix_coord","startTextDrawing","text","latex","draw_g","post_process","drawText","axis_step","has_obstacle","formatExp","finishTextDrawing","then","selectAll","each","txt","d3_select","tr","tilt_height","sin","PI","cos","addZoomingRect","lgaps","disable_zooming","titleFont","drawTitle","fTitle","Promise","resolve","title_shift_x","title_shift_y","title_basepos","rotated","titleCenter","titleOpposite","extractDrawAttributes","rect","getPadRect","roundAngle","maxTickSize","drawAxis","layer","transform","standalone","empty","tgaps","setAfterDrawHandler","_afterDrawAgain","drawAxisAgain","drawAxisOtherPlace","only_ticks","zoomStandalone","redraw","drawable","getCoordinate","fPos","len","getPadLength","fVertical","fLength","labels_len","createG","promise","createMenu","menu","add","fillAxisContextMenu","show","addDragHandler","only_move","positionChanged","d3_pointer","item","analyzeWheelEvent","changed","drag","xn","yn","fHoriz","fArr","fVert","submitCanvExec","toFixed","redraw_mode","changes","arguments","redrawPad","changeAxisLog","getFramePainter","unzoom","addchk","input","addRColorMenu","col","addSizeMenu","addSelectMenu","addRAttrTextItems","noangle","noalign","change","t","flag","RFramePainter","tframe","mode3d","xmin","xmax","ymin","ymax","axes_drawn","keys_handler","projection","v7_frame","is_root6","setFrameActive","enabledKeys","control","enableKeys","setLastEventPos","pnt","fLastEventPnt","getLastEventPos","updateAttributes","force","fX1NDC","modified_NDC","fY1NDC","fX2NDC","fY2NDC","fillatt","getProjectionFunc","l","b","DegToRad","alpha2","r2","sqrt","f","cdec","denom","tan","recalculateRange","Proj","scale_ymin","scale_ymax","pnts","scale_xmin","scale_xmax","original_xmin","original_xmax","original_ymin","original_ymax","n","drawGrids","getFrameSvg","h","getFrameHeight","w","getFrameWidth","gridx","gridy","grid_style","getSvgLineStyle","gStyle","grid_color","getColor","x_handle","draw_grid","grid","swap_xy","y_handle","axisAsText","toUpperCase","toPrecision","_setAxisRange","vmin","vmax","nmin","nmax","nzmin","nzmax","zoomChangedInteractive","setAxesRanges","xaxis","yaxis","zaxis","zmin","zmax","setAxes2Ranges","second_x","second_y","x2axis","y2axis","createXY","self_drawaxes","cleanXY","v6axes","reverse_x","reverse_y","logx","logy","extra_y_space","zoom_ymin","zoom_ymax","zoom_xmin","zoom_xmax","_xaxis","create","_yaxis","TAxisPainter","getDom","setPadName","getPadName","symlog_y","symlog_x","logcheckmin","logminfactor","assignFrameMembers","ndim","log_min_nz","ymin_nz","hasDrawnAxes","drawAxes","ticksx","ticksy","sidex","sidey","cleanupAxes","draw_swapside","draw_ticks","z_handle","pr","draw_horiz","draw_vertical","_fast_drawing","can_adjust_frame","disable_x_draw","disable_y_draw","disable_ticks","pr1","invert_side","pr2","_frame_x","all","arr","drawAxes2","zoom_x2min","zoom_x2max","scale_x2min","scale_x2max","x2min","x2max","x2_handle","zoom_y2min","zoom_y2max","scale_y2min","scale_y2max","y2min","y2max","y2_handle","getGrFuncs","use_x2","grx2","use_y2","gry2","grx","gry","revertAxis","sizeChanged","clean","grname","cleanFrameDrawings","create3DScene","window","removeEventListener","_click_handler","_dblclick_handler","frame_painter_ref","trans","top_rect","main_svg","lm","tm","rotate","fixpos","options","RotateFrame","FixFrame","_frame_y","_frame_width","_frame_height","_frame_rotate","_frame_fixpos","getLayerSvg","rx","ry","addInteractivity","FrameInteractive","addBasicInteractivity","getFrameRect","hint_delta_x","hint_delta_y","configureUserClickHandler","configureUserDblclickHandler","zoom","zoom_x","zoom_y","zoom_z","unzoom_x","unzoom_y","unzoom_z","r_x","r_y","r_z","is_any_check","flags","checkZooming","canZoomInside","zoom_zmin","zoom_zmax","forEachPainter","ranges","interactiveRedraw","zoomSingle","zoom_v","unzoom_v","isAxisZoomed","dox","doy","doz","zoom_changed_x","zoom_changed_y","zoom_changed_z","fld","fillObjectOfflineMenu","changeFrameAttr","fillContextMenu","alone","isTooltipAllowed","setTooltipAllowed","addAttributesMenu","saveAs","revertPoint","showAxisStatus","axis_name","hint_name","axis_value","showObjectStatus","addKeysHandler","addFrameKeysHandler","for_second_axes","addFrameInteractivity","setRootPadRange","toggleAxisLog","RPadPainter","pad","iscan","this_pad_name","fObjectID","internals","painters","has_canvas","forEachPainterInPad","isRoot6","svg_this_pad","getPadSvg","getMainPainter","main_painter_ref","setMainPainter","_doing_draw","forEach","svg_p","pads_cache","_pad_x","_pad_y","_pad_width","_pad_height","draw_object","pad_frame","selectActivePad","active","getPadWidth","szx","szy","getRootPad","cleanPrimitives","splice","findPainterFor","selobj","selname","seltype","find","pobj","fName","fDfltPalette","fColors","fOrdinal","fColor","fInterpolate","fNormalized","addMethods","getNumPainters","userfunc","sub","registerForPadEvents","receiver","pad_events_receiver","producePadEvent","_what","_padpainter","_painter","_position","_place","what","padpainter","position","place","selectObjectPainter","istoppad","getAbsPosInCanvas","createCanvasSvg","check_resize","new_size","btns","frect","factor","svg","_fixed_size","getCanvSvg","testMainResize","render_to","selectDom","setTopPainter","online_canvas","enlargePad","padContextMenu","fWinSize","getElementRect","alignButtons","svg_can","pad_enlarged","hasObjectsToDraw","enlargeMain","was_fast","checkResize","showPadButtons","createPadSvg","only_resize","svg_parent","pad_name","pad_visible","svg_pad","svg_rect","fSize","color0","fBorderMode","constants","fPrimitives","syncDraw","entry","findIndex","e","resolveFunc","confirmDraw","shift","drawObject","drawPrimitives","_start_tm","Date","getTime","spenttm","ppainter","_primitive","processPadTooltipEvent","hints","processTooltipEvent","nproc","hint","user_info","changeDarkMode","mode","addSettingsMenu","hasMenuBar","actiavteMenuBar","hasEventStatus","activateStatusBar","fname","fillObjectExecMenu","reason","sync_promise","showsubitems","redrawNext","isPromise","getActivePad","needRedrawByResize","elem","checkCanvasResize","updateObject","addObjectPainter","objpainter","lst","extractTObjectProp","snap","fColIndex","fColValue","colors","root_colors","getRootColors","pattr","fObject","assignObject","fCssType","fOption","extract_color","member_name","attr_name","addColor","fLineColor","fLineWidth","fLineStyle","fFillColor","fFillStyle","fMarkerColor","fMarkerStyle","fMarkerSize","fTextColor","fTextAlign","fTextAngle","fTextSize","drawNextSnap","_snaps_map","next_rstyle","fDummy","redrawPadSnap","fDrawable","subpad","decodeOptions","addToPadPrimitives","addPadButtons","prev_name","selectCurrentPad","webSnapIds","kNone","kObject","kColors","kStyle","kPalette","fKind","ListOfColors","fString","palette","custom_palette","ColorPalette","$dummy","findSnap","onlyid","check","checkid","embed_canvas","document","title","batch_mode","mainid","use_openui","brlayout","BrowserLayout","setDom","drawing_divid","registerForResize","isanyfound","isanyremove","prim","_fp","removePadButtons","createImage","btoa_func","produceImage","separ","itemContextMenu","rrr","getBoundingClientRect","clientX","left","clientY","top","setTimeout","selkind","selp","isInteger","_selp","full_canvas","filename","imgdata","saveFile","encodeURIComponent","file_format","use_frame","items","prnt","btns_node","btns_prnt","parentNode","btns_next","nextSibling","main","render3D","access3dKind","can3d","sz2","getSizeFor3d","canvas","renderer","domElement","dataUrl","toDataURL","foreign","clname","svg_frame","frame_node","frame_next","img","insert","reconstruct","insertBefore","innerHTML","compressSVG","image","Image","onload","createElement","getContext","drawImage","onerror","src","data","replace","match","p1","c","String","fromCharCode","decodeURIComponent","reEncode","clickPadButton","funcname","closeMenu","getDimension","_this$painters","shown","_this$painters$n","done","clickButton","addPadButton","btn","tooltip","keyname","_buttons","cp","is_online","PadButtonsHandler","frame_painter","sign","getV","getRect","user","DrawOptions","GlobalColors","LocalColors","IgnorePalette","fLogx","fLogy","fLogz","fGridx","fGridy","fTickx","fTicky","static","matchObjectType","LongPollSocket","addr","_raw","_args","path","connid","raw","args","nextRequest","url","reqmode","post","browser","createHttpRequest","processRequest","str","u8Arr","Uint8Array","trim","getResponseHeader","extra_hdr","send","_offset","onclose","dummy_tmout","onopen","onmessage","close","FileDumpSocket","protocol","httpRequest","getProtocol","parse","nextOperation","wait_for_file","provideData","WebWindowHandle","socket_kind","credits","state","cansend","ackn","getUserArgs","field","user_args","setUserArgs","setReceiver","invokeReceiver","brdcst","arg2","channels","ks","keys","chid","_msg","_len","wait_first_recv","channel","force_queue","msgqueue","ready","msg","reserveQueueItem","markQueueItemDone","processQueue","_loop_msgqueue","front","master","channelid","timerid","clearTimeout","canSend","numsend","getRelCanSend","keepAlive","inject","immediate","bind","Array","isArray","createChannel","freechannelid","getChannelId","setHRef","href","getHRef","relative_path","ddd","lastIndexOf","connect","ntry","key","token","retry_open","first_time","toString","location","showProgress","WebSocket","next_binary","binchid","Blob","reader","FileReader","qitem","event","target","result","readAsArrayBuffer","i1","credit","i2","i3","ArrayBuffer","err","RCanvasPainter","tooltip_allowed","v7canvas","_submreq","_changed_layout","setLayoutKind","getLayoutKind","origin","main_selector","changeLayout","layout_kind","sidebar","firstChild","removeChild","html","appendChild","GridDisplay","getGridFrame","resize","toggleProjection","proj_painter","showUI5ProjectionArea","layout","drawProjection","drawInSidePanel","canv","testUI5","showMessage","saveCanvasAsFile","sendWebsocket","sendSaveCommand","closeWebsocket","useWebsocket","onWebsocketOpened","onWebsocketClosed","closeCurrentWindow","onWebsocketMsg","redrawObject","processDrawableReply","cmdid","cmd","reply","showUI5Panel","conn","cpainter","panel_handle","panel_name","onWebsocketError","hist","that","showSection","_requests","prevreq","_tm","_nextreq","_nextreqid","reqid","_kind","_method","submitMenuRequest","menukind","menureqid","submitExec","exec","subelem","_req$_painter","processChanges","activateGed","hasStatus","hp","getHPainter","hasStatusLine","createStatusLine","_getHPainter","hasGed","_this$brlayout","hasContent","removeGed","ged_view","getController","cleanupGed","destroy","deleteContent","createBrowserBtns","ToolbarIcons","toggleKind","setBrowserContent","setBrowserTitle","toggleBrowserKind","loadOpenui5","sap","ui","define","JSONModel","XMLView","oModel","viewName","oGed","setModel","placeAt","padEventsReceiver","produceJSON","can","nocanvas","normal_canvas","drawRPadSnapshot","ensureRCanvas","frame_kind","draw","reject","Error","drawRFrameTitle","fx","fy","fw","ph","title_margin","title_width","title_height","textFont","fText","minwidth","minheight","no_change_x","drawRFont","font","defs","fSrc","fDefault","drawRAxis","drawRFrame","registerMethods","extractRColor","rcolor","getContourIndex","zc","mid","cntr","fContour","r","fCustomContour","getContourColor","zindx","getContour","deleteContour","calcColor","entry1","entry2","dist","r1","col1","d3_rgb","col2","g","createPaletteColors","setFullRange","createContour","nlevels","zminpositive","colzmin","colzmax","logmin","dz","level"],"sourceRoot":"webpack:///","sources":["../../node_modules/jsroot/modules/base/RObjectPainter.mjs","../../node_modules/jsroot/modules/gpad/RAxisPainter.mjs","../../node_modules/jsroot/modules/gpad/RFramePainter.mjs","../../node_modules/jsroot/modules/gpad/RPadPainter.mjs","../../node_modules/jsroot/modules/webwindow.mjs","../../node_modules/jsroot/modules/gpad/RCanvasPainter.mjs"],"sourcesContent":["import { FontHandler } from './FontHandler.mjs';\nimport { ObjectPainter } from './ObjectPainter.mjs';\n\n\nconst kNormal = 1, /* kLessTraffic = 2, */ kOffline = 3;\n\nclass RObjectPainter extends ObjectPainter {\n\n   constructor(dom, obj, opt, csstype) {\n      super(dom,obj,opt);\n      this.csstype = csstype;\n   }\n\n   /** @summary Evaluate v7 attributes using fAttr storage and configured RStyle */\n   v7EvalAttr(name, dflt) {\n      let obj = this.getObject();\n      if (!obj) return dflt;\n      if (this.cssprefix) name = this.cssprefix + name;\n\n      const type_check = res => {\n         if (dflt === undefined) return res;\n         let typ1 = typeof dflt, typ2 = typeof res;\n         if (typ1 == typ2) return res;\n         if (typ1 == 'boolean') {\n            if (typ2 == 'string') return (res != \"\") && (res != \"0\") && (res != \"no\") && (res != \"off\");\n            return !!res;\n         }\n         if ((typ1 == 'number') && (typ2 == 'string'))\n            return parseFloat(res);\n         return res;\n      };\n\n      if (obj.fAttr && obj.fAttr.m) {\n         let value = obj.fAttr.m[name];\n         if (value) return type_check(value.v); // found value direct in attributes\n      }\n\n      if (this.rstyle && this.rstyle.fBlocks) {\n         let blks = this.rstyle.fBlocks;\n         for (let k = 0; k < blks.length; ++k) {\n            let block = blks[k],\n                match = (this.csstype && (block.selector == this.csstype)) ||\n                        (obj.fId && (block.selector == (\"#\" + obj.fId))) ||\n                        (obj.fCssClass && (block.selector == (\".\" + obj.fCssClass)));\n\n            if (match && block.map && block.map.m) {\n               let value = block.map.m[name.toLowerCase()];\n               if (value) return type_check(value.v);\n            }\n         }\n      }\n\n      return dflt;\n   }\n\n   /** @summary Set v7 attributes value */\n   v7SetAttr(name, value) {\n      let obj = this.getObject();\n      if (this.cssprefix) name = this.cssprefix + name;\n\n      if (obj && obj.fAttr && obj.fAttr.m)\n         obj.fAttr.m[name] = { v: value };\n   }\n\n   /** @summary Decode pad length from string, return pixel value */\n   v7EvalLength(name, sizepx, dflt) {\n      if (sizepx <= 0) sizepx = 1;\n\n      let value = this.v7EvalAttr(name);\n\n      if (value === undefined)\n         return Math.round(dflt*sizepx);\n\n      if (typeof value == \"number\")\n         return Math.round(value*sizepx);\n\n      if (value === null)\n         return 0;\n\n      let norm = 0, px = 0, val = value, operand = 0, pos = 0;\n\n      while (val.length > 0) {\n         // skip empty spaces\n         while ((pos < val.length) && ((val[pos] == ' ') || (val[pos] == '\\t')))\n            ++pos;\n\n         if (pos >= val.length)\n            break;\n\n         if ((val[pos] == '-') || (val[pos] == '+')) {\n            if (operand) {\n               console.log(\"Fail to parse RPadLength \" + value);\n               return dflt;\n            }\n            operand = (val[pos] == '-') ? -1 : 1;\n            pos++;\n            continue;\n         }\n\n         if (pos > 0) { val = val.slice(pos); pos = 0; }\n\n         while ((pos < val.length) && (((val[pos]>='0') && (val[pos]<='9')) || (val[pos]=='.'))) pos++;\n\n         let v = parseFloat(val.slice(0, pos));\n         if (!Number.isFinite(v)) {\n            console.log(\"Fail to parse RPadLength \" + value);\n            return Math.round(dflt*sizepx);\n         }\n\n         val = val.slice(pos);\n         pos = 0;\n         if (!operand) operand = 1;\n         if ((val.length > 0) && (val[0] == '%')) {\n            val = val.slice(1);\n            norm += operand*v*0.01;\n         } else if ((val.length > 1) && (val[0] == 'p') && (val[1] == 'x')) {\n            val = val.slice(2);\n            px += operand*v;\n         } else {\n            norm += operand*v;\n         }\n\n         operand = 0;\n      }\n\n      return Math.round(norm*sizepx + px);\n   }\n\n   /** @summary Evaluate RColor using attribute storage and configured RStyle */\n   v7EvalColor(name, dflt) {\n      let val = this.v7EvalAttr(name, \"\");\n      if (!val || (typeof val != \"string\")) return dflt;\n\n      if (val == \"auto\") {\n         let pp = this.getPadPainter();\n         if (pp?._auto_color_cnt !== undefined) {\n            let pal = pp.getHistPalette(),\n                cnt = pp._auto_color_cnt++,\n                num = pp._num_primitives - 1;\n            if (num < 2) num = 2;\n            val = pal ? pal.getColorOrdinal((cnt % num) / num) : \"blue\";\n            if (!this._auto_colors) this._auto_colors = {};\n            this._auto_colors[name] = val;\n         } else if (this._auto_colors && this._auto_colors[name]) {\n            val = this._auto_colors[name];\n         } else {\n            console.error(`Autocolor ${name} not defined yet - please check code`);\n            val = \"\";\n         }\n      } else if (val[0] == \"[\") {\n         let ordinal = parseFloat(val.slice(1, val.length-1));\n         val = \"black\";\n         if (Number.isFinite(ordinal)) {\n             let pp = this.getPadPainter(),\n                 pal = pp?.getHistPalette();\n             if (pal) val = pal.getColorOrdinal(ordinal);\n         }\n      }\n      return val;\n   }\n\n   /** @summary Evaluate RAttrText properties\n     * @returns {Object} FontHandler, can be used directly for the text drawing */\n   v7EvalFont(name, dflts, fontScale) {\n\n      if (!dflts) dflts = {}; else\n      if (typeof dflts == \"number\") dflts = { size: dflts };\n\n      let pp = this.getPadPainter(),\n          rfont = pp?._dfltRFont || { fFamily: \"Arial\", fStyle: \"\", fWeight: \"\" },\n          text_size   = this.v7EvalAttr(name + \"_size\", dflts.size || 12),\n          text_angle  = this.v7EvalAttr(name + \"_angle\", 0),\n          text_align  = this.v7EvalAttr(name + \"_align\", dflts.align || \"none\"),\n          text_color  = this.v7EvalColor(name + \"_color\", dflts.color || \"none\"),\n          font_family = this.v7EvalAttr(name + \"_font_family\", rfont.fFamily || \"Arial\"),\n          font_style  = this.v7EvalAttr(name + \"_font_style\", rfont.fStyle || \"\"),\n          font_weight = this.v7EvalAttr(name + \"_font_weight\", rfont.fWeight || \"\");\n\n       if (typeof text_size == \"string\") text_size = parseFloat(text_size);\n       if (!Number.isFinite(text_size) || (text_size <= 0)) text_size = 12;\n       if (!fontScale) fontScale = pp?.getPadHeight() || 100;\n\n       let handler = new FontHandler(null, text_size, fontScale, font_family, font_style, font_weight);\n\n       if (text_angle) handler.setAngle(360 - text_angle);\n       if (text_align !== \"none\") handler.setAlign(text_align);\n       if (text_color !== \"none\") handler.setColor(text_color);\n\n       return handler;\n    }\n\n   /** @summary Create this.fillatt object based on v7 fill attributes */\n   createv7AttFill(prefix) {\n      if (!prefix || (typeof prefix != \"string\")) prefix = \"fill_\";\n\n      let color = this.v7EvalColor(prefix + \"color\", \"\"),\n          pattern = this.v7EvalAttr(prefix + \"style\", 0);\n\n      this.createAttFill({ pattern, color,  color_as_svg: true });\n   }\n\n   /** @summary Create this.lineatt object based on v7 line attributes */\n   createv7AttLine(prefix) {\n      if (!prefix || (typeof prefix != \"string\")) prefix = \"line_\";\n\n      let color = this.v7EvalColor(prefix + \"color\", \"black\"),\n          width = this.v7EvalAttr(prefix + \"width\", 1),\n          style = this.v7EvalAttr(prefix + \"style\", 1),\n          pattern = this.v7EvalAttr(prefix + \"pattern\");\n\n      this.createAttLine({ color, width, style, pattern });\n\n      if (prefix == \"border_\")\n         this.lineatt.setBorder(this.v7EvalAttr(prefix + \"rx\", 0), this.v7EvalAttr(prefix + \"ry\", 0));\n   }\n\n    /** @summary Create this.markeratt object based on v7 attributes */\n   createv7AttMarker(prefix) {\n      if (!prefix || (typeof prefix != \"string\")) prefix = \"marker_\";\n\n      let color = this.v7EvalColor(prefix + \"color\", \"black\"),\n          size = this.v7EvalAttr(prefix + \"size\", 0.01),\n          style = this.v7EvalAttr(prefix + \"style\", 1),\n          refsize = 1;\n      if (size < 1) {\n         let pp = this.getPadPainter();\n         refsize = pp?.getPadHeight() || 100;\n      }\n\n      this.createAttMarker({ color, size, style, refsize });\n   }\n\n   /** @summary Create RChangeAttr, which can be applied on the server side\n     * @private */\n   v7AttrChange(req, name, value, kind) {\n      if (!this.snapid)\n         return false;\n\n      if (!req._typename) {\n         req._typename = \"ROOT::Experimental::RChangeAttrRequest\";\n         req.ids = [];\n         req.names = [];\n         req.values = [];\n         req.update = true;\n      }\n\n      if (this.cssprefix) name = this.cssprefix + name;\n      req.ids.push(this.snapid);\n      req.names.push(name);\n      let obj = null;\n\n      if ((value === null) || (value === undefined)) {\n        if (!kind) kind = 'none';\n        if (kind !== 'none') console.error(`Trying to set ${kind} for none value`);\n      }\n\n      if (!kind)\n         switch(typeof value) {\n            case \"number\": kind = \"double\"; break;\n            case \"boolean\": kind = \"boolean\"; break;\n         }\n\n      obj = { _typename: \"ROOT::Experimental::RAttrMap::\" };\n      switch(kind) {\n         case \"none\": obj._typename += \"NoValue_t\"; break;\n         case \"boolean\": obj._typename += \"BoolValue_t\"; obj.v = value ? true : false; break;\n         case \"int\": obj._typename += \"IntValue_t\"; obj.v = parseInt(value); break;\n         case \"double\": obj._typename += \"DoubleValue_t\"; obj.v = parseFloat(value); break;\n         default: obj._typename += \"StringValue_t\"; obj.v = (typeof value == \"string\") ? value : JSON.stringify(value); break;\n      }\n\n      req.values.push(obj);\n      return true;\n   }\n\n   /** @summary Sends accumulated attribute changes to server */\n   v7SendAttrChanges(req, do_update) {\n      let canp = this.getCanvPainter();\n      if (canp && req?._typename) {\n         if (do_update !== undefined)\n            req.update = do_update ? true : false;\n         canp.v7SubmitRequest(\"\", req);\n      }\n   }\n\n   /** @summary Submit request to server-side drawable\n    * @param kind defines request kind, only single request a time can be submitted\n    * @param req is object derived from DrawableRequest, including correct _typename\n    * @param method is method of painter object which will be called when getting reply */\n   v7SubmitRequest(kind, req, method) {\n      let canp = this.getCanvPainter();\n      if (typeof canp?.submitDrawableRequest != 'function') return null;\n\n      // special situation when snapid not yet assigned - just keep ref until snapid is there\n      // maybe keep full list - for now not clear if really needed\n      if (!this.snapid) {\n         this._pending_request = { kind, req, method };\n         return req;\n      }\n\n      return canp.submitDrawableRequest(kind, req, this, method);\n   }\n\n   /** @summary Assign snapid to the painter\n     * @desc Overwrite default method */\n   assignSnapId(id) {\n      this.snapid = id;\n      if (this.snapid && this._pending_request) {\n         let p = this._pending_request;\n         this.v7SubmitRequest(p.kind, p.req, p.method);\n         delete this._pending_request;\n      }\n   }\n\n   /** @summary Return communication mode with the server\n     * @desc\n     * kOffline means no server there,\n     * kLessTraffic advise not to send commands if offline functionality available\n     * kNormal is standard functionality with RCanvas on server side */\n   v7CommMode() {\n      let canp = this.getCanvPainter();\n      if (!canp || !canp.submitDrawableRequest || !canp._websocket)\n         return kOffline;\n\n      return kNormal;\n   }\n\n   v7NormalMode() { return this.v7CommMode() == kNormal; }\n\n   v7OfflineMode() { return this.v7CommMode() == kOffline; }\n\n} // class RObjectPainter\n\nexport { RObjectPainter };\n","import { settings, isBatchMode } from '../core.mjs';\nimport { select as d3_select, pointer as d3_pointer,\n         drag as d3_drag, timeFormat as d3_timeFormat,\n         scaleTime as d3_scaleTime, scaleSymlog as d3_scaleSymlog,\n         scaleLog as d3_scaleLog, scaleLinear as d3_scaleLinear } from '../d3.mjs';\nimport { AxisPainterMethods, chooseTimeFormat } from './TAxisPainter.mjs';\nimport { createMenu } from '../gui/menu.mjs';\nimport { addDragHandler } from './TFramePainter.mjs';\nimport { RObjectPainter } from '../base/RObjectPainter.mjs';\n\n\n/**\n * @summary Axis painter for v7\n *\n * @private\n */\n\nclass RAxisPainter extends RObjectPainter {\n\n   /** @summary constructor */\n   constructor(dom, arg1, axis, cssprefix) {\n      let drawable = cssprefix ? arg1.getObject() : arg1;\n      super(dom, drawable, \"\", cssprefix ? arg1.csstype : \"axis\");\n      Object.assign(this, AxisPainterMethods);\n      this.initAxisPainter();\n\n      this.axis = axis;\n      if (cssprefix) { // drawing from the frame\n         this.embedded = true; // indicate that painter embedded into the histo painter\n         //this.csstype = arg1.csstype; // for the moment only via frame one can set axis attributes\n         this.cssprefix = cssprefix;\n         this.rstyle = arg1.rstyle;\n      } else {\n         // this.csstype = \"axis\";\n         this.cssprefix = \"axis_\";\n      }\n   }\n\n   /** @summary cleanup painter */\n   cleanup() {\n      delete this.axis;\n      delete this.axis_g;\n      this.cleanupAxisPainter();\n      super.cleanup();\n   }\n\n   /** @summary Use in GED to identify kind of axis */\n   getAxisType() { return \"RAttrAxis\"; }\n\n   /** @summary Configure only base parameters, later same handle will be used for drawing  */\n   configureZAxis(name, fp) {\n      this.name = name;\n      this.kind = \"normal\";\n      this.log = false;\n      let _log = this.v7EvalAttr(\"log\", 0);\n      if (_log) {\n         this.log = true;\n         this.logbase = 10;\n         if (Math.abs(_log - Math.exp(1))<0.1)\n            this.logbase = Math.exp(1);\n         else if (_log > 1.9)\n            this.logbase = Math.round(_log);\n      }\n      fp.logz = this.log;\n   }\n\n   /** @summary Configure axis painter\n     * @desc Axis can be drawn inside frame <g> group with offset to 0 point for the frame\n     * Therefore one should distinguish when caclulated coordinates used for axis drawing itself or for calculation of frame coordinates\n     * @private */\n   configureAxis(name, min, max, smin, smax, vertical, frame_range, axis_range, opts) {\n      if (!opts) opts = {};\n      this.name = name;\n      this.full_min = min;\n      this.full_max = max;\n      this.kind = \"normal\";\n      this.vertical = vertical;\n      this.log = false;\n      let _log = this.v7EvalAttr(\"log\", 0),\n          _symlog = this.v7EvalAttr(\"symlog\", 0);\n      this.reverse = opts.reverse || false;\n\n      if (this.v7EvalAttr(\"time\")) {\n         this.kind = 'time';\n         this.timeoffset = 0;\n         let toffset = this.v7EvalAttr(\"timeOffset\");\n         if (toffset !== undefined) {\n            toffset = parseFloat(toffset);\n            if (Number.isFinite(toffset)) this.timeoffset = toffset*1000;\n         }\n      } else if (this.axis && this.axis.fLabelsIndex) {\n         this.kind = 'labels';\n         delete this.own_labels;\n      } else if (opts.labels) {\n         this.kind = 'labels';\n      } else {\n         this.kind = 'normal';\n      }\n\n      if (this.kind == 'time') {\n         this.func = d3_scaleTime().domain([this.convertDate(smin), this.convertDate(smax)]);\n      } else if (_symlog && (_symlog > 0)) {\n         this.symlog = _symlog;\n         this.func = d3_scaleSymlog().constant(_symlog).domain([smin,smax]);\n      } else if (_log) {\n         if (smax <= 0) smax = 1;\n         if ((smin <= 0) || (smin >= smax))\n            smin = smax * 0.0001;\n         this.log = true;\n         this.logbase = 10;\n         if (Math.abs(_log - Math.exp(1))<0.1)\n            this.logbase = Math.exp(1);\n         else if (_log > 1.9)\n            this.logbase = Math.round(_log);\n         this.func = d3_scaleLog().base(this.logbase).domain([smin,smax]);\n      } else {\n         this.func = d3_scaleLinear().domain([smin,smax]);\n      }\n\n      this.scale_min = smin;\n      this.scale_max = smax;\n\n      this.gr_range = axis_range || 1000; // when not specified, one can ignore it\n\n      let range = frame_range ? frame_range : [0, this.gr_range];\n\n      this.axis_shift = range[1] - this.gr_range;\n\n      if (this.reverse)\n         this.func.range([range[1], range[0]]);\n      else\n         this.func.range(range);\n\n      if (this.kind == 'time')\n         this.gr = val => this.func(this.convertDate(val));\n      else if (this.log)\n         this.gr = val => (val < this.scale_min) ? (this.vertical ? this.func.range()[0]+5 : -5) : this.func(val);\n      else\n         this.gr = this.func;\n\n      delete this.format;// remove formatting func\n\n      let ndiv = this.v7EvalAttr(\"ndiv\", 508);\n\n      this.nticks = ndiv % 100;\n      this.nticks2 = (ndiv % 10000 - this.nticks) / 100;\n      this.nticks3 = Math.floor(ndiv/10000);\n\n      if (this.nticks > 20) this.nticks = 20;\n\n      let gr_range = Math.abs(this.gr_range) || 100;\n\n      if (this.kind == 'time') {\n         if (this.nticks > 8) this.nticks = 8;\n\n         let scale_range = this.scale_max - this.scale_min,\n             tf1 = this.v7EvalAttr(\"timeFormat\", \"\"),\n             tf2 = chooseTimeFormat(scale_range / gr_range, false);\n\n         if (!tf1 || (scale_range < 0.1 * (this.full_max - this.full_min)))\n            tf1 = chooseTimeFormat(scale_range / this.nticks, true);\n\n         this.tfunc1 = this.tfunc2 = d3_timeFormat(tf1);\n         if (tf2!==tf1)\n            this.tfunc2 = d3_timeFormat(tf2);\n\n         this.format = this.formatTime;\n\n      } else if (this.log) {\n         if (this.nticks2 > 1) {\n            this.nticks *= this.nticks2; // all log ticks (major or minor) created centrally\n            this.nticks2 = 1;\n         }\n         this.noexp = this.v7EvalAttr(\"noexp\", false);\n         if ((this.scale_max < 300) && (this.scale_min > 0.3) && (this.logbase == 10)) this.noexp = true;\n         this.moreloglabels = this.v7EvalAttr(\"moreloglbls\", false);\n\n         this.format = this.formatLog;\n      } else if (this.kind == 'labels') {\n         this.nticks = 50; // for text output allow max 50 names\n         let scale_range = this.scale_max - this.scale_min;\n         if (this.nticks > scale_range)\n            this.nticks = Math.round(scale_range);\n         this.nticks2 = 1;\n\n         this.format = this.formatLabels;\n      } else {\n         this.order = 0;\n         this.ndig = 0;\n         this.format = this.formatNormal;\n      }\n   }\n\n   /** @summary Return scale min */\n   getScaleMin() {\n      return this.func ? this.func.domain()[0] : 0;\n   }\n\n   /** @summary Return scale max */\n   getScaleMax() {\n      return this.func ? this.func.domain()[1] : 0;\n   }\n\n   /** @summary Provide label for axis value */\n   formatLabels(d) {\n      let indx = Math.round(d);\n      if (this.axis && this.axis.fLabelsIndex) {\n         if ((indx < 0) || (indx >= this.axis.fNBinsNoOver)) return null;\n         for (let i = 0; i < this.axis.fLabelsIndex.length; ++i) {\n            let pair = this.axis.fLabelsIndex[i];\n            if (pair.second === indx) return pair.first;\n         }\n      } else {\n         let labels = this.getObject().fLabels;\n         if (labels && (indx >= 0) && (indx < labels.length))\n            return labels[indx];\n      }\n      return null;\n   }\n\n   /** @summary Creates array with minor/middle/major ticks */\n   createTicks(only_major_as_array, optionNoexp, optionNoopt, optionInt) {\n\n      if (optionNoopt && this.nticks && (this.kind == \"normal\")) this.noticksopt = true;\n\n      let handle = { nminor: 0, nmiddle: 0, nmajor: 0, func: this.func };\n\n      handle.minor = handle.middle = handle.major = this.produceTicks(this.nticks);\n\n      if (only_major_as_array) {\n         let res = handle.major, delta = (this.scale_max - this.scale_min)*1e-5;\n         if (res[0] > this.scale_min + delta) res.unshift(this.scale_min);\n         if (res[res.length-1] < this.scale_max - delta) res.push(this.scale_max);\n         return res;\n      }\n\n      if ((this.nticks2 > 1) && (!this.log || (this.logbase === 10))) {\n         handle.minor = handle.middle = this.produceTicks(handle.major.length, this.nticks2);\n\n         let gr_range = Math.abs(this.func.range()[1] - this.func.range()[0]);\n\n         // avoid black filling by middle-size\n         if ((handle.middle.length <= handle.major.length) || (handle.middle.length > gr_range/3.5)) {\n            handle.minor = handle.middle = handle.major;\n         } else if ((this.nticks3 > 1) && !this.log)  {\n            handle.minor = this.produceTicks(handle.middle.length, this.nticks3);\n            if ((handle.minor.length <= handle.middle.length) || (handle.minor.length > gr_range/1.7)) handle.minor = handle.middle;\n         }\n      }\n\n      handle.reset = function() {\n         this.nminor = this.nmiddle = this.nmajor = 0;\n      };\n\n      handle.next = function(doround) {\n         if (this.nminor >= this.minor.length) return false;\n\n         this.tick = this.minor[this.nminor++];\n         this.grpos = this.func(this.tick);\n         if (doround) this.grpos = Math.round(this.grpos);\n         this.kind = 3;\n\n         if ((this.nmiddle < this.middle.length) && (Math.abs(this.grpos - this.func(this.middle[this.nmiddle])) < 1)) {\n            this.nmiddle++;\n            this.kind = 2;\n         }\n\n         if ((this.nmajor < this.major.length) && (Math.abs(this.grpos - this.func(this.major[this.nmajor])) < 1) ) {\n            this.nmajor++;\n            this.kind = 1;\n         }\n         return true;\n      };\n\n      handle.last_major = function() {\n         return (this.kind !== 1) ? false : this.nmajor == this.major.length;\n      };\n\n      handle.next_major_grpos = function() {\n         if (this.nmajor >= this.major.length) return null;\n         return this.func(this.major[this.nmajor]);\n      };\n\n      this.order = 0;\n      this.ndig = 0;\n\n      // at the moment when drawing labels, we can try to find most optimal text representation for them\n\n      if ((this.kind == \"normal\") && !this.log && (handle.major.length > 0)) {\n\n         let maxorder = 0, minorder = 0, exclorder3 = false;\n\n         if (!optionNoexp) {\n            let maxtick = Math.max(Math.abs(handle.major[0]),Math.abs(handle.major[handle.major.length-1])),\n                mintick = Math.min(Math.abs(handle.major[0]),Math.abs(handle.major[handle.major.length-1])),\n                ord1 = (maxtick > 0) ? Math.round(Math.log10(maxtick)/3)*3 : 0,\n                ord2 = (mintick > 0) ? Math.round(Math.log10(mintick)/3)*3 : 0;\n\n             exclorder3 = (maxtick < 2e4); // do not show 10^3 for values below 20000\n\n             if (maxtick || mintick) {\n                maxorder = Math.max(ord1,ord2) + 3;\n                minorder = Math.min(ord1,ord2) - 3;\n             }\n         }\n\n         // now try to find best combination of order and ndig for labels\n\n         let bestorder = 0, bestndig = this.ndig, bestlen = 1e10;\n\n         for (let order = minorder; order <= maxorder; order+=3) {\n            if (exclorder3 && (order===3)) continue;\n            this.order = order;\n            this.ndig = 0;\n            let lbls = [], indx = 0, totallen = 0;\n            while (indx<handle.major.length) {\n               let lbl = this.format(handle.major[indx], true);\n               if (lbls.indexOf(lbl)<0) {\n                  lbls.push(lbl);\n                  totallen += lbl.length;\n                  indx++;\n                  continue;\n               }\n               if (++this.ndig > 11) break; // not too many digits, anyway it will be exponential\n               lbls = []; indx = 0; totallen = 0;\n            }\n\n            // for order==0 we should virually remove \"0.\" and extra label on top\n            if (!order && (this.ndig<4)) totallen-=(handle.major.length*2+3);\n\n            if (totallen < bestlen) {\n               bestlen = totallen;\n               bestorder = this.order;\n               bestndig = this.ndig;\n            }\n         }\n\n         this.order = bestorder;\n         this.ndig = bestndig;\n\n         if (optionInt) {\n            if (this.order) console.warn('Axis painter - integer labels are configured, but axis order ' + this.order + ' is preferable');\n            if (this.ndig) console.warn('Axis painter - integer labels are configured, but ' + this.ndig + ' decimal digits are required');\n            this.ndig = 0;\n            this.order = 0;\n         }\n      }\n\n      return handle;\n   }\n\n   /** @summary Is labels should be centered */\n   isCenteredLabels() {\n      if (this.kind === 'labels') return true;\n      if (this.kind === 'log') return false;\n      return this.v7EvalAttr(\"labels_center\", false);\n   }\n\n   /** @summary Used to move axis labels instead of zooming\n     * @private */\n   processLabelsMove(arg, pos) {\n      if (this.optionUnlab || !this.axis_g) return false;\n\n      let label_g = this.axis_g.select(\".axis_labels\");\n      if (!label_g || (label_g.size() != 1)) return false;\n\n      if (arg == 'start') {\n         // no moving without labels\n         let box = label_g.node().getBBox();\n\n         label_g.append(\"rect\")\n                 .classed(\"zoom\", true)\n                 .attr(\"x\", box.x)\n                 .attr(\"y\", box.y)\n                 .attr(\"width\", box.width)\n                 .attr(\"height\", box.height)\n                 .style(\"cursor\", \"move\");\n         if (this.vertical) {\n            this.drag_pos0 = pos[0];\n         } else {\n            this.drag_pos0 = pos[1];\n         }\n\n         return true;\n      }\n\n      let offset = label_g.property('fix_offset');\n\n      if (this.vertical) {\n         offset += Math.round(pos[0] - this.drag_pos0);\n         label_g.attr('transform', `translate(${offset})`);\n      } else {\n         offset += Math.round(pos[1] - this.drag_pos0);\n         label_g.attr('transform', `translate(0,${offset})`);\n      }\n      if (!offset) label_g.attr('transform', null);\n\n      if (arg == 'stop') {\n         label_g.select(\"rect.zoom\").remove();\n         delete this.drag_pos0;\n         if (offset != label_g.property('fix_offset')) {\n            label_g.property('fix_offset', offset);\n            let side = label_g.property('side') || 1;\n            this.labelsOffset = offset / (this.vertical ? -side : side);\n            this.changeAxisAttr(1, \"labels_offset\", this.labelsOffset / this.scalingSize);\n         }\n      }\n\n      return true;\n   }\n\n   /** @summary Add interactive elements to draw axes title */\n   addTitleDrag(title_g, side) {\n      if (!settings.MoveResize || isBatchMode()) return;\n\n      let drag_rect = null,\n          acc_x, acc_y, new_x, new_y, alt_pos, curr_indx,\n          drag_move = d3_drag().subject(Object);\n\n      drag_move\n         .on(\"start\", evnt => {\n\n            evnt.sourceEvent.preventDefault();\n            evnt.sourceEvent.stopPropagation();\n\n            let box = title_g.node().getBBox(), // check that elements visible, request precise value\n                title_length = this.vertical ? box.height : box.width;\n\n            new_x = acc_x = title_g.property('shift_x');\n            new_y = acc_y = title_g.property('shift_y');\n\n            if (this.titlePos == \"center\")\n               curr_indx = 1;\n            else\n               curr_indx = (this.titlePos == \"left\") ? 0 : 2;\n\n            // let d = ((this.gr_range > 0) && this.vertical) ? title_length : 0;\n            alt_pos = [0, this.gr_range/2, this.gr_range]; // possible positions\n            let off = this.vertical ? -title_length : title_length,\n                swap = this.isReverseAxis() ? 2 : 0;\n            if (this.title_align == \"middle\") {\n               alt_pos[swap] += off/2;\n               alt_pos[2-swap] -= off/2;\n            } else if ((this.title_align == \"begin\") ^ this.isTitleRotated()) {\n               alt_pos[1] -= off/2;\n               alt_pos[2-swap] -= off;\n            } else { // end\n               alt_pos[swap] += off;\n               alt_pos[1] += off/2;\n            }\n\n            alt_pos[curr_indx] = this.vertical ? acc_y : acc_x;\n\n            drag_rect = title_g.append(\"rect\")\n                 .classed(\"zoom\", true)\n                 .attr(\"x\", box.x)\n                 .attr(\"y\", box.y)\n                 .attr(\"width\", box.width)\n                 .attr(\"height\", box.height)\n                 .style(\"cursor\", \"move\");\n//                 .style(\"pointer-events\",\"none\"); // let forward double click to underlying elements\n          }).on(\"drag\", evnt => {\n               if (!drag_rect) return;\n\n               evnt.sourceEvent.preventDefault();\n               evnt.sourceEvent.stopPropagation();\n\n               acc_x += evnt.dx;\n               acc_y += evnt.dy;\n\n               let set_x, set_y,\n                   p = this.vertical ? acc_y : acc_x, besti = 0;\n\n               for (let i=1; i<3; ++i)\n                  if (Math.abs(p - alt_pos[i]) < Math.abs(p - alt_pos[besti])) besti = i;\n\n               if (this.vertical) {\n                  set_x = acc_x;\n                  set_y = alt_pos[besti];\n               } else {\n                  set_x = alt_pos[besti];\n                  set_y = acc_y;\n               }\n\n               new_x = set_x; new_y = set_y; curr_indx = besti;\n               title_g.attr('transform', 'translate(' + Math.round(new_x) + ',' + Math.round(new_y) +  ')');\n\n          }).on(\"end\", evnt => {\n               if (!drag_rect) return;\n\n               evnt.sourceEvent.preventDefault();\n               evnt.sourceEvent.stopPropagation();\n\n               let basepos = title_g.property('basepos') || 0;\n\n               title_g.property('shift_x', new_x)\n                      .property('shift_y', new_y);\n\n               this.titleOffset = (this.vertical ? basepos - new_x : new_y - basepos) * side;\n\n               if (curr_indx == 1) {\n                  this.titlePos = \"center\";\n               } else if (curr_indx == 0) {\n                  this.titlePos = \"left\";\n               } else {\n                  this.titlePos = \"right\";\n               }\n\n               this.changeAxisAttr(0, \"title_position\", this.titlePos, \"title_offset\", this.titleOffset / this.scalingSize);\n\n               drag_rect.remove();\n               drag_rect = null;\n            });\n\n      title_g.style(\"cursor\", \"move\").call(drag_move);\n   }\n\n   /** @summary checks if value inside graphical range, taking into account delta */\n   isInsideGrRange(pos, delta1, delta2) {\n      if (!delta1) delta1 = 0;\n      if (delta2 === undefined) delta2 = delta1;\n      if (this.gr_range < 0)\n         return (pos >= this.gr_range - delta2) && (pos <= delta1);\n      return (pos >= -delta1) && (pos <= this.gr_range + delta2);\n   }\n\n   /** @summary returns graphical range */\n   getGrRange(delta) {\n      if (!delta) delta = 0;\n      if (this.gr_range < 0)\n         return this.gr_range - delta;\n      return this.gr_range + delta;\n   }\n\n   /** @summary If axis direction is negative coordinates direction */\n   isReverseAxis() {\n      return !this.vertical !== (this.getGrRange() > 0);\n   }\n\n   /** @summary Draw axis ticks\n     * @private */\n   drawMainLine(axis_g) {\n      let ending = \"\";\n\n      if (this.endingSize && this.endingStyle) {\n         let sz = (this.gr_range > 0) ? -this.endingSize : this.endingSize,\n             sz7 = Math.round(sz*0.7);\n         sz = Math.round(sz);\n         if (this.vertical)\n            ending = `l${sz7},${sz}M0,${this.gr_range}l${-sz7},${sz}`;\n         else\n            ending = `l${sz},${sz7}M${this.gr_range},0l${sz},${-sz7}`;\n      }\n\n      axis_g.append(\"svg:path\")\n            .attr(\"d\",\"M0,0\" + (this.vertical ? \"v\" : \"h\") + this.gr_range + ending)\n            .call(this.lineatt.func)\n            .style('fill', ending ? \"none\" : null);\n   }\n\n   /** @summary Draw axis ticks\n     * @returns {Promise} with gaps on left and right side\n     * @private */\n   drawTicks(axis_g, side, main_draw) {\n      if (main_draw) this.ticks = [];\n\n      this.handle.reset();\n\n      let res = \"\", ticks_plusminus = 0;\n      if (this.ticksSide == \"both\") {\n         side = 1;\n         ticks_plusminus = 1;\n      }\n\n      while (this.handle.next(true)) {\n\n         let h1 = Math.round(this.ticksSize/4), h2 = 0;\n\n         if (this.handle.kind < 3)\n            h1 = Math.round(this.ticksSize/2);\n\n         let grpos = this.handle.grpos - this.axis_shift;\n\n         if ((this.startingSize || this.endingSize) && !this.isInsideGrRange(grpos, -Math.abs(this.startingSize), -Math.abs(this.endingSize))) continue;\n\n         if (this.handle.kind == 1) {\n            // if not showing labels, not show large tick\n            if ((this.kind == \"labels\") || (this.format(this.handle.tick,true) !== null)) h1 = this.ticksSize;\n\n            if (main_draw) this.ticks.push(grpos); // keep graphical positions of major ticks\n         }\n\n         if (ticks_plusminus > 0) {\n            h2 = -h1;\n         } else if (side < 0) {\n            h2 = -h1; h1 = 0;\n         } else {\n            h2 = 0;\n         }\n\n         res += this.vertical ? `M${h1},${grpos}H${h2}` : `M${grpos},${-h1}V${-h2}`;\n      }\n\n      if (res)\n         axis_g.append(\"svg:path\")\n               .attr(\"d\", res)\n               .style('stroke', this.ticksColor || this.lineatt.color)\n               .style('stroke-width', !this.ticksWidth || (this.ticksWidth == 1) ? null : this.ticksWidth);\n\n       let gap0 = Math.round(0.25*this.ticksSize), gap = Math.round(1.25*this.ticksSize);\n       return { \"-1\": (side > 0) || ticks_plusminus ? gap : gap0,\n                \"1\": (side < 0) || ticks_plusminus ? gap : gap0 };\n   }\n\n   /** @summary Performs labels drawing\n     * @returns {Promise} wwith gaps in both direction */\n   drawLabels(axis_g, side, gaps) {\n      let center_lbls = this.isCenteredLabels(),\n          rotate_lbls = this.labelsFont.angle != 0,\n          textscale = 1, maxtextlen = 0, lbls_tilt = false,\n          label_g = axis_g.append(\"svg:g\").attr(\"class\",\"axis_labels\").property('side', side),\n          lbl_pos = this.handle.lbl_pos || this.handle.major,\n          max_lbl_width = 0, max_lbl_height = 0;\n\n      // function called when text is drawn to analyze width, required to correctly scale all labels\n      function process_drawtext_ready(painter) {\n\n         max_lbl_width = Math.max(max_lbl_width, this.result_width);\n         max_lbl_height = Math.max(max_lbl_height, this.result_height);\n\n         let textwidth = this.result_width;\n\n         if (textwidth && ((!painter.vertical && !rotate_lbls) || (painter.vertical && rotate_lbls)) && !painter.log) {\n            let maxwidth = this.gap_before*0.45 + this.gap_after*0.45;\n            if (!this.gap_before) maxwidth = 0.9*this.gap_after; else\n            if (!this.gap_after) maxwidth = 0.9*this.gap_before;\n            textscale = Math.min(textscale, maxwidth / textwidth);\n         }\n\n         if ((textscale > 0.0001) && (textscale < 0.8) && !painter.vertical && !rotate_lbls && (maxtextlen > 5) && (side > 0))\n            lbls_tilt = true;\n\n         let scale = textscale * (lbls_tilt ? 3 : 1);\n         if ((scale > 0.0001) && (scale < 1))\n            painter.scaleTextDrawing(1/scale, label_g);\n      }\n\n      let lastpos = 0,\n          fix_offset = Math.round((this.vertical ? -side : side) * this.labelsOffset),\n          fix_coord = Math.round((this.vertical ? -side : side) * gaps[side]);\n\n      if (fix_offset)\n         label_g.attr('transform', this.vertical ? `translate(${fix_offset})` : `translate(0,${fix_offset})`);\n\n      label_g.property('fix_offset', fix_offset);\n\n      this.startTextDrawing(this.labelsFont, 'font', label_g);\n\n      for (let nmajor = 0; nmajor < lbl_pos.length; ++nmajor) {\n\n         let lbl = this.format(lbl_pos[nmajor], true);\n         if (lbl === null) continue;\n\n         let pos = Math.round(this.func(lbl_pos[nmajor])),\n             arg = { text: lbl, latex: 1, draw_g: label_g };\n\n         arg.gap_before = (nmajor > 0) ? Math.abs(Math.round(pos - this.func(lbl_pos[nmajor-1]))) : 0,\n         arg.gap_after = (nmajor < lbl_pos.length-1) ? Math.abs(Math.round(this.func(lbl_pos[nmajor+1])-pos)) : 0;\n\n         if (center_lbls) {\n            let gap = arg.gap_after || arg.gap_before;\n            pos = Math.round(pos - (this.vertical ? 0.5*gap : -0.5*gap));\n            if (!this.isInsideGrRange(pos, 5)) continue;\n         }\n\n         maxtextlen = Math.max(maxtextlen, lbl.length);\n\n         pos -= this.axis_shift;\n\n         if ((this.startingSize || this.endingSize) && !this.isInsideGrRange(pos, -Math.abs(this.startingSize), -Math.abs(this.endingSize))) continue;\n\n         if (this.vertical) {\n            arg.x = fix_coord;\n            arg.y = pos;\n            arg.align = rotate_lbls ? ((side<0) ? 23 : 20) : ((side<0) ? 12 : 32);\n         } else {\n            arg.x = pos;\n            arg.y = fix_coord;\n            arg.align = rotate_lbls ? ((side<0) ? 12 : 32) : ((side<0) ? 20 : 23);\n         }\n\n         arg.post_process = process_drawtext_ready;\n\n         this.drawText(arg);\n\n         if (lastpos && (pos!=lastpos) && ((this.vertical && !rotate_lbls) || (!this.vertical && rotate_lbls))) {\n            let axis_step = Math.abs(pos-lastpos);\n            textscale = Math.min(textscale, 0.9*axis_step/this.labelsFont.size);\n         }\n\n         lastpos = pos;\n      }\n\n      if (this.order)\n         this.drawText({ x: this.vertical ? side*5 : this.getGrRange(5),\n                         y: this.has_obstacle ? fix_coord : (this.vertical ? this.getGrRange(3) : -3*side),\n                         align: this.vertical ? ((side < 0) ? 30 : 10) : ((this.has_obstacle ^ (side < 0)) ? 13 : 10),\n                         latex: 1,\n                         text: '#times' + this.formatExp(10, this.order),\n                         draw_g: label_g\n         });\n\n      return this.finishTextDrawing(label_g).then(() => {\n\n        if (lbls_tilt)\n           label_g.selectAll(\"text\").each(function () {\n               let txt = d3_select(this), tr = txt.attr(\"transform\");\n               txt.attr(\"transform\", tr + \" rotate(25)\").style(\"text-anchor\", \"start\");\n           });\n\n         if (this.vertical) {\n            gaps[side] += Math.round(rotate_lbls ? 1.2*max_lbl_height : max_lbl_width + 0.4*this.labelsFont.size) - side*fix_offset;\n         } else {\n            let tilt_height = lbls_tilt ? max_lbl_width * Math.sin(25/180*Math.PI) + max_lbl_height * (Math.cos(25/180*Math.PI) + 0.2) : 0;\n\n            gaps[side] += Math.round(Math.max(rotate_lbls ? max_lbl_width + 0.4*this.labelsFont.size : 1.2*max_lbl_height, 1.2*this.labelsFont.size, tilt_height)) + fix_offset;\n         }\n\n         return gaps;\n      });\n   }\n\n   /** @summary Add zomming rect to axis drawing */\n   addZoomingRect(axis_g, side, lgaps) {\n      if (settings.Zooming && !this.disable_zooming && !isBatchMode()) {\n         let sz = Math.max(lgaps[side], 10),\n             d = this.vertical ? `v${this.gr_range}h${-side*sz}v${-this.gr_range}`\n                               : `h${this.gr_range}v${side*sz}h${-this.gr_range}`;\n         axis_g.append(\"svg:path\")\n               .attr(\"d\",`M0,0${d}z`)\n               .attr(\"class\", \"axis_zoom\")\n               .style(\"opacity\", \"0\")\n               .style(\"cursor\", \"crosshair\");\n      }\n   }\n\n   /** @summary Returns true if axis title is rotated */\n   isTitleRotated() {\n      return this.titleFont && (this.titleFont.angle != (this.vertical ? 270 : 0));\n   }\n\n   /** @summary Draw axis title */\n   drawTitle(axis_g, side, lgaps) {\n      if (!this.fTitle)\n         return Promise.resolve(this);\n\n      let title_g = axis_g.append(\"svg:g\").attr(\"class\", \"axis_title\"),\n          title_shift_x = 0, title_shift_y = 0, title_basepos = 0;\n\n      let rotated = this.isTitleRotated();\n\n      this.startTextDrawing(this.titleFont, 'font', title_g);\n\n      this.title_align = this.titleCenter ? \"middle\" : (this.titleOpposite ^ (this.isReverseAxis() || rotated) ? \"begin\" : \"end\");\n\n      if (this.vertical) {\n         title_basepos = Math.round(-side*(lgaps[side]));\n         title_shift_x = title_basepos + Math.round(-side*this.titleOffset);\n         title_shift_y = Math.round(this.titleCenter ? this.gr_range/2 : (this.titleOpposite ? 0 : this.gr_range));\n         this.drawText({ align: [this.title_align, ((side < 0) ^ rotated ? 'top' : 'bottom')],\n                         text: this.fTitle, draw_g: title_g });\n      } else {\n         title_shift_x = Math.round(this.titleCenter ? this.gr_range/2 : (this.titleOpposite ? 0 : this.gr_range));\n         title_basepos = Math.round(side*lgaps[side]);\n         title_shift_y = title_basepos + Math.round(side*this.titleOffset);\n         this.drawText({ align: [this.title_align, ((side > 0) ^ rotated ? 'top' : 'bottom')],\n                         text: this.fTitle, draw_g: title_g });\n      }\n\n      title_g.attr('transform', `translate(${title_shift_x},${title_shift_y})`)\n             .property('basepos', title_basepos)\n             .property('shift_x', title_shift_x)\n             .property('shift_y', title_shift_y);\n\n      this.addTitleDrag(title_g, side);\n\n      return this.finishTextDrawing(title_g);\n   }\n\n   /** @summary Extract major draw attributes, which are also used in interactive operations\n     * @private  */\n   extractDrawAttributes(scalingSize) {\n      let pp = this.getPadPainter(),\n          rect = pp?.getPadRect() || { width: 10, height: 10 };\n\n      this.scalingSize = scalingSize || (this.vertical ? rect.width : rect.height);\n\n      this.createv7AttLine(\"line_\");\n\n      this.optionUnlab = this.v7EvalAttr(\"labels_hide\", false);\n\n      this.endingStyle = this.v7EvalAttr(\"ending_style\", \"\");\n      this.endingSize = Math.round(this.v7EvalLength(\"ending_size\", this.scalingSize, this.endingStyle ? 0.02 : 0));\n      this.startingSize = Math.round(this.v7EvalLength(\"starting_size\", this.scalingSize, 0));\n      this.ticksSize = this.v7EvalLength(\"ticks_size\", this.scalingSize, 0.02);\n      this.ticksSide = this.v7EvalAttr(\"ticks_side\", \"normal\");\n      this.ticksColor = this.v7EvalColor(\"ticks_color\", \"\");\n      this.ticksWidth = this.v7EvalAttr(\"ticks_width\", 1);\n      if (scalingSize && (this.ticksSize < 0))\n         this.ticksSize = -this.ticksSize;\n\n      this.fTitle = this.v7EvalAttr(\"title_value\", \"\");\n\n      if (this.fTitle) {\n         this.titleFont = this.v7EvalFont(\"title\", { size: 0.03 }, scalingSize || pp?.getPadHeight() || 10);\n         this.titleFont.roundAngle(180, this.vertical ? 270 : 0);\n\n         this.titleOffset = this.v7EvalLength(\"title_offset\", this.scalingSize, 0);\n         this.titlePos = this.v7EvalAttr(\"title_position\", \"right\");\n         this.titleCenter = (this.titlePos == \"center\");\n         this.titleOpposite = (this.titlePos == \"left\");\n      } else {\n         delete this.titleFont;\n         delete this.titleOffset;\n         delete this.titlePos;\n      }\n\n      // TODO: remove old scaling factors for labels and ticks\n      this.labelsFont = this.v7EvalFont(\"labels\", { size: scalingSize ? 0.05 : 0.03 });\n      this.labelsFont.roundAngle(180);\n      if (this.labelsFont.angle) this.labelsFont.angle = 270;\n      this.labelsOffset = this.v7EvalLength(\"labels_offset\", this.scalingSize, 0);\n\n      if (scalingSize) this.ticksSize = this.labelsFont.size*0.5; // old lego scaling factor\n\n      if (this.maxTickSize && (this.ticksSize > this.maxTickSize))\n         this.ticksSize = this.maxTickSize;\n   }\n\n   /** @summary Performs axis drawing\n     * @returns {Promise} which resolved when drawing is completed */\n   drawAxis(layer, transform, side) {\n      let axis_g = layer;\n\n      if (side === undefined) side = 1;\n\n      if (!this.standalone) {\n         axis_g = layer.select(\".\" + this.name + \"_container\");\n         if (axis_g.empty())\n            axis_g = layer.append(\"svg:g\").attr(\"class\", this.name + \"_container\");\n         else\n            axis_g.selectAll(\"*\").remove();\n      }\n\n      axis_g.attr(\"transform\", transform || null);\n\n      this.extractDrawAttributes();\n      this.axis_g = axis_g;\n      this.side = side;\n\n      if (this.ticksSide == \"invert\") side = -side;\n\n      if (this.standalone)\n         this.drawMainLine(axis_g);\n\n      let optionNoopt = false,  // no ticks position optimization\n          optionInt = false,    // integer labels\n          optionNoexp = false;  // do not create exp\n\n      this.handle = this.createTicks(false, optionNoexp, optionNoopt, optionInt);\n\n      // first draw ticks\n      let tgaps = this.drawTicks(axis_g, side, true);\n\n      // draw labels\n      let labelsPromise = this.optionUnlab ? Promise.resolve(tgaps) : this.drawLabels(axis_g, side, tgaps);\n\n      return labelsPromise.then(lgaps => {\n         // when drawing axis on frame, zoom rect should be always outside\n         this.addZoomingRect(axis_g, this.standalone ? side : this.side, lgaps);\n\n         return this.drawTitle(axis_g, side, lgaps);\n      });\n   }\n\n   /** @summary Assign handler, which is called when axis redraw by interactive changes\n     * @desc Used by palette painter to reassign iteractive handlers\n     * @private */\n   setAfterDrawHandler(handler) {\n      this._afterDrawAgain = handler;\n   }\n\n   /** @summary Draw axis with the same settings, used by interactive changes */\n   drawAxisAgain() {\n      if (!this.axis_g || !this.side) return;\n\n      this.axis_g.selectAll(\"*\").remove();\n\n      this.extractDrawAttributes();\n\n      let side = this.side;\n      if (this.ticksSide == \"invert\") side = -side;\n\n      if (this.standalone)\n         this.drawMainLine(this.axis_g);\n\n      // first draw ticks\n      let tgaps = this.drawTicks(this.axis_g, side, false);\n\n      let labelsPromise = this.optionUnlab ? Promise.resolve(tgaps) : this.drawLabels(this.axis_g, side, tgaps);\n\n      return labelsPromise.then(lgaps => {\n         // when drawing axis on frame, zoom rect should be always outside\n         this.addZoomingRect(this.axis_g, this.standalone ? side : this.side, lgaps);\n\n         return this.drawTitle(this.axis_g, side, lgaps);\n      }).then(() => {\n         if (typeof this._afterDrawAgain == 'function')\n            this._afterDrawAgain();\n      });\n   }\n\n   /** @summary Draw axis again on opposite frame size */\n   drawAxisOtherPlace(layer, transform, side, only_ticks) {\n      let axis_g = layer.select(\".\" + this.name + \"_container2\");\n      if (axis_g.empty())\n         axis_g = layer.append(\"svg:g\").attr(\"class\",this.name + \"_container2\");\n      else\n         axis_g.selectAll(\"*\").remove();\n\n      axis_g.attr(\"transform\", transform || null);\n\n      if (this.ticksSide == \"invert\") side = -side;\n\n      // draw ticks again\n      let tgaps = this.drawTicks(axis_g, side, false);\n\n      // draw labels again\n      let promise = this.optionUnlab || only_ticks ? Promise.resolve(tgaps) : this.drawLabels(axis_g, side, tgaps);\n\n      return promise.then(lgaps => {\n         this.addZoomingRect(axis_g, side, lgaps);\n         return true;\n      });\n   }\n\n   /** @summary Change zooming in standalone mode */\n   zoomStandalone(min,max) {\n      this.changeAxisAttr(1, \"zoomMin\", min, \"zoomMax\", max);\n   }\n\n   /** @summary Redraw axis, used in standalone mode for RAxisDrawable */\n   redraw() {\n\n      let drawable = this.getObject(),\n          pp   = this.getPadPainter(),\n          pos  = pp.getCoordinate(drawable.fPos),\n          len  = pp.getPadLength(drawable.fVertical, drawable.fLength),\n          reverse = this.v7EvalAttr(\"reverse\", false),\n          labels_len = drawable.fLabels.length,\n          min = (labels_len > 0) ? 0 : this.v7EvalAttr(\"min\", 0),\n          max = (labels_len > 0) ? labels_len : this.v7EvalAttr(\"max\", 100);\n\n      // in vertical direction axis drawn in negative direction\n      if (drawable.fVertical) len -= pp.getPadHeight();\n\n      let smin = this.v7EvalAttr(\"zoomMin\"),\n          smax = this.v7EvalAttr(\"zoomMax\");\n      if (smin === smax) {\n         smin = min; smax = max;\n      }\n\n      this.configureAxis(\"axis\", min, max, smin, smax, drawable.fVertical, undefined, len, { reverse, labels: labels_len > 0 });\n\n      this.createG();\n\n      this.standalone = true;  // no need to clean axis container\n\n      let promise = this.drawAxis(this.draw_g, `translate(${pos.x},${pos.y})`);\n\n      if (isBatchMode()) return promise;\n\n      return promise.then(() => {\n         if (settings.ContextMenu)\n            this.draw_g.on(\"contextmenu\", evnt => {\n               evnt.stopPropagation(); // disable main context menu\n               evnt.preventDefault();  // disable browser context menu\n               createMenu(evnt, this).then(menu => {\n                 menu.add(\"header:RAxisDrawable\");\n                 menu.add(\"Unzoom\", () => this.zoomStandalone());\n                 this.fillAxisContextMenu(menu, \"\");\n                 menu.show();\n               });\n            });\n\n         addDragHandler(this, { x: pos.x, y: pos.y, width: this.vertical ? 10 : len, height: this.vertical ? len : 10,\n                                only_move: true, redraw: d => this.positionChanged(d) });\n\n         this.draw_g.on(\"dblclick\", () => this.zoomStandalone());\n\n         if (settings.ZoomWheel)\n            this.draw_g.on(\"wheel\", evnt => {\n               evnt.stopPropagation();\n               evnt.preventDefault();\n\n               let pos = d3_pointer(evnt, this.draw_g.node()),\n                   coord = this.vertical ? (1 - pos[1] / len) : pos[0] / len,\n                   item = this.analyzeWheelEvent(evnt, coord);\n\n               if (item.changed) this.zoomStandalone(item.min, item.max);\n            });\n      });\n   }\n\n   /** @summary Process interactive moving of the axis drawing */\n   positionChanged(drag) {\n      let drawable = this.getObject(),\n          rect = this.getPadPainter().getPadRect(),\n          xn = drag.x / rect.width,\n          yn = 1 - drag.y / rect.height;\n\n      drawable.fPos.fHoriz.fArr = [ xn ];\n      drawable.fPos.fVert.fArr = [ yn ];\n\n      this.submitCanvExec(`SetPos({${xn.toFixed(4)},${yn.toFixed(4)}})`);\n   }\n\n   /** @summary Change axis attribute, submit changes to server and redraw axis when specified\n     * @desc Arguments as redraw_mode, name1, value1, name2, value2, ... */\n   changeAxisAttr(redraw_mode) {\n      let changes = {}, indx = 1;\n      while (indx < arguments.length - 1) {\n         this.v7AttrChange(changes, arguments[indx], arguments[indx+1]);\n         this.v7SetAttr(arguments[indx], arguments[indx+1]);\n         indx += 2;\n      }\n      this.v7SendAttrChanges(changes, false); // do not invoke canvas update on the server\n      if (redraw_mode === 1) {\n         if (this.standalone)\n            this.redraw();\n         else\n            this.drawAxisAgain();\n      } else if (redraw_mode)\n         this.redrawPad();\n   }\n\n   /** @summary Change axis log scale kind */\n   changeAxisLog(arg) {\n      if ((this.kind == \"labels\") || (this.kind == 'time')) return;\n      if (arg === 'toggle') arg = this.log ? 0 : 10;\n\n      arg = parseFloat(arg);\n      if (Number.isFinite(arg)) this.changeAxisAttr(2, \"log\", arg, \"symlog\", 0);\n   }\n\n   /** @summary Provide context menu for axis */\n   fillAxisContextMenu(menu, kind) {\n\n      if (kind) menu.add(\"Unzoom\", () => this.getFramePainter().unzoom(kind));\n\n      menu.add(\"sub:Log scale\", () => this.changeAxisLog('toggle'));\n      menu.addchk(!this.log && !this.symlog, \"linear\", 0, arg => this.changeAxisLog(arg));\n      menu.addchk(this.log && !this.symlog && (this.logbase==10), \"log10\", () => this.changeAxisLog(10));\n      menu.addchk(this.log && !this.symlog && (this.logbase==2), \"log2\", () => this.changeAxisLog(2));\n      menu.addchk(this.log && !this.symlog && Math.abs(this.logbase - Math.exp(1)) < 0.1, \"ln\", () => this.changeAxisLog(Math.exp(1)));\n      menu.addchk(!this.log && this.symlog, \"symlog\", 0, () =>\n         menu.input(\"set symlog constant\", this.symlog || 10, \"float\").then(v => this.changeAxisAttr(2,\"symlog\", v)));\n      menu.add(\"endsub:\");\n\n      menu.add(\"Divisions\", () => menu.input(\"Set axis devisions\", this.v7EvalAttr(\"ndiv\", 508), \"int\").then(val => this.changeAxisAttr(2, \"ndiv\", val)));\n\n      menu.add(\"sub:Ticks\");\n      menu.addRColorMenu(\"color\", this.ticksColor, col => this.changeAxisAttr(1, \"ticks_color\", col));\n      menu.addSizeMenu(\"size\", 0, 0.05, 0.01, this.ticksSize/this.scalingSize, sz => this.changeAxisAttr(1, \"ticks_size\", sz));\n      menu.addSelectMenu(\"side\", [\"normal\", \"invert\", \"both\"], this.ticksSide, side => this.changeAxisAttr(1, \"ticks_side\", side));\n      menu.add(\"endsub:\");\n\n      if (!this.optionUnlab && this.labelsFont) {\n         menu.add(\"sub:Labels\");\n         menu.addSizeMenu(\"offset\", -0.05, 0.05, 0.01, this.labelsOffset/this.scalingSize,\n                         offset => this.changeAxisAttr(1, \"labels_offset\", offset));\n         menu.addRAttrTextItems(this.labelsFont, { noangle: 1, noalign: 1 },\n               change => this.changeAxisAttr(1, \"labels_\" + change.name, change.value));\n         menu.addchk(this.labelsFont.angle, \"rotate\", res => this.changeAxisAttr(1, \"labels_angle\", res ? 180 : 0));\n         menu.add(\"endsub:\");\n      }\n\n      menu.add(\"sub:Title\", () => menu.input(\"Enter axis title\", this.fTitle).then(t => this.changeAxisAttr(1, \"title_value\", t)));\n\n      if (this.fTitle) {\n         menu.addSizeMenu(\"offset\", -0.05, 0.05, 0.01, this.titleOffset/this.scalingSize,\n                           offset => this.changeAxisAttr(1, \"title_offset\", offset));\n\n         menu.addSelectMenu(\"position\", [\"left\", \"center\", \"right\"], this.titlePos,\n                            pos => this.changeAxisAttr(1, \"title_position\", pos));\n\n         menu.addchk(this.isTitleRotated(), \"rotate\", flag => this.changeAxisAttr(1, \"title_angle\", flag ? 180 : 0));\n\n         menu.addRAttrTextItems(this.titleFont, { noangle: 1, noalign: 1 }, change => this.changeAxisAttr(1, \"title_\" + change.name, change.value));\n      }\n\n      menu.add(\"endsub:\");\n      return true;\n   }\n\n} // class RAxisPainter\n\nexport { RAxisPainter };\n","import { gStyle, settings, create, isBatchMode } from '../core.mjs';\nimport { pointer as d3_pointer } from '../d3.mjs';\nimport { getSvgLineStyle } from '../base/TAttLineHandler.mjs';\nimport { TAxisPainter } from './TAxisPainter.mjs';\nimport { RAxisPainter } from './RAxisPainter.mjs';\nimport { FrameInteractive } from './TFramePainter.mjs';\nimport { RObjectPainter } from '../base/RObjectPainter.mjs';\n\n\n/**\n * @summary Painter class for RFrame, main handler for interactivity\n *\n * @private\n */\n\nclass RFramePainter extends RObjectPainter {\n\n   /** @summary constructor\n     * @param {object|string} dom - DOM element for drawing or element id\n     * @param {object} tframe - RFrame object */\n   constructor(dom, tframe) {\n      super(dom, tframe, \"\", \"frame\");\n      this.mode3d = false;\n      this.xmin = this.xmax = 0; // no scale specified, wait for objects drawing\n      this.ymin = this.ymax = 0; // no scale specified, wait for objects drawing\n      this.axes_drawn = false;\n      this.keys_handler = null;\n      this.projection = 0; // different projections\n      this.v7_frame = true; // indicator of v7, used in interactive part\n   }\n\n   /** @summary Returns frame painter - object itself */\n   getFramePainter() { return this; }\n\n   /** @summary Returns true if it is ROOT6 frame\n    * @private */\n   is_root6() { return false; }\n\n   /** @summary Set active flag for frame - can block some events\n    * @private */\n   setFrameActive(on) {\n      this.enabledKeys = on && settings.HandleKeys ? true : false;\n      // used only in 3D mode\n      if (this.control)\n         this.control.enableKeys = this.enabledKeys;\n   }\n\n   setLastEventPos(pnt) {\n      // set position of last context menu event, can be\n      this.fLastEventPnt = pnt;\n   }\n\n   getLastEventPos() {\n      // return position of last event\n      return this.fLastEventPnt;\n   }\n\n   /** @summary Update graphical attributes */\n   updateAttributes(force) {\n      if ((this.fX1NDC === undefined) || (force && !this.modified_NDC)) {\n\n         let rect = this.getPadPainter().getPadRect();\n         this.fX1NDC = this.v7EvalLength(\"margins_left\", rect.width, settings.FrameNDC.fX1NDC) / rect.width;\n         this.fY1NDC = this.v7EvalLength(\"margins_bottom\", rect.height, settings.FrameNDC.fY1NDC) / rect.height;\n         this.fX2NDC = 1 - this.v7EvalLength(\"margins_right\", rect.width, 1-settings.FrameNDC.fX2NDC) / rect.width;\n         this.fY2NDC = 1 - this.v7EvalLength(\"margins_top\", rect.height, 1-settings.FrameNDC.fY2NDC) / rect.height;\n      }\n\n      if (!this.fillatt)\n         this.createv7AttFill();\n\n      this.createv7AttLine(\"border_\");\n   }\n\n   /** @summary Returns coordinates transformation func */\n   getProjectionFunc() {\n      switch (this.projection) {\n         // Aitoff2xy\n         case 1: return (l, b) => {\n            const DegToRad = Math.PI/180,\n                  alpha2 = (l/2)*DegToRad,\n                  delta  = b*DegToRad,\n                  r2     = Math.sqrt(2),\n                  f      = 2*r2/Math.PI,\n                  cdec   = Math.cos(delta),\n                  denom  = Math.sqrt(1. + cdec*Math.cos(alpha2));\n            return {\n               x: cdec*Math.sin(alpha2)*2.*r2/denom/f/DegToRad,\n               y: Math.sin(delta)*r2/denom/f/DegToRad\n            };\n         };\n         // mercator\n         case 2: return (l, b) => { return { x: l, y: Math.log(Math.tan((Math.PI/2 + b/180*Math.PI)/2)) }; };\n         // sinusoidal\n         case 3: return (l, b) => { return { x: l*Math.cos(b/180*Math.PI), y: b } };\n         // parabolic\n         case 4: return (l, b) => { return { x: l*(2.*Math.cos(2*b/180*Math.PI/3) - 1), y: 180*Math.sin(b/180*Math.PI/3) }; };\n      }\n   }\n\n   /** @summary Rcalculate frame ranges using specified projection functions\n     * @desc Not yet used in v7 */\n   recalculateRange(Proj) {\n      this.projection = Proj || 0;\n\n      if ((this.projection == 2) && ((this.scale_ymin <= -90 || this.scale_ymax >=90))) {\n         console.warn(\"Mercator Projection\", \"Latitude out of range\", this.scale_ymin, this.scale_ymax);\n         this.projection = 0;\n      }\n\n      let func = this.getProjectionFunc();\n      if (!func) return;\n\n      let pnts = [ func(this.scale_xmin, this.scale_ymin),\n                   func(this.scale_xmin, this.scale_ymax),\n                   func(this.scale_xmax, this.scale_ymax),\n                   func(this.scale_xmax, this.scale_ymin) ];\n      if (this.scale_xmin<0 && this.scale_xmax>0) {\n         pnts.push(func(0, this.scale_ymin));\n         pnts.push(func(0, this.scale_ymax));\n      }\n      if (this.scale_ymin<0 && this.scale_ymax>0) {\n         pnts.push(func(this.scale_xmin, 0));\n         pnts.push(func(this.scale_xmax, 0));\n      }\n\n      this.original_xmin = this.scale_xmin;\n      this.original_xmax = this.scale_xmax;\n      this.original_ymin = this.scale_ymin;\n      this.original_ymax = this.scale_ymax;\n\n      this.scale_xmin = this.scale_xmax = pnts[0].x;\n      this.scale_ymin = this.scale_ymax = pnts[0].y;\n\n      for (let n = 1; n < pnts.length; ++n) {\n         this.scale_xmin = Math.min(this.scale_xmin, pnts[n].x);\n         this.scale_xmax = Math.max(this.scale_xmax, pnts[n].x);\n         this.scale_ymin = Math.min(this.scale_ymin, pnts[n].y);\n         this.scale_ymax = Math.max(this.scale_ymax, pnts[n].y);\n      }\n   }\n\n   /** @summary Draw axes grids\n     * @desc Called immediately after axes drawing */\n   drawGrids() {\n      let layer = this.getFrameSvg().select(\".grid_layer\");\n\n      layer.selectAll(\".xgrid\").remove();\n      layer.selectAll(\".ygrid\").remove();\n\n      let h = this.getFrameHeight(),\n          w = this.getFrameWidth(),\n          gridx = this.v7EvalAttr(\"gridX\", false),\n          gridy = this.v7EvalAttr(\"gridY\", false),\n          grid_style = getSvgLineStyle(gStyle.fGridStyle),\n          grid_color = (gStyle.fGridColor > 0) ? this.getColor(gStyle.fGridColor) : \"black\";\n\n      if (this.x_handle)\n         this.x_handle.draw_grid = gridx;\n\n      // add a grid on x axis, if the option is set\n      if (this.x_handle && this.x_handle.draw_grid) {\n         let grid = \"\";\n         for (let n = 0; n < this.x_handle.ticks.length; ++n)\n            if (this.swap_xy)\n               grid += \"M0,\"+(h+this.x_handle.ticks[n])+\"h\"+w;\n            else\n               grid += \"M\"+this.x_handle.ticks[n]+\",0v\"+h;\n\n         if (grid.length > 0)\n            layer.append(\"svg:path\")\n                 .attr(\"class\", \"xgrid\")\n                 .attr(\"d\", grid)\n                 .style('stroke',grid_color)\n                 .style(\"stroke-width\", gStyle.fGridWidth)\n                 .style(\"stroke-dasharray\", grid_style);\n      }\n\n      if (this.y_handle)\n         this.y_handle.draw_grid = gridy;\n\n      // add a grid on y axis, if the option is set\n      if (this.y_handle && this.y_handle.draw_grid) {\n         let grid = \"\";\n         for (let n = 0; n < this.y_handle.ticks.length; ++n)\n            if (this.swap_xy)\n               grid += \"M\"+this.y_handle.ticks[n]+\",0v\"+h;\n            else\n               grid += \"M0,\"+(h+this.y_handle.ticks[n])+\"h\"+w;\n\n         if (grid.length > 0)\n          layer.append(\"svg:path\")\n               .attr(\"class\", \"ygrid\")\n               .attr(\"d\", grid)\n               .style('stroke', grid_color)\n               .style(\"stroke-width\", gStyle.fGridWidth)\n               .style(\"stroke-dasharray\", grid_style);\n      }\n   }\n\n   /** @summary Converts \"raw\" axis value into text */\n   axisAsText(axis, value) {\n      let handle = this[axis+\"_handle\"];\n\n      if (handle)\n         return handle.axisAsText(value, settings[axis.toUpperCase() + \"ValuesFormat\"]);\n\n      return value.toPrecision(4);\n   }\n\n   /** @summary Set axix range */\n   _setAxisRange(prefix, vmin, vmax) {\n      let nmin = prefix + \"min\", nmax = prefix + \"max\";\n      if (this[nmin] != this[nmax]) return;\n      let min = this.v7EvalAttr(prefix + \"_min\"),\n          max = this.v7EvalAttr(prefix + \"_max\");\n\n      if (min !== undefined) vmin = min;\n      if (max !== undefined) vmax = max;\n\n      if (vmin < vmax) {\n         this[nmin] = vmin;\n         this[nmax] = vmax;\n      }\n\n      let nzmin = \"zoom_\" + prefix + \"min\", nzmax = \"zoom_\" + prefix + \"max\";\n\n      if ((this[nzmin] == this[nzmax]) && !this.zoomChangedInteractive(prefix)) {\n         min = this.v7EvalAttr(prefix + \"_zoomMin\");\n         max = this.v7EvalAttr(prefix + \"_zoomMax\");\n\n         if ((min !== undefined) || (max !== undefined)) {\n            this[nzmin] = (min === undefined) ? this[nmin] : min;\n            this[nzmax] = (max === undefined) ? this[nmax] : max;\n         }\n      }\n   }\n\n   /** @summary Set axes ranges for drawing, check configured attributes if range already specified */\n   setAxesRanges(xaxis, xmin, xmax, yaxis, ymin, ymax, zaxis, zmin, zmax) {\n      if (this.axes_drawn) return;\n      this.xaxis = xaxis;\n      this._setAxisRange(\"x\", xmin, xmax);\n      this.yaxis = yaxis;\n      this._setAxisRange(\"y\", ymin, ymax);\n      this.zaxis = zaxis;\n      this._setAxisRange(\"z\", zmin, zmax);\n   }\n\n   /** @summary Set secondary axes ranges */\n   setAxes2Ranges(second_x, xaxis, xmin, xmax, second_y, yaxis, ymin, ymax) {\n      if (second_x) {\n         this.x2axis = xaxis;\n         this._setAxisRange(\"x2\", xmin, xmax);\n      }\n      if (second_y) {\n         this.y2axis = yaxis;\n         this._setAxisRange(\"y2\", ymin, ymax);\n      }\n   }\n\n   /** @summary Create x,y objects which maps user coordinates into pixels\n     * @desc Must be used only for v6 objects, see TFramePainter for more details\n     * @private */\n   createXY(opts) {\n      if (this.self_drawaxes) return;\n\n      this.cleanXY(); // remove all previous configurations\n\n      if (!opts) opts = {};\n\n      this.v6axes = true;\n      this.swap_xy = opts.swap_xy || false;\n      this.reverse_x = opts.reverse_x || false;\n      this.reverse_y = opts.reverse_y || false;\n\n      this.logx = this.v7EvalAttr(\"x_log\", 0);\n      this.logy = this.v7EvalAttr(\"y_log\", 0);\n\n      let w = this.getFrameWidth(), h = this.getFrameHeight();\n\n      this.scale_xmin = this.xmin;\n      this.scale_xmax = this.xmax;\n\n      this.scale_ymin = this.ymin;\n      this.scale_ymax = this.ymax;\n\n      if (opts.extra_y_space) {\n         let log_scale = this.swap_xy ? this.logx : this.logy;\n         if (log_scale && (this.scale_ymax > 0))\n            this.scale_ymax = Math.exp(Math.log(this.scale_ymax)*1.1);\n         else\n            this.scale_ymax += (this.scale_ymax - this.scale_ymin)*0.1;\n      }\n\n      // if (opts.check_pad_range) {\n         // take zooming out of pad or axis attributes - skip!\n      // }\n\n      if ((this.zoom_ymin == this.zoom_ymax) && (opts.zoom_ymin != opts.zoom_ymax) && !this.zoomChangedInteractive(\"y\")) {\n         this.zoom_ymin = opts.zoom_ymin;\n         this.zoom_ymax = opts.zoom_ymax;\n      }\n\n      if (this.zoom_xmin != this.zoom_xmax) {\n         this.scale_xmin = this.zoom_xmin;\n         this.scale_xmax = this.zoom_xmax;\n      }\n\n      if (this.zoom_ymin != this.zoom_ymax) {\n         this.scale_ymin = this.zoom_ymin;\n         this.scale_ymax = this.zoom_ymax;\n      }\n\n      let xaxis = this.xaxis, yaxis = this.yaxis;\n      if (xaxis?._typename != \"TAxis\") xaxis = create(\"TAxis\");\n      if (yaxis?._typename != \"TAxis\") yaxis = create(\"TAxis\");\n\n      this.x_handle = new TAxisPainter(this.getDom(), xaxis, true);\n      this.x_handle.setPadName(this.getPadName());\n      this.x_handle.optionUnlab = this.v7EvalAttr(\"x_labels_hide\", false);\n\n      this.x_handle.configureAxis(\"xaxis\", this.xmin, this.xmax, this.scale_xmin, this.scale_xmax, this.swap_xy, this.swap_xy ? [0,h] : [0,w],\n                                      { reverse: this.reverse_x,\n                                        log: this.swap_xy ? this.logy : this.logx,\n                                        symlog: this.swap_xy ? opts.symlog_y : opts.symlog_x,\n                                        logcheckmin: this.swap_xy,\n                                        logminfactor: 0.0001 });\n\n      this.x_handle.assignFrameMembers(this,\"x\");\n\n      this.y_handle = new TAxisPainter(this.getDom(), yaxis, true);\n      this.y_handle.setPadName(this.getPadName());\n      this.y_handle.optionUnlab = this.v7EvalAttr(\"y_labels_hide\", false);\n\n      this.y_handle.configureAxis(\"yaxis\", this.ymin, this.ymax, this.scale_ymin, this.scale_ymax, !this.swap_xy, this.swap_xy ? [0,w] : [0,h],\n                                      { reverse: this.reverse_y,\n                                        log: this.swap_xy ? this.logx : this.logy,\n                                        symlog: this.swap_xy ? opts.symlog_x : opts.symlog_y,\n                                        logcheckmin: (opts.ndim < 2) || this.swap_xy,\n                                        log_min_nz: opts.ymin_nz && (opts.ymin_nz < 0.01*this.ymax) ? 0.3 * opts.ymin_nz : 0,\n                                        logminfactor: 3e-4 });\n\n      this.y_handle.assignFrameMembers(this,\"y\");\n   }\n\n   /** @summary Identify if requested axes are drawn\n     * @desc Checks if x/y axes are drawn. Also if second side is already there */\n   hasDrawnAxes(second_x, second_y) {\n      return !second_x && !second_y ? this.axes_drawn : false;\n   }\n\n   /** @summary Draw configured axes on the frame\n     * @desc axes can be drawn only for main histogram  */\n   drawAxes() {\n\n      if (this.axes_drawn || (this.xmin == this.xmax) || (this.ymin == this.ymax))\n         return Promise.resolve(this.axes_drawn);\n\n      let ticksx = this.v7EvalAttr(\"ticksX\", 1),\n          ticksy = this.v7EvalAttr(\"ticksY\", 1),\n          sidex = 1, sidey = 1;\n\n      if (this.v7EvalAttr(\"swapX\", false)) sidex = -1;\n      if (this.v7EvalAttr(\"swapY\", false)) sidey = -1;\n\n      let w = this.getFrameWidth(), h = this.getFrameHeight();\n\n      if (!this.v6axes) {\n         // this is partially same as v6 createXY method\n\n         this.cleanupAxes();\n\n         this.swap_xy = false;\n\n         if (this.zoom_xmin != this.zoom_xmax) {\n            this.scale_xmin = this.zoom_xmin;\n            this.scale_xmax = this.zoom_xmax;\n         } else {\n            this.scale_xmin = this.xmin;\n            this.scale_xmax = this.xmax;\n         }\n\n         if (this.zoom_ymin != this.zoom_ymax) {\n            this.scale_ymin = this.zoom_ymin;\n            this.scale_ymax = this.zoom_ymax;\n         } else {\n            this.scale_ymin = this.ymin;\n            this.scale_ymax = this.ymax;\n         }\n\n         this.recalculateRange(0);\n\n         this.x_handle = new RAxisPainter(this.getDom(), this, this.xaxis, \"x_\");\n         this.x_handle.setPadName(this.getPadName());\n         this.x_handle.snapid = this.snapid;\n         this.x_handle.draw_swapside = (sidex < 0);\n         this.x_handle.draw_ticks = ticksx;\n\n         this.y_handle = new RAxisPainter(this.getDom(), this, this.yaxis, \"y_\");\n         this.y_handle.setPadName(this.getPadName());\n         this.y_handle.snapid = this.snapid;\n         this.y_handle.draw_swapside = (sidey < 0);\n         this.y_handle.draw_ticks = ticksy;\n\n         this.z_handle = new RAxisPainter(this.getDom(), this, this.zaxis, \"z_\");\n         this.z_handle.setPadName(this.getPadName());\n         this.z_handle.snapid = this.snapid;\n\n         this.x_handle.configureAxis(\"xaxis\", this.xmin, this.xmax, this.scale_xmin, this.scale_xmax, false, [0,w], w, { reverse: false });\n         this.x_handle.assignFrameMembers(this,\"x\");\n\n         this.y_handle.configureAxis(\"yaxis\", this.ymin, this.ymax, this.scale_ymin, this.scale_ymax, true, [h,0], -h, { reverse: false });\n         this.y_handle.assignFrameMembers(this,\"y\");\n\n         // only get basic properties like log scale\n         this.z_handle.configureZAxis(\"zaxis\", this);\n      }\n\n      let layer = this.getFrameSvg().select(\".axis_layer\");\n\n      this.x_handle.has_obstacle = false;\n\n      let draw_horiz = this.swap_xy ? this.y_handle : this.x_handle,\n          draw_vertical = this.swap_xy ? this.x_handle : this.y_handle,\n          pp = this.getPadPainter(), pr;\n\n      if (pp?._fast_drawing) {\n         pr = Promise.resolve(true); // do nothing\n      } else if (this.v6axes) {\n\n         // in v7 ticksx/y values shifted by 1 relative to v6\n         // In v7 ticksx==0 means no ticks, ticksx==1 equivalent to ==0 in v6\n\n         let can_adjust_frame = false, disable_x_draw = false, disable_y_draw = false;\n\n         draw_horiz.disable_ticks = (ticksx <= 0);\n         draw_vertical.disable_ticks = (ticksy <= 0);\n\n         let pr1 = draw_horiz.drawAxis(layer, w, h,\n                                   draw_horiz.invert_side ? undefined : `translate(0,${h})`,\n                                   (ticksx > 1) ? -h : 0, disable_x_draw,\n                                   undefined, false);\n\n         let pr2 =  draw_vertical.drawAxis(layer, w, h,\n                                      draw_vertical.invert_side ? `translate(${w})` : undefined,\n                                      (ticksy > 1) ? w : 0, disable_y_draw,\n                                      draw_vertical.invert_side ? 0 : this._frame_x, can_adjust_frame);\n\n         pr = Promise.all([pr1,pr2]).then(() => this.drawGrids());\n\n      } else {\n\n         let arr = [];\n\n         if (ticksx > 0)\n            arr.push(draw_horiz.drawAxis(layer, (sidex > 0) ? `translate(0,${h})` : \"\", sidex));\n\n         if (ticksy > 0)\n            arr.push(draw_vertical.drawAxis(layer, (sidey > 0) ? `translate(0,${h})` : `translate(${w},${h})`, sidey));\n\n         pr = Promise.all(arr).then(() => {\n            arr = [];\n            if (ticksx > 1)\n               arr.push(draw_horiz.drawAxisOtherPlace(layer, (sidex < 0) ? `translate(0,${h})` : \"\", -sidex, ticksx == 2));\n\n            if (ticksy > 1)\n               arr.push(draw_vertical.drawAxisOtherPlace(layer, (sidey < 0) ? `translate(0,${h})` : `translate(${w},${h})`, -sidey, ticksy == 2));\n            return Promise.all(arr);\n         }).then(() => this.drawGrids());\n      }\n\n      return pr.then(() => {\n         this.axes_drawn = true;\n         return true;\n      });\n   }\n\n   /** @summary Draw secondary configuread axes */\n   drawAxes2(second_x, second_y) {\n      let w = this.getFrameWidth(), h = this.getFrameHeight(),\n          layer = this.getFrameSvg().select(\".axis_layer\"),\n          pr1, pr2;\n\n      if (second_x) {\n         if (this.zoom_x2min != this.zoom_x2max) {\n            this.scale_x2min = this.zoom_x2min;\n            this.scale_x2max = this.zoom_x2max;\n         } else {\n           this.scale_x2min = this.x2min;\n           this.scale_x2max = this.x2max;\n         }\n         this.x2_handle = new RAxisPainter(this.getDom(), this, this.x2axis, \"x2_\");\n         this.x2_handle.setPadName(this.getPadName());\n         this.x2_handle.snapid = this.snapid;\n\n         this.x2_handle.configureAxis(\"x2axis\", this.x2min, this.x2max, this.scale_x2min, this.scale_x2max, false, [0,w], w, { reverse: false });\n         this.x2_handle.assignFrameMembers(this,\"x2\");\n\n         pr1 = this.x2_handle.drawAxis(layer, \"\", -1);\n      }\n\n      if (second_y) {\n         if (this.zoom_y2min != this.zoom_y2max) {\n            this.scale_y2min = this.zoom_y2min;\n            this.scale_y2max = this.zoom_y2max;\n         } else {\n            this.scale_y2min = this.y2min;\n            this.scale_y2max = this.y2max;\n         }\n\n         this.y2_handle = new RAxisPainter(this.getDom(), this, this.y2axis, \"y2_\");\n         this.y2_handle.setPadName(this.getPadName());\n         this.y2_handle.snapid = this.snapid;\n\n         this.y2_handle.configureAxis(\"y2axis\", this.y2min, this.y2max, this.scale_y2min, this.scale_y2max, true, [h,0], -h, { reverse: false });\n         this.y2_handle.assignFrameMembers(this,\"y2\");\n\n         pr2 = this.y2_handle.drawAxis(layer, `translate(${w},${h})`, -1);\n      }\n\n      return Promise.all([pr1,pr2]);\n   }\n\n   /** @summary Return functions to create x/y points based on coordinates\n     * @desc In default case returns frame painter itself\n     * @private */\n   getGrFuncs(second_x, second_y) {\n      let use_x2 = second_x && this.grx2,\n          use_y2 = second_y && this.gry2;\n      if (!use_x2 && !use_y2) return this;\n\n      return {\n         use_x2: use_x2,\n         grx: use_x2 ? this.grx2 : this.grx,\n         x_handle: use_x2 ? this.x2_handle : this.x_handle,\n         logx: use_x2 ? this.x2_handle.log : this.x_handle.log,\n         scale_xmin: use_x2 ? this.scale_x2min : this.scale_xmin,\n         scale_xmax: use_x2 ? this.scale_x2max : this.scale_xmax,\n         use_y2: use_y2,\n         gry: use_y2 ? this.gry2 : this.gry,\n         y_handle: use_y2 ? this.y2_handle : this.y_handle,\n         logy: use_y2 ? this.y2_handle.log : this.y_handle.log,\n         scale_ymin: use_y2 ? this.scale_y2min : this.scale_ymin,\n         scale_ymax: use_y2 ? this.scale_y2max : this.scale_ymax,\n         swap_xy: this.swap_xy,\n         fp: this,\n         revertAxis(name, v) {\n            if ((name == \"x\") && this.use_x2) name = \"x2\";\n            if ((name == \"y\") && this.use_y2) name = \"y2\";\n            return this.fp.revertAxis(name, v);\n         },\n         axisAsText(name, v) {\n            if ((name == \"x\") && this.use_x2) name = \"x2\";\n            if ((name == \"y\") && this.use_y2) name = \"y2\";\n            return this.fp.axisAsText(name, v);\n         }\n      };\n   }\n\n   /** @summary function called at the end of resize of frame\n     * @desc Used to update attributes on the server\n     * @private */\n   sizeChanged() {\n\n      let changes = {};\n      this.v7AttrChange(changes, \"margins_left\", this.fX1NDC);\n      this.v7AttrChange(changes, \"margins_bottom\", this.fY1NDC);\n      this.v7AttrChange(changes, \"margins_right\", 1 - this.fX2NDC);\n      this.v7AttrChange(changes, \"margins_top\", 1 - this.fY2NDC);\n      this.v7SendAttrChanges(changes, false); // do not invoke canvas update on the server\n\n      this.redrawPad();\n   }\n\n   /** @summary Remove all x/y functions\n     * @private */\n   cleanXY() {\n      // remove all axes drawings\n      let clean = (name,grname) => {\n         if (this[name]) {\n            this[name].cleanup();\n            delete this[name];\n         }\n         delete this[grname];\n      };\n\n      clean(\"x_handle\", \"grx\");\n      clean(\"y_handle\", \"gry\");\n      clean(\"z_handle\", \"grz\");\n      clean(\"x2_handle\", \"grx2\");\n      clean(\"y2_handle\", \"gry2\");\n\n      delete this.v6axes; // marker that v6 axes are used\n   }\n\n   /** @summary Remove all axes drawings\n     * @private */\n   cleanupAxes() {\n      this.cleanXY();\n\n      if (this.draw_g) {\n         this.draw_g.select(\".grid_layer\").selectAll(\"*\").remove();\n         this.draw_g.select(\".axis_layer\").selectAll(\"*\").remove();\n      }\n      this.axes_drawn = false;\n   }\n\n   /** @summary Removes all drawn elements of the frame\n     * @private */\n   cleanFrameDrawings() {\n      // cleanup all 3D drawings if any\n      if (typeof this.create3DScene === 'function')\n         this.create3DScene(-1);\n\n      this.cleanupAxes();\n\n      let clean = (name) => {\n         this[name+\"min\"] = this[name+\"max\"] = 0;\n         this[\"zoom_\"+name+\"min\"] = this[\"zoom_\"+name+\"max\"] = 0;\n         this[\"scale_\"+name+\"min\"] = this[\"scale_\"+name+\"max\"] = 0;\n      };\n\n      clean(\"x\");\n      clean(\"y\");\n      clean(\"z\");\n      clean(\"x2\");\n      clean(\"y2\");\n\n      if (this.draw_g) {\n         this.draw_g.select(\".main_layer\").selectAll(\"*\").remove();\n         this.draw_g.select(\".upper_layer\").selectAll(\"*\").remove();\n      }\n   }\n\n   /** @summary Fully cleanup frame\n     * @private */\n   cleanup() {\n\n      this.cleanFrameDrawings();\n\n      if (this.draw_g) {\n         this.draw_g.selectAll(\"*\").remove();\n         this.draw_g.on(\"mousedown\", null)\n                    .on(\"dblclick\", null)\n                    .on(\"wheel\", null)\n                    .on(\"contextmenu\", null)\n                    .property('interactive_set', null);\n      }\n\n      if (this.keys_handler) {\n         window.removeEventListener('keydown', this.keys_handler, false);\n         this.keys_handler = null;\n      }\n      delete this.enabledKeys;\n      delete this.self_drawaxes;\n\n      delete this.xaxis;\n      delete this.yaxis;\n      delete this.zaxis;\n      delete this.x2axis;\n      delete this.y2axis;\n\n      delete this.draw_g; // frame <g> element managet by the pad\n\n      delete this._click_handler;\n      delete this._dblclick_handler;\n\n      let pp = this.getPadPainter();\n      if (pp?.frame_painter_ref === this)\n         delete pp.frame_painter_ref;\n\n      super.cleanup();\n   }\n\n   /** @summary Redraw frame\n     * @private */\n   redraw() {\n\n      let pp = this.getPadPainter();\n      if (pp) pp.frame_painter_ref = this;\n\n      // first update all attributes from objects\n      this.updateAttributes();\n\n      let rect = pp ? pp.getPadRect() : { width: 10, height: 10 },\n          lm = Math.round(rect.width * this.fX1NDC),\n          w = Math.round(rect.width * (this.fX2NDC - this.fX1NDC)),\n          tm = Math.round(rect.height * (1 - this.fY2NDC)),\n          h = Math.round(rect.height * (this.fY2NDC - this.fY1NDC)),\n          rotate = false, fixpos = false, trans;\n\n      if (pp && pp.options) {\n         if (pp.options.RotateFrame) rotate = true;\n         if (pp.options.FixFrame) fixpos = true;\n      }\n\n      if (rotate) {\n         trans = `rotate(-90,${lm},${tm}) translate(${lm-h},${tm})`;\n         let d = w; w = h; h = d;\n      } else {\n         trans = `translate(${lm},${tm})`;\n      }\n\n      // update values here to let access even when frame is not really updated\n      this._frame_x = lm;\n      this._frame_y = tm;\n      this._frame_width = w;\n      this._frame_height = h;\n      this._frame_rotate = rotate;\n      this._frame_fixpos = fixpos;\n\n      if (this.mode3d) return this; // no need for real draw in mode3d\n\n      // this is svg:g object - container for every other items belonging to frame\n      this.draw_g = this.getFrameSvg();\n\n      let top_rect, main_svg;\n\n      if (this.draw_g.empty()) {\n\n         this.draw_g = this.getLayerSvg(\"primitives_layer\").append(\"svg:g\").attr(\"class\", \"root_frame\");\n\n         if (!isBatchMode())\n            this.draw_g.append(\"svg:title\").text(\"\");\n\n         top_rect = this.draw_g.append(\"svg:rect\");\n\n         // append for the moment three layers - for drawing and axis\n         this.draw_g.append('svg:g').attr('class','grid_layer');\n\n         main_svg = this.draw_g.append('svg:svg')\n                           .attr('class','main_layer')\n                           .attr(\"x\", 0)\n                           .attr(\"y\", 0)\n                           .attr('overflow', 'hidden');\n\n         this.draw_g.append('svg:g').attr('class','axis_layer');\n         this.draw_g.append('svg:g').attr('class','upper_layer');\n      } else {\n         top_rect = this.draw_g.select(\"rect\");\n         main_svg = this.draw_g.select(\".main_layer\");\n      }\n\n      this.axes_drawn = false;\n\n      this.draw_g.attr(\"transform\", trans);\n\n      top_rect.attr(\"x\", 0)\n              .attr(\"y\", 0)\n              .attr(\"width\", w)\n              .attr(\"height\", h)\n              .attr(\"rx\", this.lineatt.rx || null)\n              .attr(\"ry\", this.lineatt.ry || null)\n              .call(this.fillatt.func)\n              .call(this.lineatt.func);\n\n      main_svg.attr(\"width\", w)\n              .attr(\"height\", h)\n              .attr(\"viewBox\", `0 0 ${w} ${h}`);\n\n      let pr = Promise.resolve(true);\n\n      if (this.v7EvalAttr(\"drawAxes\")) {\n         this.self_drawaxes = true;\n         this.setAxesRanges();\n         pr = this.drawAxes().then(() => this.addInteractivity());\n      }\n\n      return pr.then(() => {\n         if (!isBatchMode()) {\n            top_rect.style(\"pointer-events\", \"visibleFill\");  // let process mouse events inside frame\n\n            FrameInteractive.assign(this);\n            this.addBasicInteractivity();\n         }\n\n         return this;\n      });\n   }\n\n   /** @summary Returns frame width */\n   getFrameWidth() { return this._frame_width || 0; }\n\n   /** @summary Returns frame height */\n   getFrameHeight() { return this._frame_height || 0; }\n\n   /** @summary Returns frame rectangle plus extra info for hint display */\n   getFrameRect() {\n      return {\n         x: this._frame_x || 0,\n         y: this._frame_y || 0,\n         width: this.getFrameWidth(),\n         height: this.getFrameHeight(),\n         transform: this.draw_g ? this.draw_g.attr(\"transform\") : \"\",\n         hint_delta_x: 0,\n         hint_delta_y: 0\n      }\n   }\n\n   /** @summary Returns palette associated with frame */\n   getHistPalette() {\n      return this.getPadPainter().getHistPalette();\n   }\n\n   /** @summary Configure user-defined click handler\n     * @desc Function will be called every time when frame click was perfromed\n     * As argument, tooltip object with selected bins will be provided\n     * If handler function returns true, default handling of click will be disabled */\n   configureUserClickHandler(handler) {\n      this._click_handler = handler && (typeof handler == 'function') ? handler : null;\n   }\n\n   /** @summary Configure user-defined dblclick handler\n     * @desc Function will be called every time when double click was called\n     * As argument, tooltip object with selected bins will be provided\n     * If handler function returns true, default handling of dblclick (unzoom) will be disabled */\n   configureUserDblclickHandler(handler) {\n      this._dblclick_handler = handler && (typeof handler == 'function') ? handler : null;\n   }\n\n   /** @summary function can be used for zooming into specified range\n     * @desc if both limits for each axis 0 (like xmin==xmax==0), axis will be unzoomed\n     * @returns {Promise} with boolean flag if zoom operation was performed */\n   zoom(xmin, xmax, ymin, ymax, zmin, zmax) {\n\n      // disable zooming when axis conversion is enabled\n      if (this.projection) return Promise.resolve(false);\n\n      if (xmin===\"x\") { xmin = xmax; xmax = ymin; ymin = undefined; } else\n      if (xmin===\"y\") { ymax = ymin; ymin = xmax; xmin = xmax = undefined; } else\n      if (xmin===\"z\") { zmin = xmax; zmax = ymin; xmin = xmax = ymin = undefined; }\n\n      let zoom_x = (xmin !== xmax), zoom_y = (ymin !== ymax), zoom_z = (zmin !== zmax),\n          unzoom_x = false, unzoom_y = false, unzoom_z = false;\n\n      if (zoom_x) {\n         let cnt = 0;\n         if (xmin <= this.xmin) { xmin = this.xmin; cnt++; }\n         if (xmax >= this.xmax) { xmax = this.xmax; cnt++; }\n         if (cnt === 2) { zoom_x = false; unzoom_x = true; }\n      } else {\n         unzoom_x = (xmin === xmax) && (xmin === 0);\n      }\n\n      if (zoom_y) {\n         let cnt = 0;\n         if (ymin <= this.ymin) { ymin = this.ymin; cnt++; }\n         if (ymax >= this.ymax) { ymax = this.ymax; cnt++; }\n         if (cnt === 2) { zoom_y = false; unzoom_y = true; }\n      } else {\n         unzoom_y = (ymin === ymax) && (ymin === 0);\n      }\n\n      if (zoom_z) {\n         let cnt = 0;\n         // if (this.logz && this.ymin_nz && this.getDimension()===2) main_zmin = 0.3*this.ymin_nz;\n         if (zmin <= this.zmin) { zmin = this.zmin; cnt++; }\n         if (zmax >= this.zmax) { zmax = this.zmax; cnt++; }\n         if (cnt === 2) { zoom_z = false; unzoom_z = true; }\n      } else {\n         unzoom_z = (zmin === zmax) && (zmin === 0);\n      }\n\n      let changed = false,\n          r_x = \"\", r_y = \"\", r_z = \"\", is_any_check = false,\n         req = {\n            _typename: \"ROOT::Experimental::RFrame::RUserRanges\",\n            values: [0, 0, 0, 0, 0, 0],\n            flags: [false, false, false, false, false, false]\n         };\n\n      const checkZooming = (painter, force) => {\n         if (!force && (typeof painter.canZoomInside != 'function')) return;\n\n         is_any_check = true;\n\n         if (zoom_x && (force || painter.canZoomInside(\"x\", xmin, xmax))) {\n            this.zoom_xmin = xmin;\n            this.zoom_xmax = xmax;\n            changed = true; r_x = \"0\";\n            zoom_x = false;\n            req.values[0] = xmin; req.values[1] = xmax;\n            req.flags[0] = req.flags[1] = true;\n         }\n         if (zoom_y && (force || painter.canZoomInside(\"y\", ymin, ymax))) {\n            this.zoom_ymin = ymin;\n            this.zoom_ymax = ymax;\n            changed = true; r_y = \"1\";\n            zoom_y = false;\n            req.values[2] = ymin; req.values[3] = ymax;\n            req.flags[2] = req.flags[3] = true;\n         }\n         if (zoom_z && (force || painter.canZoomInside(\"z\", zmin, zmax))) {\n            this.zoom_zmin = zmin;\n            this.zoom_zmax = zmax;\n            changed = true; r_z = \"2\";\n            zoom_z = false;\n            req.values[4] = zmin; req.values[5] = zmax;\n            req.flags[4] = req.flags[5] = true;\n         }\n      };\n\n      // first process zooming (if any)\n      if (zoom_x || zoom_y || zoom_z)\n         this.forEachPainter(painter => checkZooming(painter));\n\n      // force zooming when no any other painter can verify zoom range\n      if (!is_any_check && this.self_drawaxes)\n         checkZooming(null, true);\n\n      // and process unzoom, if any\n      if (unzoom_x || unzoom_y || unzoom_z) {\n         if (unzoom_x) {\n            if (this.zoom_xmin !== this.zoom_xmax) { changed = true; r_x = \"0\"; }\n            this.zoom_xmin = this.zoom_xmax = 0;\n            req.values[0] = req.values[1] = -1;\n         }\n         if (unzoom_y) {\n            if (this.zoom_ymin !== this.zoom_ymax) { changed = true; r_y = \"1\"; }\n            this.zoom_ymin = this.zoom_ymax = 0;\n            req.values[2] = req.values[3] = -1;\n         }\n         if (unzoom_z) {\n            if (this.zoom_zmin !== this.zoom_zmax) { changed = true; r_z = \"2\"; }\n            this.zoom_zmin = this.zoom_zmax = 0;\n            req.values[4] = req.values[5] = -1;\n         }\n      }\n\n      if (!changed) return Promise.resolve(false);\n\n      if (this.v7NormalMode())\n         this.v7SubmitRequest(\"zoom\", { _typename: \"ROOT::Experimental::RFrame::RZoomRequest\", ranges: req });\n\n      return this.interactiveRedraw(\"pad\", \"zoom\" + r_x + r_y + r_z).then(() => true);\n   }\n\n   /** @summary Provide zooming of single axis\n     * @desc One can specify names like x/y/z but also second axis x2 or y2 */\n   zoomSingle(name, vmin, vmax) {\n\n      let names = [\"x\",\"y\",\"z\",\"x2\",\"y2\"], indx = names.indexOf(name);\n\n      // disable zooming when axis conversion is enabled\n      if (this.projection || !this[name+\"_handle\"] || (indx < 0))\n         return Promise.resolve(false);\n\n      let zoom_v = (vmin !== vmax), unzoom_v = false;\n\n      if (zoom_v) {\n         let cnt = 0;\n         if (vmin <= this[name+\"min\"]) { vmin = this[name+\"min\"]; cnt++; }\n         if (vmax >= this[name+\"max\"]) { vmax = this[name+\"max\"]; cnt++; }\n         if (cnt === 2) { zoom_v = false; unzoom_v = true; }\n      } else {\n         unzoom_v = (vmin === vmax) && (vmin === 0);\n      }\n\n      let changed = false, is_any_check = false,\n          req = {\n             _typename: \"ROOT::Experimental::RFrame::RUserRanges\",\n             values: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n             flags: [false, false, false, false, false, false, false, false, false, false]\n          };\n\n      let checkZooming = (painter, force) => {\n         if (!force && (typeof painter?.canZoomInside != 'function')) return;\n\n         is_any_check = true;\n\n         if (zoom_v && (force || painter.canZoomInside(name[0], vmin, vmax))) {\n            this[\"zoom_\" + name + \"min\"] = vmin;\n            this[\"zoom_\" + name + \"max\"] = vmax;\n            changed = true;\n            zoom_v = false;\n            req.values[indx*2] = vmin; req.values[indx*2+1] = vmax;\n            req.flags[indx*2] = req.flags[indx*2+1] = true;\n         }\n      };\n\n      // first process zooming (if any)\n      if (zoom_v)\n         this.forEachPainter(painter => checkZooming(painter));\n\n      // force zooming when no any other painter can verify zoom range\n      if (!is_any_check && this.self_drawaxes)\n         checkZooming(null, true);\n\n      if (unzoom_v) {\n         if (this[`zoom_${name}min`] !== this[`zoom_${name}max`]) changed = true;\n         this[`zoom_${name}min`] = this[`zoom_${name}max`] = 0;\n         req.values[indx*2] = req.values[indx*2+1] = -1;\n      }\n\n      if (!changed) return Promise.resolve(false);\n\n      if (this.v7NormalMode())\n         this.v7SubmitRequest(\"zoom\", { _typename: \"ROOT::Experimental::RFrame::RZoomRequest\", ranges: req });\n\n      return this.interactiveRedraw(\"pad\", \"zoom\" + indx).then(() => true);\n   }\n\n   /** @summary Checks if specified axis zoomed */\n   isAxisZoomed(axis) {\n      return this['zoom_'+axis+'min'] !== this['zoom_'+axis+'max'];\n   }\n\n   /** @summary Unzoom specified axes\n     * @returns {Promise} with boolean flag if zoom is changed */\n   unzoom(dox, doy, doz) {\n      if (dox == \"all\")\n         return this.unzoom(\"x2\").then(() => this.unzoom(\"y2\")).then(() => this.unzoom(\"xyz\"));\n\n      if ((dox == \"x2\") || (dox == \"y2\"))\n         return this.zoomSingle(dox, 0, 0).then(changed => {\n            if (changed) this.zoomChangedInteractive(dox, \"unzoom\");\n            return changed;\n         });\n\n      if (typeof dox === 'undefined') { dox = doy = doz = true; } else\n      if (typeof dox === 'string') { doz = dox.indexOf(\"z\") >= 0; doy = dox.indexOf(\"y\") >= 0; dox = dox.indexOf(\"x\") >= 0; }\n\n      return this.zoom(dox ? 0 : undefined, dox ? 0 : undefined,\n                       doy ? 0 : undefined, doy ? 0 : undefined,\n                       doz ? 0 : undefined, doz ? 0 : undefined).then(changed => {\n\n         if (changed && dox) this.zoomChangedInteractive(\"x\", \"unzoom\");\n         if (changed && doy) this.zoomChangedInteractive(\"y\", \"unzoom\");\n         if (changed && doz) this.zoomChangedInteractive(\"z\", \"unzoom\");\n\n         return changed;\n      });\n   }\n\n   /** @summary Mark/check if zoom for specific axis was changed interactively\n     * @private */\n   zoomChangedInteractive(axis, value) {\n      if (axis == 'reset') {\n         this.zoom_changed_x = this.zoom_changed_y = this.zoom_changed_z = undefined;\n         return;\n      }\n      if (!axis || axis == 'any')\n         return this.zoom_changed_x || this.zoom_changed_y  || this.zoom_changed_z;\n\n      if ((axis !== 'x') && (axis !== 'y') && (axis !== 'z')) return;\n\n      let fld = \"zoom_changed_\" + axis;\n      if (value === undefined) return this[fld];\n\n      if (value === 'unzoom') {\n         // special handling of unzoom, only if was never changed before flag set to true\n         this[fld] = (this[fld] === undefined);\n         return;\n      }\n\n      if (value) this[fld] = true;\n   }\n\n   /** @summary Fill menu for frame when server is not there */\n   fillObjectOfflineMenu(menu, kind) {\n      if ((kind!=\"x\") && (kind!=\"y\")) return;\n\n      menu.add(\"Unzoom\", () => this.unzoom(kind));\n\n      //if (this[kind+\"_kind\"] == \"normal\")\n      //   menu.addchk(this[\"log\"+kind], \"SetLog\"+kind, this.toggleAxisLog.bind(this, kind));\n\n      // here should be all axes attributes in offline\n   }\n\n   /** @summary Set grid drawing for specified axis */\n   changeFrameAttr(attr, value) {\n      let changes = {};\n      this.v7AttrChange(changes, attr, value);\n      this.v7SetAttr(attr, value);\n      this.v7SendAttrChanges(changes, false); // do not invoke canvas update on the server\n      this.redrawPad();\n   }\n\n   /** @summary Fill context menu */\n   fillContextMenu(menu, kind, /* obj */) {\n\n      // when fill and show context menu, remove all zooming\n\n      if ((kind==\"x\") || (kind==\"y\") || (kind==\"x2\") || (kind==\"y2\")) {\n         let handle = this[kind+\"_handle\"];\n         if (!handle) return false;\n         menu.add(\"header: \" + kind.toUpperCase() + \" axis\");\n         return handle.fillAxisContextMenu(menu, kind);\n      }\n\n      let alone = menu.size()==0;\n\n      if (alone)\n         menu.add(\"header:Frame\");\n      else\n         menu.add(\"separator\");\n\n      if (this.zoom_xmin !== this.zoom_xmax)\n         menu.add(\"Unzoom X\", () => this.unzoom(\"x\"));\n      if (this.zoom_ymin !== this.zoom_ymax)\n         menu.add(\"Unzoom Y\", () => this.unzoom(\"y\"));\n      if (this.zoom_zmin !== this.zoom_zmax)\n         menu.add(\"Unzoom Z\", () => this.unzoom(\"z\"));\n      if (this.zoom_x2min !== this.zoom_x2max)\n         menu.add(\"Unzoom X2\", () => this.unzoom(\"x2\"));\n      if (this.zoom_y2min !== this.zoom_y2max)\n         menu.add(\"Unzoom Y2\", () => this.unzoom(\"y2\"));\n      menu.add(\"Unzoom all\", () => this.unzoom(\"all\"));\n\n      menu.add(\"separator\");\n\n      menu.addchk(this.isTooltipAllowed(), \"Show tooltips\", () => this.setTooltipAllowed(\"toggle\"));\n\n      if (this.x_handle)\n         menu.addchk(this.x_handle.draw_grid, \"Grid x\", flag => this.changeFrameAttr(\"gridX\", flag));\n      if (this.y_handle)\n         menu.addchk(this.y_handle.draw_grid, \"Grid y\", flag => this.changeFrameAttr(\"gridY\", flag));\n      if (this.x_handle && !this.x2_handle)\n         menu.addchk(this.x_handle.draw_swapside, \"Swap x\", flag => this.changeFrameAttr(\"swapX\", flag));\n      if (this.y_handle && !this.y2_handle)\n         menu.addchk(this.y_handle.draw_swapside, \"Swap y\", flag => this.changeFrameAttr(\"swapY\", flag));\n      if (this.x_handle && !this.x2_handle) {\n         menu.add(\"sub:Ticks x\");\n         menu.addchk(this.x_handle.draw_ticks == 0, \"off\", () => this.changeFrameAttr(\"ticksX\", 0));\n         menu.addchk(this.x_handle.draw_ticks == 1, \"normal\", () => this.changeFrameAttr(\"ticksX\", 1));\n         menu.addchk(this.x_handle.draw_ticks == 2, \"ticks on both sides\", () => this.changeFrameAttr(\"ticksX\", 2));\n         menu.addchk(this.x_handle.draw_ticks == 3, \"labels on both sides\", () => this.changeFrameAttr(\"ticksX\", 3));\n         menu.add(\"endsub:\");\n       }\n      if (this.y_handle && !this.y2_handle) {\n         menu.add(\"sub:Ticks y\");\n         menu.addchk(this.y_handle.draw_ticks == 0, \"off\", () => this.changeFrameAttr(\"ticksY\", 0));\n         menu.addchk(this.y_handle.draw_ticks == 1, \"normal\", () => this.changeFrameAttr(\"ticksY\", 1));\n         menu.addchk(this.y_handle.draw_ticks == 2, \"ticks on both sides\", () => this.changeFrameAttr(\"ticksY\", 2));\n         menu.addchk(this.y_handle.draw_ticks == 3, \"labels on both sides\", () => this.changeFrameAttr(\"ticksY\", 3));\n         menu.add(\"endsub:\");\n       }\n\n      menu.addAttributesMenu(this, alone ? \"\" : \"Frame \");\n      menu.add(\"separator\");\n      menu.add(\"Save as frame.png\", () => this.getPadPainter().saveAs(\"png\", 'frame', 'frame.png'));\n      menu.add(\"Save as frame.svg\", () => this.getPadPainter().saveAs(\"svg\", 'frame', 'frame.svg'));\n\n      return true;\n   }\n\n   /** @summary Convert graphical coordinate into axis value */\n   revertAxis(axis, pnt) {\n      let handle = this[axis+\"_handle\"];\n      return handle ? handle.revertPoint(pnt) : 0;\n   }\n\n   /** @summary Show axis status message\n     * @desc method called normally when mouse enter main object element\n     * @private */\n   showAxisStatus(axis_name, evnt) {\n\n      let taxis = null, hint_name = axis_name, hint_title = \"axis\",\n          m = d3_pointer(evnt, this.getFrameSvg().node()), id = (axis_name==\"x\") ? 0 : 1;\n\n      if (taxis) { hint_name = taxis.fName; hint_title = taxis.fTitle || \"axis object\"; }\n\n      if (this.swap_xy) id = 1-id;\n\n      let axis_value = this.revertAxis(axis_name, m[id]);\n\n      this.showObjectStatus(hint_name, hint_title, axis_name + \" : \" + this.axisAsText(axis_name, axis_value), Math.round(m[0])+\",\"+Math.round(m[1]));\n   }\n\n   /** @summary Add interactive keys handlers\n    * @private */\n   addKeysHandler() {\n      if (isBatchMode()) return;\n      FrameInteractive.assign(this);\n      this.addFrameKeysHandler();\n   }\n\n   /** @summary Add interactive functionality to the frame\n    * @private */\n   addInteractivity(for_second_axes) {\n\n      if (isBatchMode() || (!settings.Zooming && !settings.ContextMenu))\n         return true;\n      FrameInteractive.assign(this);\n      return this.addFrameInteractivity(for_second_axes);\n   }\n\n   /** @summary Set selected range back to pad object - to be implemented\n     * @private */\n   setRootPadRange(/* pad, is3d */) {\n      // TODO: change of pad range and send back to root application\n   }\n\n   /** @summary Toggle log scale on the specified axes */\n   toggleAxisLog(axis) {\n      let handle = this[axis+\"_handle\"];\n      if (handle) handle.changeAxisLog('toggle');\n   }\n\n} // class RFramePainter\n\nexport { RFramePainter };\n","import { gStyle, settings, constants, internals, addMethods, isPromise, isBatchMode, btoa_func } from '../core.mjs';\nimport { pointer as d3_pointer } from '../d3.mjs';\nimport { ColorPalette, addColor, getRootColors } from '../base/colors.mjs';\nimport { RObjectPainter } from '../base/RObjectPainter.mjs';\nimport { getElementRect, getAbsPosInCanvas, DrawOptions, compressSVG } from '../base/BasePainter.mjs';\nimport { selectActivePad, getActivePad } from '../base/ObjectPainter.mjs';\nimport { registerForResize, saveFile } from '../gui/utils.mjs';\nimport { BrowserLayout } from '../gui/display.mjs';\nimport { createMenu, closeMenu } from '../gui/menu.mjs';\nimport { PadButtonsHandler } from './TPadPainter.mjs';\n\n\n/**\n * @summary Painter class for RPad\n *\n * @private\n */\n\nclass RPadPainter extends RObjectPainter {\n\n   /** @summary constructor */\n   constructor(dom, pad, iscan) {\n      super(dom, pad, \"\", \"pad\");\n      this.pad = pad;\n      this.iscan = iscan; // indicate if working with canvas\n      this.this_pad_name = \"\";\n      if (!this.iscan && (pad !== null)) {\n         if (pad.fObjectID)\n            this.this_pad_name = \"pad\" + pad.fObjectID; // use objectid as padname\n         else\n            this.this_pad_name = \"ppp\" + internals.id_counter++; // artificical name\n      }\n      this.painters = []; // complete list of all painters in the pad\n      this.has_canvas = true;\n      this.forEachPainter = this.forEachPainterInPad;\n   }\n\n   /** @summary Indicates that is not Root6 pad painter\n    * @private */\n   isRoot6() { return false; }\n\n  /** @summary Returns SVG element for the pad itself\n    * @private */\n   svg_this_pad() {\n      return this.getPadSvg(this.this_pad_name);\n   }\n\n   /** @summary Returns main painter on the pad\n     * @desc Typically main painter is TH1/TH2 object which is drawing axes\n    * @private */\n   getMainPainter() {\n      return this.main_painter_ref || null;\n   }\n\n   /** @summary Assign main painter on the pad\n    * @private */\n   setMainPainter(painter, force) {\n      if (!this.main_painter_ref || force)\n         this.main_painter_ref = painter;\n   }\n\n   /** @summary cleanup pad and all primitives inside */\n   cleanup() {\n      if (this._doing_draw)\n         console.error('pad drawing is not completed when cleanup is called');\n\n      this.painters.forEach(p => p.cleanup());\n\n      let svg_p = this.svg_this_pad();\n      if (!svg_p.empty()) {\n         svg_p.property('pad_painter', null);\n         if (!this.iscan) svg_p.remove();\n      }\n\n      delete this.main_painter_ref;\n      delete this.frame_painter_ref;\n      delete this.pads_cache;\n      delete this._pad_x;\n      delete this._pad_y;\n      delete this._pad_width;\n      delete this._pad_height;\n      delete this._doing_draw;\n      delete this._dfltRFont;\n\n      this.painters = [];\n      this.pad = null;\n      this.draw_object = null;\n      this.pad_frame = null;\n      this.this_pad_name = undefined;\n      this.has_canvas = false;\n\n      selectActivePad({ pp: this, active: false });\n\n      super.cleanup();\n   }\n\n   /** @summary Returns frame painter inside the pad\n    * @private */\n   getFramePainter() { return this.frame_painter_ref; }\n\n   /** @summary get pad width */\n   getPadWidth() { return this._pad_width || 0; }\n\n   /** @summary get pad height */\n   getPadHeight() { return this._pad_height || 0; }\n\n   /** @summary get pad rect */\n   getPadRect() {\n      return {\n         x: this._pad_x || 0,\n         y: this._pad_y || 0,\n         width: this.getPadWidth(),\n         height: this.getPadHeight()\n      }\n   }\n\n   /** @summary Returns frame coordiantes - also when frame is not drawn */\n   getFrameRect() {\n      let fp = this.getFramePainter();\n      if (fp) return fp.getFrameRect();\n\n      let w = this.getPadWidth(),\n          h = this.getPadHeight(),\n          rect = {};\n\n      rect.szx = Math.round(0.5*w);\n      rect.szy = Math.round(0.5*h);\n      rect.width = 2*rect.szx;\n      rect.height = 2*rect.szy;\n      rect.x = Math.round(w/2 - rect.szx);\n      rect.y = Math.round(h/2 - rect.szy);\n      rect.hint_delta_x = rect.szx;\n      rect.hint_delta_y = rect.szy;\n      rect.transform = `translate(${rect.x},${rect.y})`;\n      return rect;\n   }\n\n   /** @summary return RPad object */\n   getRootPad(is_root6) {\n      return (is_root6 === undefined) || !is_root6 ? this.pad : null;\n   }\n\n   /** @summary Cleanup primitives from pad - selector lets define which painters to remove\n    * @private */\n   cleanPrimitives(selector) {\n      if (!selector || (typeof selector !== 'function')) return;\n\n      for (let k = this.painters.length-1; k >= 0; --k)\n         if (selector(this.painters[k])) {\n            this.painters[k].cleanup();\n            this.painters.splice(k, 1);\n         }\n   }\n\n   /** @summary Try to find painter for specified object\n     * @desc can be used to find painter for some special objects, registered as\n     * histogram functions\n     * @private */\n   findPainterFor(selobj, selname, seltype) {\n      return this.painters.find(p => {\n         let pobj = p.getObject();\n         if (!pobj) return;\n\n         if (selobj && (pobj === selobj)) return true;\n         if (!selname && !seltype) return;\n         if (selname && (pobj.fName !== selname)) return;\n         if (seltype && (pobj._typename !== seltype)) return;\n         return true;\n      });\n   }\n\n   /** @summary Returns palette associated with pad.\n     * @desc Either from existing palette painter or just default palette */\n   getHistPalette() {\n      let pp = this.findPainterFor(undefined, undefined, \"ROOT::Experimental::RPaletteDrawable\");\n\n      if (pp) return pp.getHistPalette();\n\n      if (!this.fDfltPalette) {\n         this.fDfltPalette = {\n            _typename: \"ROOT::Experimental::RPalette\",\n            fColors: [{ fOrdinal : 0,     fColor : { fColor : \"rgb(53, 42, 135)\" } },\n                      { fOrdinal : 0.125, fColor : { fColor : \"rgb(15, 92, 221)\" } },\n                      { fOrdinal : 0.25,  fColor : { fColor : \"rgb(20, 129, 214)\" } },\n                      { fOrdinal : 0.375, fColor : { fColor : \"rgb(6, 164, 202)\" } },\n                      { fOrdinal : 0.5,   fColor : { fColor : \"rgb(46, 183, 164)\" } },\n                      { fOrdinal : 0.625, fColor : { fColor : \"rgb(135, 191, 119)\" } },\n                      { fOrdinal : 0.75,  fColor : { fColor : \"rgb(209, 187, 89)\" } },\n                      { fOrdinal : 0.875, fColor : { fColor : \"rgb(254, 200, 50)\" } },\n                      { fOrdinal : 1,     fColor : { fColor : \"rgb(249, 251, 14)\" } }],\n             fInterpolate: true,\n             fNormalized: true\n         };\n         addMethods(this.fDfltPalette, \"ROOT::Experimental::RPalette\");\n      }\n\n      return this.fDfltPalette;\n   }\n\n   /** @summary Returns number of painters\n     * @private */\n   getNumPainters() { return this.painters.length; }\n\n   /** @summary Call function for each painter in pad\n     * @param {function} userfunc - function to call\n     * @param {string} kind - \"all\" for all objects (default), \"pads\" only pads and subpads, \"objects\" only for object in current pad\n     * @private */\n   forEachPainterInPad(userfunc, kind) {\n      if (!kind) kind = \"all\";\n      if (kind != \"objects\") userfunc(this);\n      for (let k = 0; k < this.painters.length; ++k) {\n         let sub = this.painters[k];\n         if (typeof sub.forEachPainterInPad === 'function') {\n            if (kind!=\"objects\") sub.forEachPainterInPad(userfunc, kind);\n         } else if (kind != \"pads\") userfunc(sub);\n      }\n   }\n\n   /** @summary register for pad events receiver\n     * @desc in pad painter, while pad may be drawn without canvas\n     * @private */\n   registerForPadEvents(receiver) {\n      this.pad_events_receiver = receiver;\n   }\n\n   /** @summary Generate pad events, normally handled by GED\n     * @desc in pad painter, while pad may be drawn without canvas\n     * @private */\n   producePadEvent(_what, _padpainter, _painter, _position, _place) {\n      if ((_what == \"select\") && (typeof this.selectActivePad == 'function'))\n         this.selectActivePad(_padpainter, _painter, _position);\n\n      if (this.pad_events_receiver)\n         this.pad_events_receiver({ what: _what, padpainter:  _padpainter, painter: _painter, position: _position, place: _place });\n   }\n\n   /** @summary method redirect call to pad events receiver */\n   selectObjectPainter(_painter, pos, _place) {\n\n      let istoppad = (this.iscan || !this.has_canvas),\n          canp = istoppad ? this : this.getCanvPainter();\n\n      if (_painter === undefined) _painter = this;\n\n      if (pos && !istoppad)\n         pos = getAbsPosInCanvas(this.svg_this_pad(), pos);\n\n      selectActivePad({ pp: this, active: true });\n\n      canp.producePadEvent(\"select\", this, _painter, pos, _place);\n   }\n\n   /** @summary Create SVG element for the canvas */\n   createCanvasSvg(check_resize, new_size) {\n\n      let factor = null, svg = null, lmt = 5, rect = null, btns, frect;\n\n      if (check_resize > 0) {\n\n         if (this._fixed_size) return (check_resize > 1); // flag used to force re-drawing of all subpads\n\n         svg = this.getCanvSvg();\n\n         if (svg.empty()) return false;\n\n         factor = svg.property('height_factor');\n\n         rect = this.testMainResize(check_resize, null, factor);\n\n         if (!rect.changed) return false;\n\n         if (!isBatchMode())\n            btns = this.getLayerSvg(\"btns_layer\", this.this_pad_name);\n\n         frect = svg.select(\".canvas_fillrect\");\n\n      } else {\n\n         let render_to = this.selectDom();\n\n         if (render_to.style('position') == 'static')\n            render_to.style('position', 'relative');\n\n         svg = render_to.append(\"svg\")\n             .attr(\"class\", \"jsroot root_canvas\")\n             .property('pad_painter', this) // this is custom property\n             .property('current_pad', \"\") // this is custom property\n             .property('redraw_by_resize', false); // could be enabled to force redraw by each resize\n\n         this.setTopPainter(); //assign canvas as top painter of that element\n\n         if (!isBatchMode() && !this.online_canvas)\n            svg.append(\"svg:title\").text(\"ROOT canvas\");\n\n         frect = svg.append(\"svg:path\").attr(\"class\",\"canvas_fillrect\");\n         if (!isBatchMode())\n            frect.style(\"pointer-events\", \"visibleFill\")\n                 .on(\"dblclick\", evnt => this.enlargePad(evnt))\n                 .on(\"click\", () => this.selectObjectPainter(this, null))\n                 .on(\"mouseenter\", () => this.showObjectStatus())\n                 .on(\"contextmenu\", settings.ContextMenu ? evnt => this.padContextMenu(evnt) : null);\n\n         svg.append(\"svg:g\").attr(\"class\", \"primitives_layer\");\n         svg.append(\"svg:g\").attr(\"class\", \"info_layer\");\n         if (!isBatchMode())\n            btns = svg.append(\"svg:g\")\n                      .attr(\"class\",\"btns_layer\")\n                      .property('leftside', settings.ToolBarSide == 'left')\n                      .property('vertical', settings.ToolBarVert);\n\n         factor = 0.66;\n         if (this.pad && this.pad.fWinSize[0] && this.pad.fWinSize[1]) {\n            factor = this.pad.fWinSize[1] / this.pad.fWinSize[0];\n            if ((factor < 0.1) || (factor > 10)) factor = 0.66;\n         }\n\n         if (this._fixed_size) {\n            render_to.style(\"overflow\",\"auto\");\n            rect = { width: this.pad.fWinSize[0], height: this.pad.fWinSize[1] };\n            if (!rect.width || !rect.height)\n               rect = getElementRect(render_to);\n         } else {\n            rect = this.testMainResize(2, new_size, factor);\n         }\n      }\n\n      this.createAttFill({ pattern: 1001, color: 0 });\n\n      if ((rect.width <= lmt) || (rect.height <= lmt)) {\n         svg.style(\"display\", \"none\");\n         console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);\n         rect.width = 200; rect.height = 100; // just to complete drawing\n      } else {\n         svg.style(\"display\", null);\n      }\n\n      if (this._fixed_size) {\n         svg.attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .attr(\"width\", rect.width)\n            .attr(\"height\", rect.height)\n            .style(\"position\", \"absolute\");\n      } else {\n        svg.attr(\"x\", 0)\n           .attr(\"y\", 0)\n           .style(\"width\", \"100%\")\n           .style(\"height\", \"100%\")\n           .style(\"position\", \"absolute\")\n           .style(\"left\", 0)\n           .style(\"top\", 0)\n           .style(\"right\", 0)\n           .style(\"bottom\", 0);\n      }\n\n      svg.style(\"filter\", settings.DarkMode ? \"invert(100%)\" : null);\n\n      svg.attr(\"viewBox\", `0 0 ${rect.width} ${rect.height}`)\n         .attr(\"preserveAspectRatio\", \"none\")  // we do not preserve relative ratio\n         .property('height_factor', factor)\n         .property('draw_x', 0)\n         .property('draw_y', 0)\n         .property('draw_width', rect.width)\n         .property('draw_height', rect.height);\n\n      this._pad_x = 0;\n      this._pad_y = 0;\n      this._pad_width = rect.width;\n      this._pad_height = rect.height;\n\n      frect.attr(\"d\", `M0,0H${rect.width}V${rect.height}H0Z`)\n           .call(this.fillatt.func);\n\n      this._fast_drawing = settings.SmallPad && ((rect.width < settings.SmallPad.width) || (rect.height < settings.SmallPad.height));\n\n      if (this.alignButtons && btns)\n         this.alignButtons(btns, rect.width, rect.height);\n\n      return true;\n   }\n\n   /** @summary Enlarge pad draw element when possible */\n   enlargePad(evnt) {\n\n      if (evnt) {\n         evnt.preventDefault();\n         evnt.stopPropagation();\n      }\n\n      let svg_can = this.getCanvSvg(),\n          pad_enlarged = svg_can.property(\"pad_enlarged\");\n\n      if (this.iscan || !this.has_canvas || (!pad_enlarged && !this.hasObjectsToDraw() && !this.painters)) {\n         if (this._fixed_size) return; // canvas cannot be enlarged in such mode\n         if (!this.enlargeMain('toggle')) return;\n         if (this.enlargeMain('state')=='off') svg_can.property(\"pad_enlarged\", null);\n      } else if (!pad_enlarged) {\n         this.enlargeMain(true, true);\n         svg_can.property(\"pad_enlarged\", this.pad);\n      } else if (pad_enlarged === this.pad) {\n         this.enlargeMain(false);\n         svg_can.property(\"pad_enlarged\", null);\n      } else {\n         console.error('missmatch with pad double click events');\n      }\n\n      let was_fast = this._fast_drawing;\n\n      this.checkResize(true);\n\n      if (this._fast_drawing != was_fast)\n         this.showPadButtons();\n   }\n\n   /** @summary Create SVG element for the pad\n     * @returns true when pad is displayed and all its items should be redrawn */\n   createPadSvg(only_resize) {\n\n      if (!this.has_canvas) {\n         this.createCanvasSvg(only_resize ? 2 : 0);\n         return true;\n      }\n\n      let svg_parent = this.getPadSvg(this.pad_name), // this.pad_name MUST be here to select parent pad\n          svg_can = this.getCanvSvg(),\n          width = svg_parent.property(\"draw_width\"),\n          height = svg_parent.property(\"draw_height\"),\n          pad_enlarged = svg_can.property(\"pad_enlarged\"),\n          pad_visible = true,\n          w = width, h = height, x = 0, y = 0,\n          svg_pad = null, svg_rect = null, btns = null;\n\n      if (this.pad && this.pad.fPos && this.pad.fSize) {\n         x = Math.round(width * this.pad.fPos.fHoriz.fArr[0]);\n         y = Math.round(height * this.pad.fPos.fVert.fArr[0]);\n         w = Math.round(width * this.pad.fSize.fHoriz.fArr[0]);\n         h = Math.round(height * this.pad.fSize.fVert.fArr[0]);\n      }\n\n      if (pad_enlarged) {\n         pad_visible = false;\n         if (pad_enlarged === this.pad)\n            pad_visible = true;\n         else\n            this.forEachPainterInPad(pp => { if (pp.getObject() == pad_enlarged) pad_visible = true; }, \"pads\");\n\n         if (pad_visible) { w = width; h = height; x = y = 0; }\n      }\n\n      if (only_resize) {\n         svg_pad = this.svg_this_pad();\n         svg_rect = svg_pad.select(\".root_pad_border\");\n         if (!isBatchMode())\n            btns = this.getLayerSvg(\"btns_layer\", this.this_pad_name);\n      } else {\n         svg_pad = svg_parent.select(\".primitives_layer\")\n             .append(\"svg:svg\") // here was g before, svg used to blend all drawin outside\n             .classed(\"__root_pad_\" + this.this_pad_name, true)\n             .attr(\"pad\", this.this_pad_name) // set extra attribute  to mark pad name\n             .property('pad_painter', this); // this is custom property\n\n         if (!isBatchMode())\n            svg_pad.append(\"svg:title\").text(\"ROOT subpad\");\n\n         svg_rect = svg_pad.append(\"svg:path\").attr(\"class\", \"root_pad_border\");\n\n         svg_pad.append(\"svg:g\").attr(\"class\",\"primitives_layer\");\n         if (!isBatchMode())\n            btns = svg_pad.append(\"svg:g\")\n                          .attr(\"class\",\"btns_layer\")\n                          .property('leftside', settings.ToolBarSide != 'left')\n                          .property('vertical', settings.ToolBarVert);\n\n         if (settings.ContextMenu)\n            svg_rect.on(\"contextmenu\", evnt => this.padContextMenu(evnt));\n\n         if (!isBatchMode())\n            svg_rect.style(\"pointer-events\", \"visibleFill\") // get events also for not visible rect\n                    .on(\"dblclick\", evnt => this.enlargePad(evnt))\n                    .on(\"click\", () => this.selectObjectPainter(this, null))\n                    .on(\"mouseenter\", () => this.showObjectStatus());\n      }\n\n      this.createAttFill({ attr: this.pad });\n\n      this.createAttLine({ attr: this.pad, color0: this.pad.fBorderMode == 0 ? 'none' : '' });\n\n      svg_pad.style(\"display\", pad_visible ? null : \"none\")\n             .attr(\"viewBox\", `0 0 ${w} ${h}`) // due to svg\n             .attr(\"preserveAspectRatio\", \"none\")   // due to svg, we do not preserve relative ratio\n             .attr(\"x\", x)    // due to svg\n             .attr(\"y\", y)   // due to svg\n             .attr(\"width\", w)    // due to svg\n             .attr(\"height\", h)   // due to svg\n             .property('draw_x', x) // this is to make similar with canvas\n             .property('draw_y', y)\n             .property('draw_width', w)\n             .property('draw_height', h);\n\n      this._pad_x = x;\n      this._pad_y = y;\n      this._pad_width = w;\n      this._pad_height = h;\n\n      svg_rect.attr(\"d\", `M0,0H${w}V${h}H0Z`)\n              .call(this.fillatt.func)\n              .call(this.lineatt.func);\n\n      this._fast_drawing = settings.SmallPad && ((w < settings.SmallPad.width) || (h < settings.SmallPad.height));\n\n       // special case of 3D canvas overlay\n      if (svg_pad.property('can3d') === constants.Embed3D.Overlay)\n          this.selectDom().select(\".draw3d_\" + this.this_pad_name)\n              .style('display', pad_visible ? '' : 'none');\n\n      if (this.alignButtons && btns) this.alignButtons(btns, w, h);\n\n      return pad_visible;\n   }\n\n   /** @summary returns true if any objects beside sub-pads exists in the pad */\n   hasObjectsToDraw() {\n      let arr = this.pad ? this.pad.fPrimitives : null;\n      return arr && arr.find(obj => obj._typename != \"ROOT::Experimental::RPadDisplayItem\") ? true : false;\n   }\n\n   /** @summary sync drawing/redrawing/resize of the pad\n     * @param {string} kind - kind of draw operation, if true - always queued\n     * @returns {Promise} when pad is ready for draw operation or false if operation already queued\n     * @private */\n   syncDraw(kind) {\n      let entry = { kind : kind || \"redraw\" };\n      if (this._doing_draw === undefined) {\n         this._doing_draw = [ entry ];\n         return Promise.resolve(true);\n      }\n      // if queued operation registered, ignore next calls, indx == 0 is running operation\n      if ((entry.kind !== true) && (this._doing_draw.findIndex((e,i) => (i > 0) && (e.kind == entry.kind)) > 0))\n         return false;\n      this._doing_draw.push(entry);\n      return new Promise(resolveFunc => {\n         entry.func = resolveFunc;\n      });\n   }\n\n   /** @summary confirms that drawing is completed, may trigger next drawing immediately\n     * @private */\n   confirmDraw() {\n      if (this._doing_draw === undefined)\n         return console.warn(\"failure, should not happen\");\n      this._doing_draw.shift();\n      if (this._doing_draw.length == 0) {\n         delete this._doing_draw;\n      } else {\n         let entry = this._doing_draw[0];\n         if(entry.func) { entry.func(); delete entry.func; }\n      }\n   }\n\n   /** @summary Draw single primitive */\n   drawObject(dom, obj, opt) {\n      console.log('Not possible to draw object without loading of draw.mjs');\n      return Promise.resolve(null);\n   }\n\n   /** @summary Draw pad primitives\n     * @private */\n   drawPrimitives(indx) {\n\n      if (indx === undefined) {\n         if (this.iscan)\n            this._start_tm = new Date().getTime();\n\n         // set number of primitves\n         this._num_primitives = this.pad && this.pad.fPrimitives ? this.pad.fPrimitives.length : 0;\n\n         return this.syncDraw(true).then(() => this.drawPrimitives(0));\n      }\n\n      if (!this.pad || (indx >= this._num_primitives)) {\n\n         this.confirmDraw();\n\n         if (this._start_tm) {\n            let spenttm = new Date().getTime() - this._start_tm;\n            if (spenttm > 3000) console.log(\"Canvas drawing took \" + (spenttm*1e-3).toFixed(2) + \"s\");\n            delete this._start_tm;\n         }\n\n         return Promise.resolve();\n      }\n\n      // handle used to invoke callback only when necessary\n      return this.drawObject(this.getDom(), this.pad.fPrimitives[indx], \"\").then(ppainter => {\n         // mark painter as belonging to primitives\n         if (ppainter && (typeof ppainter == 'object'))\n            ppainter._primitive = true;\n\n         return this.drawPrimitives(indx+1);\n      });\n   }\n\n   /** @summary Process tooltip event in the pad\n     * @private */\n   processPadTooltipEvent(pnt) {\n      let painters = [], hints = [];\n\n      // first count - how many processors are there\n      if (this.painters !== null)\n         this.painters.forEach(obj => {\n            if (typeof obj.processTooltipEvent == 'function') painters.push(obj);\n         });\n\n      if (pnt) pnt.nproc = painters.length;\n\n      painters.forEach(obj => {\n         let hint = obj.processTooltipEvent(pnt);\n         if (!hint) hint = { user_info: null };\n         hints.push(hint);\n         if (pnt && pnt.painters) hint.painter = obj;\n      });\n\n      return hints;\n   }\n\n   /** @summary Changes canvas dark mode\n     * @private */\n   changeDarkMode(mode) {\n      this.getCanvSvg().style(\"filter\", (mode ?? settings.DarkMode)  ? \"invert(100%)\" : null);\n   }\n\n   /** @summary Fill pad context menu\n     * @private */\n   fillContextMenu(menu) {\n\n      if (this.iscan)\n         menu.add(\"header: RCanvas\");\n      else\n         menu.add(\"header: RPad\");\n\n      menu.addchk(this.isTooltipAllowed(), \"Show tooltips\", () => this.setTooltipAllowed(\"toggle\"));\n\n      if (!this._websocket) {\n         menu.addAttributesMenu(this);\n         if (this.iscan)\n            menu.addSettingsMenu(false, false, arg => {\n               if (arg == \"dark\") this.changeDarkMode();\n            });\n      }\n\n      menu.add(\"separator\");\n\n      if (typeof this.hasMenuBar == 'function' && typeof this.actiavteMenuBar == 'function')\n         menu.addchk(this.hasMenuBar(), \"Menu bar\", flag => this.actiavteMenuBar(flag));\n\n      if (typeof this.hasEventStatus == 'function' && typeof this.activateStatusBar == 'function')\n         menu.addchk(this.hasEventStatus(), \"Event status\", () => this.activateStatusBar('toggle'));\n\n      if (this.enlargeMain() || (this.has_canvas && this.hasObjectsToDraw()))\n         menu.addchk((this.enlargeMain('state')=='on'), \"Enlarge \" + (this.iscan ? \"canvas\" : \"pad\"), () => this.enlargePad());\n\n      let fname = this.this_pad_name || (this.iscan ? \"canvas\" : \"pad\");\n      menu.add(`Save as ${fname}.png`, fname+\".png\", arg => this.saveAs(\"png\", false, arg));\n      menu.add(`Save as ${fname}.svg`, fname+\".svg\", arg => this.saveAs(\"svg\", false, arg));\n\n      return true;\n   }\n\n   /** @summary Show pad context menu\n     * @private */\n   padContextMenu(evnt) {\n      if (evnt.stopPropagation) {\n         let pos = d3_pointer(evnt, this.svg_this_pad().node());\n         // this is normal event processing and not emulated jsroot event\n         // for debug purposes keep original context menu for small region in top-left corner\n         if ((pos.length==2) && (pos[0] >= 0) && (pos[0] < 10) && (pos[1] >= 0) && (pos[1] < 10)) return;\n\n         evnt.stopPropagation(); // disable main context menu\n         evnt.preventDefault();  // disable browser context menu\n\n         this.getFramePainter()?.setLastEventPos();\n      }\n\n      createMenu(evnt, this).then(menu => {\n         this.fillContextMenu(menu);\n         return this.fillObjectExecMenu(menu);\n      }).then(menu => menu.show());\n   }\n\n   /** @summary Redraw pad means redraw ourself\n     * @returns {Promise} when redrawing ready */\n   redrawPad(reason) {\n\n      let sync_promise = this.syncDraw(reason);\n      if (sync_promise === false) {\n         console.log('Prevent RPad redrawing');\n         return Promise.resolve(false);\n      }\n\n      let showsubitems = true;\n      let redrawNext = indx => {\n         while (indx < this.painters.length) {\n            let sub = this.painters[indx++], res = 0;\n            if (showsubitems || sub.this_pad_name)\n               res = sub.redraw(reason);\n\n            if (isPromise(res))\n               return res.then(() => redrawNext(indx));\n         }\n         return Promise.resolve(true);\n      };\n\n      return sync_promise.then(() => {\n         if (this.iscan) {\n            this.createCanvasSvg(2);\n         } else {\n            showsubitems = this.createPadSvg(true);\n         }\n         return redrawNext(0);\n      }).then(() => {\n         if (getActivePad() === this)\n            this.getCanvPainter()?.producePadEvent(\"padredraw\", this);\n         this.confirmDraw();\n         return true;\n      });\n   }\n\n   /** @summary redraw pad */\n   redraw(reason) {\n      return this.redrawPad(reason);\n   }\n\n\n   /** @summary Checks if pad should be redrawn by resize\n     * @private */\n   needRedrawByResize() {\n      let elem = this.svg_this_pad();\n      if (!elem.empty() && elem.property('can3d') === constants.Embed3D.Overlay) return true;\n\n      for (let i = 0; i < this.painters.length; ++i)\n         if (typeof this.painters[i].needRedrawByResize === 'function')\n            if (this.painters[i].needRedrawByResize()) return true;\n\n      return false;\n   }\n\n   /** @summary Check resize of canvas */\n   checkCanvasResize(size, force) {\n\n      if (!this.iscan && this.has_canvas) return false;\n\n      let sync_promise = this.syncDraw(\"canvas_resize\");\n      if (sync_promise === false) return false;\n\n      if ((size === true) || (size === false)) { force = size; size = null; }\n\n      if (size && (typeof size === 'object') && size.force) force = true;\n\n      if (!force) force = this.needRedrawByResize();\n\n      let changed = false,\n          redrawNext = indx => {\n             if (!changed || (indx >= this.painters.length)) {\n                this.confirmDraw();\n                return changed;\n             }\n\n             let res = this.painters[indx].redraw(force ? \"redraw\" : \"resize\");\n             if (!isPromise(res)) res = Promise.resolve();\n             return res.then(() => redrawNext(indx+1));\n          };\n\n      return sync_promise.then(() => {\n\n         changed = this.createCanvasSvg(force ? 2 : 1, size);\n\n         // if canvas changed, redraw all its subitems.\n         // If redrawing was forced for canvas, same applied for sub-elements\n         return redrawNext(0);\n      });\n   }\n\n   /** @summary update RPad object\n     * @private */\n   updateObject(obj) {\n      if (!obj) return false;\n\n      this.pad.fStyle = obj.fStyle;\n      this.pad.fAttr = obj.fAttr;\n\n      if (this.iscan) {\n         this.pad.fTitle = obj.fTitle;\n         this.pad.fWinSize = obj.fWinSize;\n      } else {\n         this.pad.fPos = obj.fPos;\n         this.pad.fSize = obj.fSize;\n      }\n\n      return true;\n   }\n\n\n   /** @summary Add object painter to list of primitives\n     * @private */\n   addObjectPainter(objpainter, lst, indx) {\n      if (objpainter && lst && lst[indx] && (objpainter.snapid === undefined)) {\n         // keep snap id in painter, will be used for the\n         if (this.painters.indexOf(objpainter) < 0)\n            this.painters.push(objpainter);\n         objpainter.assignSnapId(lst[indx].fObjectID);\n         if (!objpainter.rstyle) objpainter.rstyle = lst[indx].fStyle || this.rstyle;\n      }\n   }\n\n   /** @summary Extract properties from TObjectDisplayItem */\n   extractTObjectProp(snap) {\n      if (snap.fColIndex && snap.fColValue) {\n         let colors = this.root_colors || getRootColors();\n         for (let k = 0; k < snap.fColIndex.length; ++k)\n            colors[snap.fColIndex[k]] = snap.fColValue[k];\n       }\n\n      // painter used only for evaluation of attributes\n      let pattr = new RObjectPainter(), obj = snap.fObject;\n      pattr.assignObject(snap);\n      pattr.csstype = snap.fCssType;\n      pattr.rstyle = snap.fStyle;\n\n      snap.fOption = pattr.v7EvalAttr(\"options\", \"\");\n\n      const extract_color = (member_name, attr_name) => {\n         let col = pattr.v7EvalColor(attr_name, \"\");\n         if (col) obj[member_name] = addColor(col, this.root_colors);\n      };\n\n      // handle TAttLine\n      if ((obj.fLineColor !== undefined) && (obj.fLineWidth !== undefined) && (obj.fLineStyle !== undefined)) {\n         extract_color(\"fLineColor\", \"line_color\");\n         obj.fLineWidth = pattr.v7EvalAttr(\"line_width\", obj.fLineWidth);\n         obj.fLineStyle = pattr.v7EvalAttr(\"line_style\", obj.fLineStyle);\n      }\n\n      // handle TAttFill\n      if ((obj.fFillColor !== undefined) && (obj.fFillStyle !== undefined)) {\n         extract_color(\"fFillColor\", \"fill_color\");\n         obj.fFillStyle = pattr.v7EvalAttr(\"fill_style\", obj.fFillStyle);\n      }\n\n      // handle TAttMarker\n      if ((obj.fMarkerColor !== undefined) && (obj.fMarkerStyle !== undefined) && (obj.fMarkerSize !== undefined)) {\n         extract_color(\"fMarkerColor\", \"marker_color\");\n         obj.fMarkerStyle = pattr.v7EvalAttr(\"marker_style\", obj.fMarkerStyle);\n         obj.fMarkerSize = pattr.v7EvalAttr(\"marker_size\", obj.fMarkerSize);\n      }\n\n      // handle TAttText\n      if ((obj.fTextColor !== undefined) && (obj.fTextAlign !== undefined) && (obj.fTextAngle !== undefined) && (obj.fTextSize !== undefined)) {\n         extract_color(\"fTextColor\", \"text_color\");\n         obj.fTextAlign = pattr.v7EvalAttr(\"text_align\", obj.fTextAlign);\n         obj.fTextAngle = pattr.v7EvalAttr(\"text_angle\", obj.fTextAngle);\n         obj.fTextSize = pattr.v7EvalAttr(\"text_size\", obj.fTextSize);\n         // TODO: v7 font handling differs much from v6, ignore for the moment\n      }\n   }\n\n   /** @summary Function called when drawing next snapshot from the list\n     * @returns {Promise} with pad painter when ready\n     * @private */\n   drawNextSnap(lst, indx) {\n\n      if (indx === undefined) {\n         indx = -1;\n         // flag used to prevent immediate pad redraw during first draw\n         this._snaps_map = {}; // to control how much snaps are drawn\n         this._num_primitives = lst ? lst.length : 0;\n         this._auto_color_cnt = 0;\n      }\n\n      delete this.next_rstyle;\n\n      ++indx; // change to the next snap\n\n      if (!lst || indx >= lst.length) {\n         delete this._snaps_map;\n         delete this._auto_color_cnt;\n         return Promise.resolve(this);\n      }\n\n      let snap = lst[indx],\n          snapid = snap.fObjectID,\n          cnt = this._snaps_map[snapid],\n          objpainter = null;\n\n      if (cnt) cnt++; else cnt=1;\n      this._snaps_map[snapid] = cnt; // check how many objects with same snapid drawn, use them again\n\n      // empty object, no need to do something, take next\n      if (snap.fDummy) return this.drawNextSnap(lst, indx);\n\n      // first appropriate painter for the object\n      // if same object drawn twice, two painters will exists\n      for (let k = 0; k<this.painters.length; ++k) {\n         if (this.painters[k].snapid === snapid)\n            if (--cnt === 0) { objpainter = this.painters[k]; break;  }\n      }\n\n      if (objpainter) {\n\n         if (snap._typename == \"ROOT::Experimental::RPadDisplayItem\")  // subpad\n            return objpainter.redrawPadSnap(snap).then(ppainter => {\n               this.addObjectPainter(ppainter, lst, indx);\n               return this.drawNextSnap(lst, indx);\n            });\n\n         if (snap._typename === \"ROOT::Experimental::TObjectDisplayItem\")\n            this.extractTObjectProp(snap);\n\n         let promise;\n\n         if (objpainter.updateObject(snap.fDrawable || snap.fObject || snap, snap.fOption || \"\"))\n            promise = objpainter.redraw();\n\n         if (!isPromise(promise)) promise = Promise.resolve(true);\n\n         return promise.then(() => this.drawNextSnap(lst, indx)); // call next\n      }\n\n      if (snap._typename == \"ROOT::Experimental::RPadDisplayItem\") { // subpad\n\n         let subpad = snap; // not subpad, but just attributes\n\n         let padpainter = new RPadPainter(this.getDom(), subpad, false);\n         padpainter.decodeOptions(\"\");\n         padpainter.addToPadPrimitives(this.this_pad_name); // only set parent pad name\n         padpainter.assignSnapId(snap.fObjectID);\n         padpainter.rstyle = snap.fStyle;\n\n         padpainter.createPadSvg();\n\n         if (snap.fPrimitives && snap.fPrimitives.length > 0)\n            padpainter.addPadButtons();\n\n         // we select current pad, where all drawing is performed\n         let prev_name = padpainter.selectCurrentPad(padpainter.this_pad_name);\n\n         return padpainter.drawNextSnap(snap.fPrimitives).then(() => {\n            padpainter.selectCurrentPad(prev_name);\n            return this.drawNextSnap(lst, indx);\n         });\n      }\n\n      // will be used in addToPadPrimitives to assign style to sub-painters\n      this.next_rstyle = lst[indx].fStyle || this.rstyle;\n\n      if (snap._typename === \"ROOT::Experimental::TObjectDisplayItem\") {\n\n         // identifier used in RObjectDrawable\n         const webSnapIds = { kNone: 0,  kObject: 1, kColors: 4, kStyle: 5, kPalette: 6 };\n\n         if (snap.fKind == webSnapIds.kStyle) {\n            Object.assign(gStyle, snap.fObject);\n            return this.drawNextSnap(lst, indx);\n         }\n\n         if (snap.fKind == webSnapIds.kColors) {\n            let ListOfColors = [], arr = snap.fObject.arr;\n            for (let n = 0; n < arr.length; ++n) {\n               let name = arr[n].fString, p = name.indexOf(\"=\");\n               if (p > 0)\n                  ListOfColors[parseInt(name.slice(0,p))] = name.slice(p+1);\n            }\n\n            this.root_colors = ListOfColors;\n            // set global list of colors\n            // adoptRootColors(ListOfColors);\n            return this.drawNextSnap(lst, indx);\n         }\n\n         if (snap.fKind == webSnapIds.kPalette) {\n            let arr = snap.fObject.arr, palette = [];\n            for (let n = 0; n < arr.length; ++n)\n               palette[n] =  arr[n].fString;\n            this.custom_palette = new ColorPalette(palette);\n            return this.drawNextSnap(lst, indx);\n         }\n\n         if (!this.getFramePainter())\n            return this.drawObject(this.getDom(), { _typename: \"TFrame\", $dummy: true }, \"\")\n                       .then(() => this.drawNextSnap(lst, indx-1)); // call same object again\n\n         this.extractTObjectProp(snap);\n      }\n\n      // TODO - fDrawable is v7, fObject from v6, maybe use same data member?\n      return this.drawObject(this.getDom(), snap.fDrawable || snap.fObject || snap, snap.fOption || \"\").then(objpainter => {\n         this.addObjectPainter(objpainter, lst, indx);\n         return this.drawNextSnap(lst, indx);\n      });\n   }\n\n   /** @summary Search painter with specified snapid, also sub-pads are checked\n     * @private */\n   findSnap(snapid, onlyid) {\n\n      function check(checkid) {\n         if (!checkid || (typeof checkid != 'string')) return false;\n         if (checkid == snapid) return true;\n         return onlyid && (checkid.length > snapid.length) &&\n                (checkid.indexOf(snapid) == (checkid.length - snapid.length));\n      }\n\n      if (check(this.snapid)) return this;\n\n      if (!this.painters) return null;\n\n      for (let k=0;k<this.painters.length;++k) {\n         let sub = this.painters[k];\n\n         if (!onlyid && (typeof sub.findSnap === 'function'))\n            sub = sub.findSnap(snapid);\n         else if (!check(sub.snapid))\n            sub = null;\n\n         if (sub) return sub;\n      }\n\n      return null;\n   }\n\n   /** @summary Redraw pad snap\n     * @desc Online version of drawing pad primitives\n     * @returns {Promise} with pad painter*/\n   redrawPadSnap(snap) {\n      // for the pad/canvas display item contains list of primitives plus pad attributes\n\n      if (!snap || !snap.fPrimitives)\n         return Promise.resolve(this);\n\n      // for the moment only window size attributes are provided\n      // let padattr = { fCw: snap.fWinSize[0], fCh: snap.fWinSize[1], fTitle: snap.fTitle };\n\n      // if canvas size not specified in batch mode, temporary use 900x700 size\n      // if (this.batch_mode && this.iscan && (!padattr.fCw || !padattr.fCh)) { padattr.fCw = 900; padattr.fCh = 700; }\n\n      if (this.iscan && this._websocket && snap.fTitle && !this.embed_canvas && (typeof document !== \"undefined\"))\n         document.title = snap.fTitle;\n\n      if (this.snapid === undefined) {\n         // first time getting snap, create all gui elements first\n\n         this.assignSnapId(snap.fObjectID);\n\n         this.draw_object = snap;\n         this.pad = snap;\n\n         if (this.batch_mode && this.iscan)\n             this._fixed_size = true;\n\n         let mainid = this.selectDom().attr(\"id\");\n\n         if (!this.batch_mode && !this.use_openui && !this.brlayout && mainid && (typeof mainid == \"string\")) {\n            this.brlayout = new BrowserLayout(mainid, null, this);\n            this.brlayout.create(mainid, true);\n            this.setDom(this.brlayout.drawing_divid()); // need to create canvas\n            registerForResize(this.brlayout);\n         }\n\n         this.createCanvasSvg(0);\n         this.addPadButtons(true);\n\n         return this.drawNextSnap(snap.fPrimitives);\n      }\n\n      // update only pad/canvas attributes\n      this.updateObject(snap);\n\n      // apply all changes in the object (pad or canvas)\n      if (this.iscan) {\n         this.createCanvasSvg(2);\n      } else {\n         this.createPadSvg(true);\n      }\n\n      let isanyfound = false, isanyremove = false;\n\n      // find and remove painters which no longer exists in the list\n      for (let k = 0;k < this.painters.length; ++k) {\n         let sub = this.painters[k];\n         if (sub.snapid===undefined) continue; // look only for painters with snapid\n\n         snap.fPrimitives.forEach(prim => {\n            if (sub && (prim.fObjectID === sub.snapid)) {\n               sub = null; isanyfound = true;\n            }\n         });\n\n         if (sub) {\n            // remove painter which does not found in the list of snaps\n            this.painters.splice(k--,1);\n            sub.cleanup(); // cleanup such painter\n            isanyremove = true;\n            if (this.main_painter_ref === sub)\n               delete this.main_painter_ref;\n         }\n      }\n\n      if (isanyremove)\n         delete this.pads_cache;\n\n      if (!isanyfound) {\n         let fp = this.getFramePainter();\n         // cannot preserve ROOT6 frame - it must be recreated\n         if (fp?.is_root6()) fp = null;\n         for (let k = 0; k < this.painters.length; ++k)\n             if (fp !== this.painters[k])\n               this.painters[k].cleanup();\n         this.painters = [];\n         delete this.main_painter_ref;\n         if (fp) {\n            this.painters.push(fp);\n            fp.cleanFrameDrawings();\n            fp.redraw(); // need to create all layers again\n         }\n         if (this.removePadButtons) this.removePadButtons();\n         this.addPadButtons(true);\n      }\n\n      let prev_name = this.selectCurrentPad(this.this_pad_name);\n\n      return this.drawNextSnap(snap.fPrimitives).then(() => {\n         this.selectCurrentPad(prev_name);\n\n         if (getActivePad() === this)\n            this.getCanvPainter()?.producePadEvent(\"padredraw\", this);\n         return this;\n      });\n   }\n\n   /** @summary Create image for the pad\n     * @desc Used with web-based canvas to create images for server side\n     * @returns {Promise} with image data, coded with btoa() function\n     * @private */\n   createImage(format) {\n      // use https://github.com/MrRio/jsPDF in the future here\n      if (format == \"pdf\")\n         return Promise.resolve(btoa_func(\"dummy PDF file\"));\n\n      if ((format == \"png\") || (format == \"jpeg\") || (format == \"svg\"))\n         return this.produceImage(true, format).then(res => {\n            if (!res || (format == \"svg\")) return res;\n            let separ = res.indexOf(\"base64,\");\n            return (separ > 0) ? res.slice(separ+7) : \"\";\n         });\n\n      return Promise.resolve(\"\");\n   }\n\n   /** @summary Show context menu for specified item\n     * @private */\n   itemContextMenu(name) {\n       let rrr = this.svg_this_pad().node().getBoundingClientRect(),\n           evnt = { clientX: rrr.left+10, clientY: rrr.top + 10 };\n\n       // use timeout to avoid conflict with mouse click and automatic menu close\n       if (name == \"pad\")\n          return setTimeout(() => this.padContextMenu(evnt), 50);\n\n       let selp = null, selkind;\n\n       switch(name) {\n          case \"xaxis\":\n          case \"yaxis\":\n          case \"zaxis\":\n             selp = this.getMainPainter();\n             selkind = name[0];\n             break;\n          case \"frame\":\n             selp = this.getFramePainter();\n             break;\n          default: {\n             let indx = parseInt(name);\n             if (Number.isInteger(indx)) selp = this.painters[indx];\n          }\n       }\n\n       if (typeof selp?.fillContextMenu !== 'function') return;\n\n       createMenu(evnt, selp).then(menu => {\n          if (selp.fillContextMenu(menu, selkind))\n             setTimeout(() => menu.show(), 50);\n       });\n   }\n\n   /** @summary Save pad in specified format\n     * @desc Used from context menu */\n   saveAs(kind, full_canvas, filename) {\n      if (!filename)\n         filename = (this.this_pad_name || (this.iscan ? \"canvas\" : \"pad\")) + \".\" + kind;\n\n      this.produceImage(full_canvas, kind).then(imgdata => {\n         if (!imgdata)\n            return console.error(`Fail to produce image ${filename}`);\n\n         saveFile(filename, (kind != \"svg\") ? imgdata : \"data:image/svg+xml;charset=utf-8,\"+encodeURIComponent(imgdata));\n      });\n   }\n\n   /** @summary Prodce image for the pad\n     * @returns {Promise} with created image */\n   produceImage(full_canvas, file_format) {\n\n      let use_frame = (full_canvas === \"frame\"),\n          elem = use_frame ? this.getFrameSvg(this.this_pad_name) : (full_canvas ? this.getCanvSvg() : this.svg_this_pad()),\n          painter = (full_canvas && !use_frame) ? this.getCanvPainter() : this,\n          items = []; // keep list of replaced elements, which should be moved back at the end\n\n      if (elem.empty())\n         return Promise.resolve(\"\");\n\n      if (!use_frame) // do not make transformations for the frame\n      painter.forEachPainterInPad(pp => {\n\n         let item = { prnt: pp.svg_this_pad() };\n         items.push(item);\n\n         // remove buttons from each subpad\n         let btns = pp.getLayerSvg(\"btns_layer\", this.this_pad_name);\n         item.btns_node = btns.node();\n         if (item.btns_node) {\n            item.btns_prnt = item.btns_node.parentNode;\n            item.btns_next = item.btns_node.nextSibling;\n            btns.remove();\n         }\n\n         let main = pp.getFramePainter();\n         if (!main || (typeof main.render3D !== 'function') || (typeof main.access3dKind != 'function')) return;\n\n         let can3d = main.access3dKind();\n\n         if ((can3d !== constants.Embed3D.Overlay) && (can3d !== constants.Embed3D.Embed)) return;\n\n         let sz2 = main.getSizeFor3d(constants.Embed3D.Embed), // get size and position of DOM element as it will be embed\n             canvas = main.renderer.domElement;\n\n         main.render3D(0); // WebGL clears buffers, therefore we should render scene and convert immediately\n\n         let dataUrl = canvas.toDataURL(\"image/png\");\n\n         // remove 3D drawings\n\n         if (can3d === constants.Embed3D.Embed) {\n            item.foreign = item.prnt.select(\".\" + sz2.clname);\n            item.foreign.remove();\n         }\n\n         let svg_frame = main.getFrameSvg();\n         item.frame_node = svg_frame.node();\n         if (item.frame_node) {\n            item.frame_next = item.frame_node.nextSibling;\n            svg_frame.remove();\n         }\n\n         // add svg image\n         item.img = item.prnt.insert(\"image\",\".primitives_layer\")     // create image object\n                        .attr(\"x\", sz2.x)\n                        .attr(\"y\", sz2.y)\n                        .attr(\"width\", canvas.width)\n                        .attr(\"height\", canvas.height)\n                        .attr(\"href\", dataUrl);\n\n      }, \"pads\");\n\n      const reEncode = data => {\n         data = encodeURIComponent(data);\n         data = data.replace(/%([0-9A-F]{2})/g, function(match, p1) {\n           let c = String.fromCharCode('0x'+p1);\n           return c === '%' ? '%25' : c;\n         });\n         return decodeURIComponent(data);\n      }, reconstruct = () => {\n         for (let k = 0; k < items.length; ++k) {\n            let item = items[k];\n\n            if (item.img)\n               item.img.remove(); // delete embed image\n\n            let prim = item.prnt.select(\".primitives_layer\");\n\n            if (item.foreign) // reinsert foreign object\n               item.prnt.node().insertBefore(item.foreign.node(), prim.node());\n\n            if (item.frame_node) // reinsert frame as first in list of primitives\n               prim.node().insertBefore(item.frame_node, item.frame_next);\n\n            if (item.btns_node) // reinsert buttons\n               item.btns_prnt.insertBefore(item.btns_node, item.btns_next);\n         }\n      };\n\n      let width = elem.property('draw_width'), height = elem.property('draw_height');\n      if (use_frame) {\n         let fp = this.getFramePainter();\n         width = fp.getFrameWidth();\n         height = fp.getFrameHeight();\n      }\n\n      let svg = `<svg width=\"${width}\" height=\"${height}\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">${elem.node().innerHTML}</svg>`;\n\n      if (internals.processSvgWorkarounds)\n         svg = internals.processSvgWorkarounds(svg);\n\n      svg = compressSVG(svg);\n\n      if (file_format == \"svg\") {\n         reconstruct();\n         return Promise.resolve(svg); // return SVG file as is\n      }\n\n      let doctype = '<?xml version=\"1.0\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">',\n          image = new Image();\n\n      return new Promise(resolveFunc => {\n         image.onload = function() {\n            let canvas = document.createElement('canvas');\n            canvas.width = image.width;\n            canvas.height = image.height;\n            let context = canvas.getContext('2d');\n            context.drawImage(image, 0, 0);\n\n            reconstruct();\n\n            resolveFunc(canvas.toDataURL('image/' + file_format));\n         }\n\n         image.onerror = function(arg) {\n            console.log('IMAGE ERROR', arg);\n            reconstruct();\n            resolveFunc(null);\n         }\n\n         image.src = 'data:image/svg+xml;base64,' + btoa_func(reEncode(doctype + svg));\n      });\n   }\n\n   /** @summary Process pad button click */\n   clickPadButton(funcname, evnt) {\n\n      if (funcname == \"CanvasSnapShot\")\n         return this.saveAs(\"png\", true);\n\n      if (funcname == \"enlargePad\")\n         return this.enlargePad();\n\n      if (funcname == \"PadSnapShot\")\n         return this.saveAs(\"png\", false);\n\n      if (funcname == \"PadContextMenus\") {\n\n         if (evnt) {\n            evnt.preventDefault();\n            evnt.stopPropagation();\n         }\n\n         if (closeMenu()) return;\n\n         createMenu(evnt, this).then(menu => {\n            menu.add(\"header:Menus\");\n\n            if (this.iscan)\n               menu.add(\"Canvas\", \"pad\", this.itemContextMenu);\n            else\n               menu.add(\"Pad\", \"pad\", this.itemContextMenu);\n\n            if (this.getFramePainter())\n               menu.add(\"Frame\", \"frame\", this.itemContextMenu);\n\n            let main = this.getMainPainter(); // here hist painter methods\n\n            if (main) {\n               menu.add(\"X axis\", \"xaxis\", this.itemContextMenu);\n               menu.add(\"Y axis\", \"yaxis\", this.itemContextMenu);\n               if ((typeof main.getDimension === 'function') && (main.getDimension() > 1))\n                  menu.add(\"Z axis\", \"zaxis\", this.itemContextMenu);\n            }\n\n            if (this.painters?.length) {\n               menu.add(\"separator\");\n               let shown = [];\n               for (let n = 0; n < this.painters.length; ++n) {\n                  let obj = this.painters[n]?.getObject();\n                  if (!obj || (shown.indexOf(obj) >= 0)) continue;\n\n                  let name = obj._typename ? obj._typename + \"::\" : \"\";\n                  if (obj.fName) name += obj.fName;\n                  if (!name) name = \"item\" + n;\n                  menu.add(name, n, this.itemContextMenu);\n               }\n            }\n\n            menu.show();\n         });\n\n         return;\n      }\n\n      // click automatically goes to all sub-pads\n      // if any painter indicates that processing completed, it returns true\n      let done = false;\n\n      for (let i = 0; i < this.painters.length; ++i) {\n         let pp = this.painters[i];\n\n         if (typeof pp.clickPadButton == 'function')\n            pp.clickPadButton(funcname);\n\n         if (!done && (typeof pp.clickButton == 'function'))\n            done = pp.clickButton(funcname);\n      }\n   }\n\n   /** @summary Add button to the pad\n     * @private */\n   addPadButton(btn, tooltip, funcname, keyname) {\n      if (!settings.ToolBar || isBatchMode() || this.batch_mode) return;\n\n      if (!this._buttons) this._buttons = [];\n      // check if there are duplications\n\n      for (let k = 0; k < this._buttons.length; ++k)\n         if (this._buttons[k].funcname == funcname) return;\n\n      this._buttons.push({ btn, tooltip, funcname, keyname });\n\n      let iscan = this.iscan || !this.has_canvas;\n      if (!iscan && (funcname.indexOf(\"Pad\") != 0) && (funcname !== \"enlargePad\")) {\n         let cp = this.getCanvPainter();\n         if (cp && (cp !== this)) cp.addPadButton(btn, tooltip, funcname);\n      }\n   }\n\n   /** @summary Add buttons for pad or canvas\n     * @private */\n   addPadButtons(is_online) {\n\n      this.addPadButton(\"camera\", \"Create PNG\", this.iscan ? \"CanvasSnapShot\" : \"PadSnapShot\", \"Ctrl PrintScreen\");\n\n      if (settings.ContextMenu)\n         this.addPadButton(\"question\", \"Access context menus\", \"PadContextMenus\");\n\n      let add_enlarge = !this.iscan && this.has_canvas && this.hasObjectsToDraw()\n\n      if (add_enlarge || this.enlargeMain('verify'))\n         this.addPadButton(\"circle\", \"Enlarge canvas\", \"enlargePad\");\n\n      if (is_online && this.brlayout) {\n         this.addPadButton(\"diamand\", \"Toggle Ged\", \"ToggleGed\");\n         this.addPadButton(\"three_circles\", \"Toggle Status\", \"ToggleStatus\");\n      }\n\n   }\n\n   /** @summary Show pad buttons\n     * @private */\n   showPadButtons() {\n      if (!this._buttons) return;\n\n      PadButtonsHandler.assign(this);\n      this.showPadButtons();\n   }\n\n   /** @summary Calculates RPadLength value */\n   getPadLength(vertical, len, frame_painter) {\n      let sign = vertical ? -1 : 1,\n          rect, res,\n          getV = (indx, dflt) => (indx < len.fArr.length) ? len.fArr[indx] : dflt,\n          getRect = () => {\n             if (!rect)\n                rect = frame_painter ? frame_painter.getFrameRect() : this.getPadRect();\n             return rect;\n          };\n\n      if (frame_painter) {\n         let user = getV(2), func = vertical ? \"gry\" : \"grx\";\n         if ((user !== undefined) && frame_painter[func])\n            res = frame_painter[func](user);\n      }\n\n      if (res === undefined)\n         res = vertical ? getRect().height : 0;\n\n      let norm = getV(0, 0), pixel = getV(1, 0);\n\n      res += sign*pixel;\n\n      if (norm)\n         res += sign * (vertical ? getRect().height : getRect().width) * norm;\n\n      return Math.round(res);\n   }\n\n\n   /** @summary Calculates pad position for RPadPos values\n     * @param {object} pos - instance of RPadPos\n     * @param {object} frame_painter - if drawing will be performed inside frame, frame painter */\n   getCoordinate(pos, frame_painter) {\n      return {\n         x: this.getPadLength(false, pos.fHoriz, frame_painter),\n         y: this.getPadLength(true, pos.fVert, frame_painter)\n      }\n   }\n\n   /** @summary Decode pad draw options */\n   decodeOptions(opt) {\n      let pad = this.getObject();\n      if (!pad) return;\n\n      let d = new DrawOptions(opt);\n\n      if (!this.options) this.options = {};\n\n      Object.assign(this.options, { GlobalColors: true, LocalColors: false, IgnorePalette: false, RotateFrame: false, FixFrame: false });\n\n      if (d.check('NOCOLORS') || d.check('NOCOL')) this.options.GlobalColors = this.options.LocalColors = false;\n      if (d.check('LCOLORS') || d.check('LCOL')) { this.options.GlobalColors = false; this.options.LocalColors = true; }\n      if (d.check('NOPALETTE') || d.check('NOPAL')) this.options.IgnorePalette = true;\n      if (d.check('ROTATE')) this.options.RotateFrame = true;\n      if (d.check('FIXFRAME')) this.options.FixFrame = true;\n\n      if (d.check('WHITE')) pad.fFillColor = 0;\n      if (d.check('LOGX')) pad.fLogx = 1;\n      if (d.check('LOGY')) pad.fLogy = 1;\n      if (d.check('LOGZ')) pad.fLogz = 1;\n      if (d.check('LOG')) pad.fLogx = pad.fLogy = pad.fLogz = 1;\n      if (d.check('GRIDX')) pad.fGridx = 1;\n      if (d.check('GRIDY')) pad.fGridy = 1;\n      if (d.check('GRID')) pad.fGridx = pad.fGridy = 1;\n      if (d.check('TICKX')) pad.fTickx = 1;\n      if (d.check('TICKY')) pad.fTicky = 1;\n      if (d.check('TICK')) pad.fTickx = pad.fTicky = 1;\n   }\n\n   /** @summary draw RPad object */\n   static draw(dom, pad, opt) {\n      let painter = new RPadPainter(dom, pad, false);\n      painter.decodeOptions(opt);\n\n      if (painter.getCanvSvg().empty()) {\n         painter.has_canvas = false;\n         painter.this_pad_name = \"\";\n         painter.setTopPainter();\n      } else {\n         painter.addToPadPrimitives(painter.pad_name); // must be here due to pad painter\n      }\n\n      painter.createPadSvg();\n\n      if (painter.matchObjectType(\"TPad\") && (!painter.has_canvas || painter.hasObjectsToDraw())) {\n         painter.addPadButtons();\n      }\n\n      // we select current pad, where all drawing is performed\n      let prev_name = painter.has_canvas ? painter.selectCurrentPad(painter.this_pad_name) : undefined;\n\n      selectActivePad({ pp: painter, active: false });\n\n      // flag used to prevent immediate pad redraw during first draw\n      return painter.drawPrimitives().then(() => {\n         painter.showPadButtons();\n         // we restore previous pad name\n         painter.selectCurrentPad(prev_name);\n         return painter;\n      });\n   }\n\n} // class RPadPainter\n\nexport { RPadPainter };\n","/// Connections handling to RWebWindow\n\nimport { httpRequest, createHttpRequest, loadScript, decodeUrl, browser, setBatchMode, isBatchMode, btoa_func } from './core.mjs';\n\nimport { closeCurrentWindow, showProgress, loadOpenui5 } from './gui/utils.mjs';\n\n/**\n * @summary Class emulating web socket with long-poll http requests\n *\n * @private\n */\n\nclass LongPollSocket {\n\n   constructor(addr, _raw, _args) {\n      this.path = addr;\n      this.connid = null;\n      this.req = null;\n      this.raw = _raw;\n      this.args = _args;\n\n      this.nextRequest(\"\", \"connect\");\n   }\n\n   /** @summary Submit next request */\n   nextRequest(data, kind) {\n      let url = this.path, reqmode = \"buf\", post = null;\n      if (kind === \"connect\") {\n         url += this.raw ? \"?raw_connect\" : \"?txt_connect\";\n         if (this.args) url += \"&\" + this.args;\n         console.log('longpoll connect ' + url + ' raw = ' + this.raw);\n         this.connid = \"connect\";\n      } else if (kind === \"close\") {\n         if ((this.connid === null) || (this.connid === \"close\")) return;\n         url += \"?connection=\" + this.connid + \"&close\";\n         this.connid = \"close\";\n         reqmode = \"text;sync\"; // use sync mode to close connection before browser window closed\n      } else if ((this.connid === null) || (typeof this.connid !== 'number')) {\n         if (!browser.qt5) console.error(\"No connection\");\n         return;\n      } else {\n         url += \"?connection=\" + this.connid;\n         if (kind === \"dummy\") url += \"&dummy\";\n      }\n\n      if (data) {\n         if (this.raw) {\n            // special workaround to avoid POST request, use base64 coding\n            url += \"&post=\" + btoa_func(data);\n         } else {\n            // send data with post request - most efficient way\n            reqmode = \"postbuf\";\n            post = data;\n         }\n      }\n\n      createHttpRequest(url, reqmode, function(res) {\n         // this set to the request itself, res is response\n\n         if (this.handle.req === this)\n            this.handle.req = null; // get response for existing dummy request\n\n         if (res === null)\n            return this.handle.processRequest(null);\n\n         if (this.handle.raw) {\n            // raw mode - all kind of reply data packed into binary buffer\n            // first 4 bytes header \"txt:\" or \"bin:\"\n            // after the \"bin:\" there is length of optional text argument like \"bin:14  :optional_text\"\n            // and immedaitely after text binary data. Server sends binary data so, that offset should be multiple of 8\n\n            let str = \"\", i = 0, u8Arr = new Uint8Array(res), offset = u8Arr.length;\n            if (offset < 4) {\n               if (!browser.qt5) console.error('longpoll got short message in raw mode ' + offset);\n               return this.handle.processRequest(null);\n            }\n\n            while (i < 4) str += String.fromCharCode(u8Arr[i++]);\n            if (str != \"txt:\") {\n               str = \"\";\n               while ((i < offset) && (String.fromCharCode(u8Arr[i]) != ':'))\n                  str += String.fromCharCode(u8Arr[i++]);\n               ++i;\n               offset = i + parseInt(str.trim());\n            }\n\n            str = \"\";\n            while (i < offset) str += String.fromCharCode(u8Arr[i++]);\n\n            if (str) {\n               if (str == \"<<nope>>\")\n                  this.handle.processRequest(-1111);\n               else\n                   this.handle.processRequest(str);\n            }\n            if (offset < u8Arr.length)\n               this.handle.processRequest(res, offset);\n         } else if (this.getResponseHeader(\"Content-Type\") == \"application/x-binary\") {\n            // binary reply with optional header\n            let extra_hdr = this.getResponseHeader(\"LongpollHeader\");\n            if (extra_hdr) this.handle.processRequest(extra_hdr);\n            this.handle.processRequest(res, 0);\n         } else {\n            // text reply\n            if (res && typeof res !== \"string\") {\n               let str = \"\", u8Arr = new Uint8Array(res);\n               for (let i = 0; i < u8Arr.length; ++i)\n                  str += String.fromCharCode(u8Arr[i]);\n               res = str;\n            }\n            if (res == \"<<nope>>\")\n               this.handle.processRequest(-1111);\n            else\n               this.handle.processRequest(res);\n         }\n      }, function(/*err,status*/) {\n         // console.log(`Get request error ${err} status ${status}`);\n         this.handle.processRequest(null, \"error\");\n      }, true).then(req => {\n         req.handle = this;\n         if (!this.req)\n            this.req = req; // any request can be used for response, do not submit dummy until req is there\n         req.send(post);\n      });\n   }\n\n   /** @summary Process request */\n   processRequest(res, _offset) {\n      if (res === null) {\n         if (typeof this.onerror === 'function')\n            this.onerror(\"receive data with connid \" + (this.connid || \"---\"));\n         if ((_offset == \"error\") && (typeof this.onclose === 'function'))\n            this.onclose(\"force_close\");\n         this.connid = null;\n         return;\n      } else if (res === -1111) {\n         res = \"\";\n      }\n\n      let dummy_tmout = 5;\n\n      if (this.connid === \"connect\") {\n         if (!res) {\n            this.connid = null;\n            if (typeof this.onerror === 'function')\n               this.onerror(\"connection rejected\");\n            return;\n         }\n\n         this.connid = parseInt(res);\n         dummy_tmout = 100; // when establishing connection, wait a bit longer to submit dummy package\n         console.log('Get new longpoll connection with id ' + this.connid);\n         if (typeof this.onopen == 'function') this.onopen();\n      } else if (this.connid === \"close\") {\n         if (typeof this.onclose == 'function')\n            this.onclose();\n         return;\n      } else {\n         if ((typeof this.onmessage === 'function') && res)\n            this.onmessage({ data: res, offset: _offset });\n      }\n\n      // minimal timeout to reduce load, generate dummy only if client not submit new request immediately\n      if (!this.req)\n         setTimeout(() => { if (!this.req) this.nextRequest(\"\", \"dummy\"); }, dummy_tmout);\n   }\n\n   /** @summary Send data */\n   send(str) { this.nextRequest(str); }\n\n   /** @summary Close connection */\n   close() { this.nextRequest(\"\", \"close\"); }\n\n} // class LongPollSocket\n\n// ========================================================================================\n\n/**\n * @summary Class re-playing socket data from stored protocol\n *\n * @private\n */\n\nclass FileDumpSocket {\n\n   constructor(receiver) {\n      this.receiver = receiver;\n      this.protocol = [];\n      this.cnt = 0;\n      httpRequest(\"protocol.json\", \"text\").then(res => this.getProtocol(res));\n   }\n\n   /** @summary Get stored protocol */\n   getProtocol(res) {\n      if (!res) return;\n      this.protocol = JSON.parse(res);\n      if (typeof this.onopen == 'function') this.onopen();\n      this.nextOperation();\n   }\n\n   /** @summary Emulate send - just cound operation */\n   send(/* str */) {\n      if (this.protocol[this.cnt] == \"send\") {\n         this.cnt++;\n         setTimeout(() => this.nextOperation(), 10);\n      }\n   }\n\n   /** @summary Emulate close */\n   close() {}\n\n   /** @summary Read data for next operation */\n   nextOperation() {\n      // when file request running - just ignore\n      if (this.wait_for_file) return;\n      let fname = this.protocol[this.cnt];\n      if (!fname) return;\n      if (fname == \"send\") return; // waiting for send\n      // console.log(\"getting file\", fname, \"wait\", this.wait_for_file);\n      this.wait_for_file = true;\n      this.cnt++;\n      httpRequest(fname, (fname.indexOf(\".bin\") > 0 ? \"buf\" : \"text\")).then(res => {\n         this.wait_for_file = false;\n         if (!res) return;\n         if (this.receiver.provideData)\n            this.receiver.provideData(1, res, 0);\n         setTimeout(() => this.nextOperation(), 10);\n      });\n   }\n\n} // class FileDumpSocket\n\n\n/**\n * @summary Client communication handle for RWebWindow.\n *\n * @desc Should be created with {@link connectWebWindow} function\n */\n\nclass WebWindowHandle {\n\n   constructor(socket_kind, credits) {\n      this.kind = socket_kind;\n      this.state = 0;\n      this.credits = credits || 10;\n      this.cansend = this.credits;\n      this.ackn = this.credits;\n   }\n\n   /** @summary Returns arguments specified in the RWebWindow::SetUserArgs() method\n     * @desc Can be any valid JSON expression. Undefined by default.\n     * @param {string} [field] - if specified and user args is object, returns correspondent object member\n     * @returns user arguments object */\n   getUserArgs(field) {\n      if (field && (typeof field == 'string'))\n         return (this.user_args && (typeof this.user_args == 'object')) ? this.user_args[field] : undefined;\n\n      return this.user_args;\n   }\n\n   /** @summary Set user args\n     * @desc Normally set via RWebWindow::SetUserArgs() method */\n   setUserArgs(args) { this.user_args = args; }\n\n   /** @summary Set callbacks receiver.\n     * @param {object} obj - object with receiver functions\n     * @param {function} obj.onWebsocketMsg - called when new data receieved from RWebWindow\n     * @param {function} obj.onWebsocketOpened - called when connection established\n     * @param {function} obj.onWebsocketClosed - called when connection closed\n     * @param {function} obj.onWebsocketError - called when get error via the connection */\n   setReceiver(obj) { this.receiver = obj; }\n\n   /** @summary Cleanup and close connection. */\n   cleanup() {\n      delete this.receiver;\n      this.close(true);\n   }\n\n   /** @summary Invoke method in the receiver.\n    * @private */\n   invokeReceiver(brdcst, method, arg, arg2) {\n      if (this.receiver && (typeof this.receiver[method] == 'function'))\n         this.receiver[method](this, arg, arg2);\n\n      if (brdcst && this.channels) {\n         let ks = Object.keys(this.channels);\n         for (let n = 0; n < ks.length; ++n)\n            this.channels[ks[n]].invokeReceiver(false, method, arg, arg2);\n      }\n   }\n\n   /** @summary Provide data for receiver. When no queue - do it directly.\n    * @private */\n   provideData(chid, _msg, _len) {\n      if (this.wait_first_recv) {\n         console.log(\"FIRST MESSAGE\", chid, _msg);\n         delete this.wait_first_recv;\n         return this.invokeReceiver(false, \"onWebsocketOpened\");\n      }\n\n      if ((chid > 1) && this.channels) {\n         const channel = this.channels[chid];\n         if (channel)\n            return channel.provideData(1, _msg, _len);\n      }\n\n      const force_queue = _len && (_len < 0);\n\n      if (!force_queue && (!this.msgqueue || !this.msgqueue.length))\n         return this.invokeReceiver(false, \"onWebsocketMsg\", _msg, _len);\n\n      if (!this.msgqueue) this.msgqueue = [];\n      if (force_queue) _len = undefined;\n\n      this.msgqueue.push({ ready: true, msg: _msg, len: _len });\n   }\n\n   /** @summary Reserve entry in queue for data, which is not yet decoded.\n    * @private */\n   reserveQueueItem() {\n      if (!this.msgqueue) this.msgqueue = [];\n      let item = { ready: false, msg: null, len: 0 };\n      this.msgqueue.push(item);\n      return item;\n   }\n\n   /** @summary Provide data for item which was reserved before.\n    * @private */\n   markQueueItemDone(item, _msg, _len) {\n      item.ready = true;\n      item.msg = _msg;\n      item.len = _len;\n      this.processQueue();\n   }\n\n   /** @summary Process completed messages in the queue\n     * @private */\n   processQueue() {\n      if (this._loop_msgqueue || !this.msgqueue) return;\n      this._loop_msgqueue = true;\n      while ((this.msgqueue.length > 0) && this.msgqueue[0].ready) {\n         let front = this.msgqueue.shift();\n         this.invokeReceiver(false, \"onWebsocketMsg\", front.msg, front.len);\n      }\n      if (this.msgqueue.length == 0)\n         delete this.msgqueue;\n      delete this._loop_msgqueue;\n   }\n\n   /** @summary Close connection */\n   close(force) {\n      if (this.master) {\n         this.master.send(\"CLOSECH=\" + this.channelid, 0);\n         delete this.master.channels[this.channelid];\n         delete this.master;\n         return;\n      }\n\n      if (this.timerid) {\n         clearTimeout(this.timerid);\n         delete this.timerid;\n      }\n\n      if (this._websocket && (this.state > 0)) {\n         this.state = force ? -1 : 0; // -1 prevent socket from reopening\n         this._websocket.onclose = null; // hide normal handler\n         this._websocket.close();\n         delete this._websocket;\n      }\n   }\n\n   /** @summary Checks number of credits for send operation\n     * @param {number} [numsend = 1] - number of required send operations\n     * @returns true if one allow to send specified number of text message to server */\n   canSend(numsend) { return this.cansend >= (numsend || 1); }\n\n   /** @summary Returns number of possible send operations relative to number of credits */\n   getRelCanSend() { return !this.credits ? 1 : this.cansend / this.credits; }\n\n   /** @summary Send text message via the connection.\n     * @param {string} msg - text message to send\n     * @param {number} [chid] - channel id, 1 by default, 0 used only for internal communication */\n   send(msg, chid) {\n      if (this.master)\n         return this.master.send(msg, this.channelid);\n\n      if (!this._websocket || (this.state <= 0)) return false;\n\n      if (!Number.isInteger(chid)) chid = 1; // when not configured, channel 1 is used - main widget\n\n      if (this.cansend <= 0) console.error('should be queued before sending cansend: ' + this.cansend);\n\n      let prefix = this.ackn + \":\" + this.cansend + \":\" + chid + \":\";\n      this.ackn = 0;\n      this.cansend--; // decrease number of allowed send packets\n\n      this._websocket.send(prefix + msg);\n\n      if ((this.kind === \"websocket\") || (this.kind === \"longpoll\")) {\n         if (this.timerid) clearTimeout(this.timerid);\n         this.timerid = setTimeout(() => this.keepAlive(), 10000);\n      }\n\n      return true;\n   }\n\n   /** @summary Inject message(s) into input queue, for debug purposes only\n     * @private */\n   inject(msg, chid, immediate) {\n      // use timeout to avoid too deep call stack\n      if (!immediate)\n         return setTimeout(this.inject.bind(this, msg, chid, true), 0);\n\n      if (chid === undefined) chid = 1;\n\n      if (Array.isArray(msg)) {\n         for (let k = 0; k < msg.length; ++k)\n            this.provideData(chid, (typeof msg[k] == \"string\") ? msg[k] : JSON.stringify(msg[k]), -1);\n         this.processQueue();\n      } else if (msg) {\n         this.provideData(chid, typeof msg == \"string\" ? msg : JSON.stringify(msg));\n      }\n   }\n\n   /** @summary Send keep-alive message.\n     * @desc Only for internal use, only when used with websockets\n     * @private */\n   keepAlive() {\n      delete this.timerid;\n      this.send(\"KEEPALIVE\", 0);\n   }\n\n   /** @summary Method open channel, which will share same connection, but can be used independently from main\n     * @private */\n   createChannel() {\n      if (this.master)\n         return master.createChannel();\n\n      let channel = new WebWindowHandle(\"channel\", this.credits);\n      channel.wait_first_recv = true; // first received message via the channel is confirmation of established connection\n\n      if (!this.channels) {\n         this.channels = {};\n         this.freechannelid = 2;\n      }\n\n      channel.master = this;\n      channel.channelid = this.freechannelid++;\n\n      // register\n      this.channels[channel.channelid] = channel;\n\n      // now server-side entity should be initialized and init message send from server side!\n      return channel;\n   }\n\n   /** @summary Returns used channel ID, 1 by default */\n   getChannelId() { return this.channelid && this.master ? this.channelid : 1; }\n\n   /** @summary Assign href parameter\n     * @param {string} [path] - absolute path, when not specified window.location.url will be used\n     * @private */\n   setHRef(path) { this.href = path; }\n\n   /** @summary Return href part\n     * @param {string} [relative_path] - relative path to the handle\n     * @private */\n   getHRef(relative_path) {\n      if (!relative_path || !this.kind || !this.href) return this.href;\n\n      let addr = this.href;\n      if (relative_path.indexOf(\"../\")==0) {\n         let ddd = addr.lastIndexOf(\"/\",addr.length-2);\n         addr = addr.slice(0,ddd) + relative_path.slice(2);\n      } else {\n         addr += relative_path;\n      }\n\n      return addr;\n   }\n\n   /** @summary Create configured socket for current object.\n     * @private */\n   connect(href) {\n\n      this.close();\n      if (!href && this.href) href = this.href;\n\n      let ntry = 0, args = (this.key ? (\"key=\" + this.key) : \"\");\n      if (this.token) {\n         if (args) args += \"&\";\n         args += \"token=\" + this.token;\n      }\n\n      const retry_open = first_time => {\n\n         if (this.state != 0) return;\n\n         if (!first_time) console.log(\"try connect window again \" + new Date().toString());\n\n         if (this._websocket) {\n            this._websocket.close();\n            delete this._websocket;\n         }\n\n         if (!href) {\n            href = window.location.href;\n            if (href && href.indexOf(\"#\") > 0) href = href.slice(0, href.indexOf(\"#\"));\n            if (href && href.lastIndexOf(\"/\") > 0) href = href.slice(0, href.lastIndexOf(\"/\") + 1);\n         }\n         this.href = href;\n         ntry++;\n\n         if (first_time) console.log('Opening web socket at ' + href);\n\n         if (ntry > 2) showProgress(\"Trying to connect \" + href);\n\n         let path = href;\n\n         if (this.kind == \"file\") {\n            path += \"root.filedump\";\n            this._websocket = new FileDumpSocket(this);\n            console.log('configure protocol log ' + path);\n         } else if ((this.kind === 'websocket') && first_time) {\n            path = path.replace(\"http://\", \"ws://\").replace(\"https://\", \"wss://\") + \"root.websocket\";\n            if (args) path += \"?\" + args;\n            console.log('configure websocket ' + path);\n            this._websocket = new WebSocket(path);\n         } else {\n            path += \"root.longpoll\";\n            console.log('configure longpoll ' + path);\n            this._websocket = new LongPollSocket(path, (this.kind === 'rawlongpoll'), args);\n         }\n\n         if (!this._websocket) return;\n\n         this._websocket.onopen = () => {\n            if (ntry > 2) showProgress();\n            this.state = 1;\n\n            let key = this.key || \"\";\n\n            this.send(\"READY=\" + key, 0); // need to confirm connection\n            this.invokeReceiver(false, \"onWebsocketOpened\");\n         };\n\n         this._websocket.onmessage = e => {\n            let msg = e.data;\n\n            if (this.next_binary) {\n\n               let binchid = this.next_binary;\n               delete this.next_binary;\n\n               if (msg instanceof Blob) {\n                  // this is case of websocket\n                  // console.log('Get Blob object - convert to buffer array');\n                  let reader = new FileReader, qitem = this.reserveQueueItem();\n                  // The file's text will be printed here\n                  reader.onload = event => this.markQueueItemDone(qitem, event.target.result, 0);\n                  reader.readAsArrayBuffer(msg, e.offset || 0);\n               } else {\n                  // console.log('got array ' + (typeof msg) + ' len = ' + msg.byteLength);\n                  // this is from CEF or LongPoll handler\n                  this.provideData(binchid, msg, e.offset || 0);\n               }\n\n               return;\n            }\n\n            if (typeof msg != 'string') return console.log(\"unsupported message kind: \" + (typeof msg));\n\n            let i1 = msg.indexOf(\":\"),\n               credit = parseInt(msg.slice(0, i1)),\n               i2 = msg.indexOf(\":\", i1 + 1),\n               // cansend = parseInt(msg.slice(i1 + 1, i2)),  // TODO: take into account when sending messages\n               i3 = msg.indexOf(\":\", i2 + 1),\n               chid = parseInt(msg.slice(i2 + 1, i3));\n\n            this.ackn++;            // count number of received packets,\n            this.cansend += credit; // how many packets client can send\n\n            msg = msg.slice(i3 + 1);\n\n            if (chid == 0) {\n               console.log('GET chid=0 message', msg);\n               if (msg == \"CLOSE\") {\n                  this.close(true); // force closing of socket\n                  this.invokeReceiver(true, \"onWebsocketClosed\");\n               }\n            } else if (msg == \"$$binary$$\") {\n               this.next_binary = chid;\n            } else if (msg == \"$$nullbinary$$\") {\n               this.provideData(chid, new ArrayBuffer(0), 0);\n            } else {\n               this.provideData(chid, msg);\n            }\n\n            if (this.ackn > 7)\n               this.send('READY', 0); // send dummy message to server\n         };\n\n         this._websocket.onclose = arg => {\n            delete this._websocket;\n            if ((this.state > 0) || (arg === \"force_close\")) {\n               console.log('websocket closed');\n               this.state = 0;\n               this.invokeReceiver(true, \"onWebsocketClosed\");\n            }\n         };\n\n         this._websocket.onerror = err => {\n            console.log(`websocket error ${err} state ${this.state}`);\n            if (this.state > 0) {\n               this.invokeReceiver(true, \"onWebsocketError\", err);\n               this.state = 0;\n            }\n         };\n\n         // only in interactive mode try to reconnect\n         if (!isBatchMode())\n            setTimeout(retry_open, 3000); // after 3 seconds try again\n\n      } // retry_open\n\n      retry_open(true); // call for the first time\n   }\n\n} // class WebWindowHandle\n\n\n/** @summary Method used to initialize connection to web window.\n  * @param {object} arg - arguments\n  * @param {string} [arg.socket_kind] - kind of connection longpoll|websocket, detected automatically from URL\n  * @param {number} [arg.credits = 10] - number of packets which can be send to server without acknowledge\n  * @param {object} arg.receiver - instance of receiver for websocket events, allows to initiate connection immediately\n  * @param {string} [arg.first_recv] - required prefix in the first message from RWebWindow, remain part of message will be returned in handle.first_msg\n  * @param {string} [arg.href] - URL to RWebWindow, using window.location.href by default\n  * @returns {Promise} ready-to-use {@link WebWindowHandle} instance  */\nfunction connectWebWindow(arg) {\n\n   if (typeof arg == 'function')\n      arg = { callback: arg };\n   else if (!arg || (typeof arg != 'object'))\n      arg = {};\n\n   let d = decodeUrl();\n\n   // special holder script, prevents headless chrome browser from too early exit\n   if (d.has(\"headless\") && d.get(\"key\") && (browser.isChromeHeadless || browser.isChrome) && !arg.ignore_chrome_batch_holder)\n      loadScript(\"root_batch_holder.js?key=\" + d.get(\"key\"));\n\n   if (!arg.platform)\n      arg.platform = d.get(\"platform\");\n\n   if (arg.platform == \"qt5\")\n      browser.qt5 = true;\n   else if (arg.platform == \"cef3\")\n      browser.cef3 = true;\n\n   if (arg.batch === undefined)\n      arg.batch = d.has(\"headless\");\n\n   if (arg.batch) setBatchMode(true);\n\n   if (!arg.socket_kind)\n      arg.socket_kind = d.get(\"ws\");\n\n   if (!arg.socket_kind) {\n      if (browser.qt5)\n         arg.socket_kind = \"rawlongpoll\";\n      else if (browser.cef3)\n         arg.socket_kind = \"longpoll\";\n      else\n         arg.socket_kind = \"websocket\";\n   }\n\n   // only for debug purposes\n   // arg.socket_kind = \"longpoll\";\n\n   let main = new Promise(resolveFunc => {\n      let handle = new WebWindowHandle(arg.socket_kind, arg.credits);\n      handle.setUserArgs(arg.user_args);\n      if (arg.href) handle.setHRef(arg.href); // apply href now  while connect can be called from other place\n\n      if (window) {\n         window.onbeforeunload = () => handle.close(true);\n         if (browser.qt5) window.onqt5unload = window.onbeforeunload;\n      }\n\n      handle.key = d.get(\"key\");\n      handle.token = d.get(\"token\");\n\n      if (arg.receiver) {\n         // when receiver exists, it handles itself callbacks\n         handle.setReceiver(arg.receiver);\n         handle.connect();\n         return resolveFunc(handle);\n      }\n\n      if (!arg.first_recv)\n         return resolveFunc(handle);\n\n      handle.setReceiver({\n         onWebsocketOpened() {}, // dummy function when websocket connected\n\n         onWebsocketMsg(handle, msg) {\n            if (msg.indexOf(arg.first_recv) != 0)\n               return handle.close();\n            handle.first_msg = msg.slice(arg.first_recv.length);\n            resolveFunc(handle);\n         },\n\n         onWebsocketClosed() { closeCurrentWindow(); } // when connection closed, close panel as well\n      });\n\n      handle.connect();\n   });\n\n   if (!arg.ui5) return main;\n\n   return Promise.all([main, loadOpenui5(arg)]).then(arr => arr[0]);\n}\n\nexport { WebWindowHandle, connectWebWindow };\n","import { settings, create, parse, registerMethods, isBatchMode } from '../core.mjs';\nimport { select as d3_select, rgb as d3_rgb } from '../d3.mjs';\nimport { closeCurrentWindow, showProgress, loadOpenui5, ToolbarIcons } from '../gui/utils.mjs';\nimport { GridDisplay, getHPainter } from '../gui/display.mjs';\nimport { selectActivePad, cleanup, resize } from '../base/ObjectPainter.mjs';\nimport { RObjectPainter } from '../base/RObjectPainter.mjs';\nimport { RAxisPainter } from './RAxisPainter.mjs';\nimport { RFramePainter } from './RFramePainter.mjs';\nimport { RPadPainter } from './RPadPainter.mjs';\nimport { addDragHandler } from './TFramePainter.mjs';\nimport { WebWindowHandle } from '../webwindow.mjs';\n\n\n/**\n * @summary Painter class for RCanvas\n *\n * @private\n */\n\nclass RCanvasPainter extends RPadPainter {\n\n   /** @summary constructor */\n   constructor(dom, canvas) {\n      super(dom, canvas, true);\n      this._websocket = null;\n      this.tooltip_allowed = settings.Tooltip;\n      this.v7canvas = true;\n   }\n\n   /** @summary Cleanup canvas painter */\n   cleanup() {\n      delete this._websocket;\n      delete this._submreq;\n\n     if (this._changed_layout)\n         this.setLayoutKind('simple');\n      delete this._changed_layout;\n\n      super.cleanup();\n   }\n\n   /** @summary Returns layout kind */\n   getLayoutKind() {\n      let origin = this.selectDom('origin'),\n         layout = origin.empty() ? \"\" : origin.property('layout');\n      return layout || 'simple';\n   }\n\n   /** @summary Set canvas layout kind */\n   setLayoutKind(kind, main_selector) {\n      let origin = this.selectDom('origin');\n      if (!origin.empty()) {\n         if (!kind) kind = 'simple';\n         origin.property('layout', kind);\n         origin.property('layout_selector', (kind != 'simple') && main_selector ? main_selector : null);\n         this._changed_layout = (kind !== 'simple'); // use in cleanup\n      }\n   }\n\n   /** @summary Changes layout\n     * @returns {Promise} indicating when finished */\n   changeLayout(layout_kind, mainid) {\n      let current = this.getLayoutKind();\n      if (current == layout_kind)\n         return Promise.resolve(true);\n\n      let origin = this.selectDom('origin'),\n          sidebar = origin.select('.side_panel'),\n          main = this.selectDom(), lst = [];\n\n      while (main.node().firstChild)\n         lst.push(main.node().removeChild(main.node().firstChild));\n\n      if (!sidebar.empty()) cleanup(sidebar.node());\n\n      this.setLayoutKind(\"simple\"); // restore defaults\n      origin.html(\"\"); // cleanup origin\n\n      if (layout_kind == 'simple') {\n         main = origin;\n         for (let k = 0; k < lst.length; ++k)\n            main.node().appendChild(lst[k]);\n         this.setLayoutKind(layout_kind);\n      } else {\n         let grid = new GridDisplay(origin.node(), layout_kind);\n\n         if (mainid == undefined)\n            mainid = (layout_kind.indexOf(\"vert\") == 0) ? 0 : 1;\n\n         main = d3_select(grid.getGridFrame(mainid));\n         sidebar = d3_select(grid.getGridFrame(1 - mainid));\n\n         main.classed(\"central_panel\", true).style('position', 'relative');\n         sidebar.classed(\"side_panel\", true).style('position', 'relative');\n\n         // now append all childs to the new main\n         for (let k = 0; k < lst.length; ++k)\n            main.node().appendChild(lst[k]);\n\n         this.setLayoutKind(layout_kind, \".central_panel\");\n\n         // remove reference to MDIDisplay, solves resize problem\n         origin.property('mdi', null);\n      }\n\n      // resize main drawing and let draw extras\n      resize(main.node());\n      return Promise.resolve(true);\n   }\n\n   /** @summary Toggle projection\n     * @returns {Promise} indicating when ready\n     * @private */\n   toggleProjection(kind) {\n      delete this.proj_painter;\n\n      if (kind) this.proj_painter = 1; // just indicator that drawing can be preformed\n\n      if (this.showUI5ProjectionArea)\n         return this.showUI5ProjectionArea(kind);\n\n      let layout = 'simple', mainid;\n\n      switch(kind) {\n         case \"X\":\n         case \"bottom\": layout = 'vert2_31'; mainid = 0; break;\n         case \"Y\":\n         case \"left\": layout = 'horiz2_13'; mainid = 1; break;\n         case \"top\": layout = 'vert2_13'; mainid = 1; break;\n         case \"right\": layout = 'horiz2_31'; mainid = 0; break;\n      }\n\n      return this.changeLayout(layout, mainid);\n   }\n\n   /** @summary Draw projection for specified histogram\n     * @private */\n   drawProjection( /*kind,hist*/) {\n      // dummy for the moment\n   }\n\n   /** @summary Draw in side panel\n     * @private */\n   drawInSidePanel(canv, opt) {\n      let side = this.selectDom('origin').select(\".side_panel\");\n      if (side.empty()) return Promise.resolve(null);\n      return this.drawObject(side.node(), canv, opt);\n   }\n\n   /** @summary Checks if canvas shown inside ui5 widget\n     * @desc Function should be used only from the func which supposed to be replaced by ui5\n     * @private */\n   testUI5() {\n      if (!this.use_openui) return false;\n      console.warn(\"full ui5 should be used - not loaded yet? Please check!!\");\n      return true;\n   }\n\n   /** @summary Show message\n     * @desc Used normally with web-based canvas and handled in ui5\n     * @private */\n   showMessage(msg) {\n      if (!this.testUI5())\n         showProgress(msg, 7000);\n   }\n\n   /** @summary Function called when canvas menu item Save is called */\n   saveCanvasAsFile(fname) {\n      let pnt = fname.indexOf(\".\");\n      this.createImage(fname.slice(pnt+1))\n          .then(res => { console.log('save', fname, res.length); this.sendWebsocket(\"SAVE:\" + fname + \":\" + res); });\n   }\n\n   /** @summary Send command to server to save canvas with specified name\n     * @desc Should be only used in web-based canvas\n     * @private */\n   sendSaveCommand(fname) {\n      this.sendWebsocket(\"PRODUCE:\" + fname);\n   }\n\n   /** @summary Send message via web socket\n     * @private */\n   sendWebsocket(msg, chid) {\n      if (this._websocket)\n         this._websocket.send(msg, chid);\n   }\n\n   /** @summary Close websocket connection to canvas\n     * @private */\n   closeWebsocket(force) {\n      if (this._websocket) {\n         this._websocket.close(force);\n         this._websocket.cleanup();\n         delete this._websocket;\n      }\n   }\n\n   /** @summary Use provided connection for the web canvas\n     * @private */\n   useWebsocket(handle) {\n      this.closeWebsocket();\n\n      this._websocket = handle;\n      this._websocket.setReceiver(this);\n      this._websocket.connect();\n   }\n\n   /** @summary Hanler for websocket open event\n     * @private */\n   onWebsocketOpened(/*handle*/) {\n   }\n\n   /** @summary Hanler for websocket close event\n     * @private */\n   onWebsocketClosed(/*handle*/) {\n      if (!this.embed_canvas)\n         closeCurrentWindow();\n   }\n\n   /** @summary Hanler for websocket message\n     * @private */\n   onWebsocketMsg(handle, msg) {\n      console.log(\"GET_MSG \" + msg.slice(0,30));\n\n      if (msg == \"CLOSE\") {\n         this.onWebsocketClosed();\n         this.closeWebsocket(true);\n      } else if (msg.slice(0,5)=='SNAP:') {\n         msg = msg.slice(5);\n         let p1 = msg.indexOf(\":\"),\n             snapid = msg.slice(0,p1),\n             snap = parse(msg.slice(p1+1));\n         this.syncDraw(true)\n             .then(() => this.redrawPadSnap(snap))\n             .then(() => {\n                 handle.send(\"SNAPDONE:\" + snapid); // send ready message back when drawing completed\n                 this.confirmDraw();\n              });\n      } else if (msg.slice(0,4)=='JSON') {\n         let obj = parse(msg.slice(4));\n         // console.log(\"get JSON \", msg.length-4, obj._typename);\n         this.redrawObject(obj);\n      } else if (msg.slice(0,9)==\"REPL_REQ:\") {\n         this.processDrawableReply(msg.slice(9));\n      } else if (msg.slice(0,4)=='CMD:') {\n         msg = msg.slice(4);\n         let p1 = msg.indexOf(\":\"),\n             cmdid = msg.slice(0,p1),\n             cmd = msg.slice(p1+1),\n             reply = \"REPLY:\" + cmdid + \":\";\n         if ((cmd == \"SVG\") || (cmd == \"PNG\") || (cmd == \"JPEG\")) {\n            this.createImage(cmd.toLowerCase())\n                .then(res => handle.send(reply + res));\n         } else if (cmd.indexOf(\"ADDPANEL:\") == 0) {\n            let relative_path = cmd.slice(9);\n            if (!this.showUI5Panel) {\n               handle.send(reply + \"false\");\n            } else {\n\n               let conn = new WebWindowHandle(handle.kind);\n\n               // set interim receiver until first message arrives\n               conn.setReceiver({\n                  cpainter: this,\n\n                  onWebsocketOpened() {\n                  },\n\n                  onWebsocketMsg(panel_handle, msg) {\n                     let panel_name = (msg.indexOf(\"SHOWPANEL:\")==0) ? msg.slice(10) : \"\";\n                     this.cpainter.showUI5Panel(panel_name, panel_handle)\n                                  .then(res => handle.send(reply + (res ? \"true\" : \"false\")));\n                  },\n\n                  onWebsocketClosed() {\n                     // if connection failed,\n                     handle.send(reply + \"false\");\n                  },\n\n                  onWebsocketError() {\n                     // if connection failed,\n                     handle.send(reply + \"false\");\n                  }\n\n               });\n\n               let addr = handle.href;\n               if (relative_path.indexOf(\"../\")==0) {\n                  let ddd = addr.lastIndexOf(\"/\",addr.length-2);\n                  addr = addr.slice(0,ddd) + relative_path.slice(2);\n               } else {\n                  addr += relative_path;\n               }\n               // only when connection established, panel will be activated\n               conn.connect(addr);\n            }\n         } else {\n            console.log('Unrecognized command ' + cmd);\n            handle.send(reply);\n         }\n      } else if ((msg.slice(0,7)=='DXPROJ:') || (msg.slice(0,7)=='DYPROJ:')) {\n         let kind = msg[1],\n             hist = parse(msg.slice(7));\n         this.drawProjection(kind, hist);\n      } else if (msg.slice(0,5)=='SHOW:') {\n         let that = msg.slice(5),\n             on = that[that.length-1] == '1';\n         this.showSection(that.slice(0,that.length-2), on);\n      } else {\n         console.log(\"unrecognized msg len:\" + msg.length + \" msg:\" + msg.slice(0,20));\n      }\n   }\n\n   /** @summary Submit request to RDrawable object on server side */\n   submitDrawableRequest(kind, req, painter, method) {\n\n      if (!this._websocket || !req || !req._typename ||\n          !painter.snapid || (typeof painter.snapid != \"string\")) return null;\n\n      if (kind && method) {\n         // if kind specified - check if such request already was submitted\n         if (!painter._requests) painter._requests = {};\n\n         let prevreq = painter._requests[kind];\n\n         if (prevreq) {\n            let tm = new Date().getTime();\n            if (!prevreq._tm || (tm - prevreq._tm < 5000)) {\n               prevreq._nextreq = req; // submit when got reply\n               return false;\n            }\n            delete painter._requests[kind]; // let submit new request after timeout\n         }\n\n         painter._requests[kind] = req; // keep reference on the request\n      }\n\n      req.id = painter.snapid;\n\n      if (method) {\n         if (!this._nextreqid) this._nextreqid = 1;\n         req.reqid = this._nextreqid++;\n      } else {\n         req.reqid = 0; // request will not be replied\n      }\n\n      let msg = JSON.stringify(req);\n\n      if (req.reqid) {\n         req._kind = kind;\n         req._painter = painter;\n         req._method = method;\n         req._tm = new Date().getTime();\n\n         if (!this._submreq) this._submreq = {};\n         this._submreq[req.reqid] = req; // fast access to submitted requests\n      }\n\n      // console.log('Sending request ', msg.slice(0,60));\n\n      this.sendWebsocket(\"REQ:\" + msg);\n      return req;\n   }\n\n   /** @summary Submit menu request\n     * @private */\n   submitMenuRequest(painter, menukind, reqid) {\n      return new Promise(resolveFunc => {\n         this.submitDrawableRequest(\"\", {\n            _typename: \"ROOT::Experimental::RDrawableMenuRequest\",\n            menukind: menukind || \"\",\n            menureqid: reqid, // used to identify menu request\n         }, painter, resolveFunc);\n      });\n   }\n\n   /** @summary Submit executable command for given painter */\n   submitExec(painter, exec, subelem) {\n      // snapid is intentionally ignored - only painter.snapid has to be used\n      if (!this._websocket) return;\n\n      if (subelem && (typeof subelem == 'string')) {\n         let len = subelem.length;\n         if ((len > 2) && (subelem.indexOf(\"#x\") == len - 2)) subelem = \"x\"; else\n         if ((len > 2) && (subelem.indexOf(\"#y\") == len - 2)) subelem = \"y\"; else\n         if ((len > 2) && (subelem.indexOf(\"#z\") == len - 2)) subelem = \"z\";\n\n         if ((subelem == \"x\") || (subelem == \"y\") || (subelem == \"z\"))\n            exec = subelem + \"axis#\" + exec;\n         else\n            return console.log(`not recoginzed subelem ${subelem} in SubmitExec`);\n       }\n\n      this.submitDrawableRequest(\"\", {\n         _typename: \"ROOT::Experimental::RDrawableExecRequest\",\n         exec: exec\n      }, painter);\n   }\n\n   /** @summary Process reply from request to RDrawable */\n   processDrawableReply(msg) {\n      let reply = parse(msg);\n      if (!reply || !reply.reqid || !this._submreq) return false;\n\n      let req = this._submreq[reply.reqid];\n      if (!req) return false;\n\n      // remove reference first\n      delete this._submreq[reply.reqid];\n\n      // remove blocking reference for that kind\n      if (req._kind && req._painter?._requests)\n         if (req._painter._requests[req._kind] === req)\n            delete req._painter._requests[req._kind];\n\n      if (req._method)\n         req._method(reply, req);\n\n      // resubmit last request of that kind\n      if (req._nextreq && !req._painter._requests[req._kind])\n         this.submitDrawableRequest(req._kind, req._nextreq, req._painter, req._method);\n   }\n\n   /** @summary Show specified section in canvas */\n   showSection(that, on) {\n      switch(that) {\n         case \"Menu\": break;\n         case \"StatusBar\": break;\n         case \"Editor\": break;\n         case \"ToolBar\": break;\n         case \"ToolTips\": this.setTooltipAllowed(on); break;\n      }\n      return Promise.resolve(true);\n   }\n\n   /** @summary Method informs that something was changed in the canvas\n     * @desc used to update information on the server (when used with web6gui)\n     * @private */\n   processChanges(kind, painter, subelem) {\n      // check if we could send at least one message more - for some meaningful actions\n      if (!this._websocket || !this._websocket.canSend(2) || (typeof kind !== \"string\")) return;\n\n      let msg = \"\";\n      if (!painter) painter = this;\n      switch (kind) {\n         case \"sbits\":\n            console.log(\"Status bits in RCanvas are changed - that to do?\");\n            break;\n         case \"frame\": // when moving frame\n         case \"zoom\":  // when changing zoom inside frame\n            console.log(\"Frame moved or zoom is changed - that to do?\");\n            break;\n         case \"pave_moved\":\n            console.log('TPave is moved inside RCanvas - that to do?');\n            break;\n         default:\n            if ((kind.slice(0,5) == \"exec:\") && painter?.snapid) {\n               this.submitExec(painter, kind.slice(5), subelem);\n            } else {\n               console.log(\"UNPROCESSED CHANGES\", kind);\n            }\n      }\n\n      if (msg) {\n         console.log(\"RCanvas::processChanges want to send  \" + msg.length + \"  \" + msg.slice(0,40));\n      }\n   }\n\n   /** @summary Handle pad button click event\n     * @private */\n   clickPadButton(funcname, evnt) {\n      if (funcname == \"ToggleGed\") return this.activateGed(this, null, \"toggle\");\n      if (funcname == \"ToggleStatus\") return this.activateStatusBar(\"toggle\");\n      super.clickPadButton(funcname, evnt);\n   }\n\n   /** @summary returns true when event status area exist for the canvas */\n   hasEventStatus() {\n      if (this.testUI5()) return false;\n      if (this.brlayout)\n         return this.brlayout.hasStatus();\n      let hp = getHPainter();\n      return hp ? hp.hasStatusLine() : false;\n   }\n\n   /** @summary Show/toggle event status bar\n     * @private */\n   activateStatusBar(state) {\n      if (this.testUI5()) return;\n      if (this.brlayout)\n         this.brlayout.createStatusLine(23, state);\n      else\n         getHPainter()?.createStatusLine(23, state);\n\n      this.processChanges(\"sbits\", this);\n   }\n\n   /** @summary Returns true if GED is present on the canvas */\n   hasGed() {\n      if (this.testUI5()) return false;\n      return this.brlayout?.hasContent() ?? false;\n   }\n\n   /** @summary Function used to de-activate GED\n     * @private */\n   removeGed() {\n      if (this.testUI5()) return;\n\n      this.registerForPadEvents(null);\n\n      if (this.ged_view) {\n         this.ged_view.getController().cleanupGed();\n         this.ged_view.destroy();\n         delete this.ged_view;\n      }\n      this.brlayout?.deleteContent();\n\n      this.processChanges(\"sbits\", this);\n   }\n\n   /** @summary Function used to activate GED\n     * @returns {Promise} when GED is there\n     * @private */\n   activateGed(objpainter, kind, mode) {\n      if (this.testUI5() || !this.brlayout)\n         return Promise.resolve(false);\n\n      if (this.brlayout.hasContent()) {\n         if ((mode === \"toggle\") || (mode === false))\n            this.removeGed();\n         else\n            objpainter?.getPadPainter()?.selectObjectPainter(objpainter);\n\n         return Promise.resolve(true);\n      }\n\n      if (mode === false)\n         return Promise.resolve(false);\n\n      let btns = this.brlayout.createBrowserBtns();\n\n      ToolbarIcons.createSVG(btns, ToolbarIcons.diamand, 15, \"toggle fix-pos mode\")\n                  .style(\"margin\",\"3px\").on(\"click\", () => this.brlayout.toggleKind('fix'));\n\n      ToolbarIcons.createSVG(btns, ToolbarIcons.circle, 15, \"toggle float mode\")\n                  .style(\"margin\",\"3px\").on(\"click\", () => this.brlayout.toggleKind('float'));\n\n      ToolbarIcons.createSVG(btns, ToolbarIcons.cross, 15, \"delete GED\")\n                  .style(\"margin\",\"3px\").on(\"click\", () => this.removeGed());\n\n      // be aware, that jsroot_browser_hierarchy required for flexible layout that element use full browser area\n      this.brlayout.setBrowserContent(\"<div class='jsroot_browser_hierarchy' id='ged_placeholder'>Loading GED ...</div>\");\n      this.brlayout.setBrowserTitle(\"GED\");\n      this.brlayout.toggleBrowserKind(kind || \"float\");\n\n      return new Promise(resolveFunc => {\n\n         loadOpenui5.then(sap => {\n\n            d3_select(\"#ged_placeholder\").text(\"\");\n\n            sap.ui.define([\"sap/ui/model/json/JSONModel\", \"sap/ui/core/mvc/XMLView\"], (JSONModel,XMLView) => {\n\n               let oModel = new JSONModel({ handle: null });\n\n               XMLView.create({\n                  viewName: \"rootui5.canv.view.Ged\"\n               }).then(oGed => {\n\n                  oGed.setModel(oModel);\n\n                  oGed.placeAt(\"ged_placeholder\");\n\n                  this.ged_view = oGed;\n\n                  // TODO: should be moved into Ged controller - it must be able to detect canvas painter itself\n                  this.registerForPadEvents(oGed.getController().padEventsReceiver.bind(oGed.getController()));\n\n                  objpainter?.getPadPainter()?.selectObjectPainter(objpainter);\n\n                  this.processChanges(\"sbits\", this);\n\n                  resolveFunc(true);\n               });\n            });\n         });\n      });\n   }\n\n   /** @summary produce JSON for RCanvas, which can be used to display canvas once again\n     * @private */\n   produceJSON() {\n      console.error('RCanvasPainter.produceJSON not yet implemented');\n      return \"\";\n   }\n\n   /** @summary draw RCanvas object */\n   static draw(dom, can /*, opt */) {\n      let nocanvas = !can;\n      if (nocanvas)\n         can = create(\"ROOT::Experimental::TCanvas\");\n\n      let painter = new RCanvasPainter(dom, can);\n      painter.normal_canvas = !nocanvas;\n      painter.createCanvasSvg(0);\n\n      selectActivePad({ pp: painter, active: false });\n\n      return painter.drawPrimitives().then(() => {\n         painter.addPadButtons();\n         painter.showPadButtons();\n         return painter;\n      });\n   }\n\n} // class RCanvasPainter\n\n\n/** @summary draw RPadSnapshot object\n  * @private */\nfunction drawRPadSnapshot(dom, snap /*, opt*/) {\n   let painter = new RCanvasPainter(dom, null);\n   painter.normal_canvas = false;\n   painter.batch_mode = isBatchMode();\n   return painter.syncDraw(true).then(() => painter.redrawPadSnap(snap)).then(() => {\n      painter.confirmDraw();\n      painter.showPadButtons();\n      return painter;\n   });\n}\n\n/** @summary Ensure RCanvas and RFrame for the painter object\n  * @param {Object} painter  - painter object to process\n  * @param {string|boolean} frame_kind  - false for no frame or \"3d\" for special 3D mode\n  * @desc Assigns DOM, creates and draw RCanvas and RFrame if necessary, add painter to pad list of painters\n  * @returns {Promise} for ready */\nfunction ensureRCanvas(painter, frame_kind) {\n   if (!painter)\n      return Promise.reject(Error('Painter not provided in ensureRCanvas'));\n\n   // simple check - if canvas there, can use painter\n   let pr = painter.getCanvSvg().empty() ? RCanvasPainter.draw(painter.getDom(), null /* , noframe */) : Promise.resolve(true);\n\n   return pr.then(() => {\n      if ((frame_kind !== false) && painter.getFrameSvg().select(\".main_layer\").empty())\n         return RFramePainter.draw(painter.getDom(), null, (typeof frame_kind === \"string\") ? frame_kind : \"\");\n   }).then(() => {\n      painter.addToPadPrimitives();\n      return painter;\n   });\n}\n\n\n/** @summary Function used for direct draw of RFrameTitle\n  * @private */\nfunction drawRFrameTitle(reason, drag) {\n   let fp = this.getFramePainter();\n   if (!fp)\n      return console.log('no frame painter - no title');\n\n   let rect         = fp.getFrameRect(),\n       fx           = rect.x,\n       fy           = rect.y,\n       fw           = rect.width,\n       // fh           = rect.height,\n       ph           = this.getPadPainter().getPadHeight(),\n       title        = this.getObject(),\n       title_margin = this.v7EvalLength(\"margin\", ph, 0.02),\n       title_width  = fw,\n       title_height = this.v7EvalLength(\"height\", ph, 0.05),\n       textFont     = this.v7EvalFont(\"text\", { size: 0.07, color: \"black\", align: 22 });\n\n   if (reason == 'drag') {\n      title_height = drag.height;\n      title_margin = fy - drag.y - drag.height;\n      let changes = {};\n      this.v7AttrChange(changes, \"margin\", title_margin / ph);\n      this.v7AttrChange(changes, \"height\", title_height / ph);\n      this.v7SendAttrChanges(changes, false); // do not invoke canvas update on the server\n   }\n\n   this.createG();\n\n   this.draw_g.attr(\"transform\",`translate(${fx},${Math.round(fy-title_margin-title_height)})`);\n\n   let arg = { x: title_width/2, y: title_height/2, text: title.fText, latex: 1 };\n\n   this.startTextDrawing(textFont, 'font');\n\n   this.drawText(arg);\n\n   return this.finishTextDrawing().then(() => {\n      if (!isBatchMode())\n        addDragHandler(this, { x: fx, y: Math.round(fy-title_margin-title_height), width: title_width, height: title_height,\n                               minwidth: 20, minheight: 20, no_change_x: true, redraw: d => this.redraw('drag', d) });\n   });\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////\n\nregisterMethods(\"ROOT::Experimental::RPalette\", {\n\n   extractRColor(rcolor) {\n     return rcolor.fColor || \"black\";\n   },\n\n   getColor(indx) {\n      return this.palette[indx];\n   },\n\n   getContourIndex(zc) {\n      let cntr = this.fContour, l = 0, r = cntr.length-1, mid;\n\n      if (zc < cntr[0]) return -1;\n      if (zc >= cntr[r]) return r-1;\n\n      if (this.fCustomContour) {\n         while (l < r-1) {\n            mid = Math.round((l+r)/2);\n            if (cntr[mid] > zc) r = mid; else l = mid;\n         }\n         return l;\n      }\n\n      // last color in palette starts from level cntr[r-1]\n      return Math.floor((zc-cntr[0]) / (cntr[r-1] - cntr[0]) * (r-1));\n   },\n\n   getContourColor(zc) {\n      let zindx = this.getContourIndex(zc);\n      return (zindx < 0) ? \"\" : this.getColor(zindx);\n   },\n\n   getContour() {\n      return this.fContour && (this.fContour.length > 1) ? this.fContour : null;\n   },\n\n   deleteContour() {\n      delete this.fContour;\n   },\n\n   calcColor(value, entry1, entry2) {\n      let dist = entry2.fOrdinal - entry1.fOrdinal,\n          r1 = entry2.fOrdinal - value,\n          r2 = value - entry1.fOrdinal;\n\n      if (!this.fInterpolate || (dist <= 0))\n         return (r1 < r2) ? entry2.fColor : entry1.fColor;\n\n      // interpolate\n      let col1 = d3_rgb(this.extractRColor(entry1.fColor)),\n          col2 = d3_rgb(this.extractRColor(entry2.fColor)),\n          color = d3_rgb(Math.round((col1.r*r1 + col2.r*r2)/dist),\n                         Math.round((col1.g*r1 + col2.g*r2)/dist),\n                         Math.round((col1.b*r1 + col2.b*r2)/dist));\n\n      return color.toString();\n   },\n\n   createPaletteColors(len) {\n      let arr = [], indx = 0;\n\n      while (arr.length < len) {\n         let value = arr.length / (len-1);\n\n         let entry = this.fColors[indx];\n\n         if ((Math.abs(entry.fOrdinal - value)<0.0001) || (indx == this.fColors.length - 1)) {\n            arr.push(this.extractRColor(entry.fColor));\n            continue;\n         }\n\n         let next = this.fColors[indx+1];\n         if (next.fOrdinal <= value)\n            indx++;\n         else\n            arr.push(this.calcColor(value, entry, next));\n      }\n\n      return arr;\n   },\n\n   getColorOrdinal(value) {\n      // extract color with ordinal value between 0 and 1\n      if (!this.fColors)\n         return \"black\";\n      if ((typeof value != \"number\") || (value < 0))\n         value = 0;\n      else if (value > 1)\n         value = 1;\n\n      // TODO: implement better way to find index\n\n      let entry, next = this.fColors[0];\n      for (let indx = 0; indx < this.fColors.length-1; ++indx) {\n         entry = next;\n\n         if (Math.abs(entry.fOrdinal - value) < 0.0001)\n            return this.extractRColor(entry.fColor);\n\n         next = this.fColors[indx+1];\n         if (next.fOrdinal > value)\n            return this.calcColor(value, entry, next);\n      }\n\n      return this.extractRColor(next.fColor);\n   },\n\n   setFullRange(min, max) {\n      // set full z scale range, used in zooming\n      this.full_min = min;\n      this.full_max = max;\n   },\n\n   createContour(logz, nlevels, zmin, zmax, zminpositive) {\n      this.fContour = [];\n      delete this.fCustomContour;\n      this.colzmin = zmin;\n      this.colzmax = zmax;\n\n      if (logz) {\n         if (this.colzmax <= 0) this.colzmax = 1.;\n         if (this.colzmin <= 0)\n            if ((zminpositive===undefined) || (zminpositive <= 0))\n               this.colzmin = 0.0001*this.colzmax;\n            else\n               this.colzmin = ((zminpositive < 3) || (zminpositive>100)) ? 0.3*zminpositive : 1;\n         if (this.colzmin >= this.colzmax) this.colzmin = 0.0001*this.colzmax;\n\n         let logmin = Math.log(this.colzmin)/Math.log(10),\n             logmax = Math.log(this.colzmax)/Math.log(10),\n             dz = (logmax-logmin)/nlevels;\n         this.fContour.push(this.colzmin);\n         for (let level=1; level<nlevels; level++)\n            this.fContour.push(Math.exp((logmin + dz*level)*Math.log(10)));\n         this.fContour.push(this.colzmax);\n         this.fCustomContour = true;\n      } else {\n         if ((this.colzmin === this.colzmax) && (this.colzmin !== 0)) {\n            this.colzmax += 0.01*Math.abs(this.colzmax);\n            this.colzmin -= 0.01*Math.abs(this.colzmin);\n         }\n         let dz = (this.colzmax-this.colzmin)/nlevels;\n         for (let level=0; level<=nlevels; level++)\n            this.fContour.push(this.colzmin + dz*level);\n      }\n\n      if (!this.palette || (this.palette.length != nlevels))\n         this.palette = this.createPaletteColors(nlevels);\n   }\n\n});\n\n/** @summary draw RFont object\n  * @private */\nfunction drawRFont() {\n   let font   = this.getObject(),\n       svg    = this.getCanvSvg(),\n       defs   = svg.select('.canvas_defs'),\n       clname = \"custom_font_\" + font.fFamily+font.fWeight+font.fStyle;\n\n   if (defs.empty())\n      defs = svg.insert(\"svg:defs\", \":first-child\").attr(\"class\", \"canvas_defs\");\n\n   let entry = defs.select(\".\" + clname);\n   if (entry.empty())\n      entry = defs.append(\"style\").attr(\"type\", \"text/css\").attr(\"class\", clname);\n\n   entry.text(`@font-face { font-family: \"${font.fFamily}\"; font-weight: ${font.fWeight ? font.fWeight : \"normal\"}; font-style: ${font.fStyle ? font.fStyle : \"normal\"}; src: ${font.fSrc}; }`);\n\n   if (font.fDefault)\n      this.getPadPainter()._dfltRFont = font;\n\n   return true;\n}\n\n/** @summary draw RAxis object\n  * @private */\nfunction drawRAxis(dom, obj, opt) {\n   let painter = new RAxisPainter(dom, obj, opt);\n   painter.disable_zooming = true;\n   return ensureRCanvas(painter, false)\n           .then(() => painter.redraw())\n           .then(() => painter);\n}\n\n/** @summary draw RFrame object\n  * @private */\nfunction drawRFrame(dom, obj, opt) {\n   let p = new RFramePainter(dom, obj);\n   if (opt == \"3d\") p.mode3d = true;\n   return ensureRCanvas(p, false).then(() => p.redraw());\n}\n\nexport { ensureRCanvas, drawRPadSnapshot,\n         drawRFrameTitle, drawRFont, drawRAxis, drawRFrame,\n         RObjectPainter, RPadPainter, RCanvasPainter };\n"],"x_google_ignoreList":[0,1,2,3,4,5]}