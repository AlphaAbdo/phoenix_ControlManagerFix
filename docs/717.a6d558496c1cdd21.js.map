{"version":3,"file":"717.a6d558496c1cdd21.js","mappings":"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","names":["RObjectPainter","ObjectPainter","constructor","dom","obj","opt","csstype","super","this","v7EvalAttr","name","dflt","getObject","cssprefix","type_check","res","undefined","typ1","typ2","parseFloat","fAttr","m","value","v","rstyle","fBlocks","blks","k","length","block","selector","fId","fCssClass","map","toLowerCase","v7SetAttr","v7EvalLength","sizepx","Math","round","norm","px","val","operand","pos","console","log","slice","Number","isFinite","v7EvalColor","pp","getPadPainter","_auto_color_cnt","pal","getHistPalette","cnt","num","_num_primitives","getColorOrdinal","_auto_colors","error","ordinal","v7EvalFont","dflts","fontScale","size","rfont","_dfltRFont","fFamily","fStyle","fWeight","text_size","text_angle","text_align","align","text_color","color","font_family","font_style","font_weight","getPadHeight","handler","FontHandler","setAngle","setAlign","setColor","createv7AttFill","prefix","pattern","createAttFill","color_as_svg","createv7AttLine","width","style","createAttLine","lineatt","setBorder","createv7AttMarker","refsize","createAttMarker","v7AttrChange","req","kind","snapid","_typename","ids","names","values","update","push","parseInt","JSON","stringify","v7SendAttrChanges","do_update","canp","getCanvPainter","v7SubmitRequest","method","submitDrawableRequest","_pending_request","assignSnapId","id","p","v7CommMode","_websocket","v7NormalMode","v7OfflineMode","RAxisPainter","arg1","axis","Object","assign","AxisPainterMethods","initAxisPainter","embedded","cleanup","axis_g","cleanupAxisPainter","getAxisType","configureZAxis","fp","_log","logbase","abs","exp","logz","configureAxis","min","max","smin","smax","vertical","frame_range","axis_range","opts","full_min","full_max","_symlog","reverse","timeoffset","toffset","fLabelsIndex","own_labels","labels","func","d3_scaleTime","domain","convertDate","symlog","d3_scaleSymlog","constant","d3_scaleLog","base","d3_scaleLinear","scale_min","scale_max","gr_range","range","axis_shift","gr","format","ndiv","nticks","nticks2","nticks3","floor","scale_range","tf1","tf2","chooseTimeFormat","tfunc1","tfunc2","d3_timeFormat","formatTime","noexp","moreloglabels","formatLog","formatLabels","order","ndig","formatNormal","getScaleMin","getScaleMax","d","indx","fNBinsNoOver","i","pair","second","first","fLabels","createTicks","only_major_as_array","optionNoexp","optionNoopt","optionInt","noticksopt","handle","nminor","nmiddle","nmajor","minor","middle","major","produceTicks","delta","unshift","reset","next","doround","tick","grpos","last_major","next_major_grpos","maxorder","minorder","exclorder3","maxtick","mintick","ord1","log10","ord2","bestorder","bestndig","bestlen","lbls","totallen","lbl","indexOf","warn","isCenteredLabels","processLabelsMove","arg","optionUnlab","label_g","select","box","node","getBBox","append","classed","attr","x","y","height","drag_pos0","offset","property","remove","side","labelsOffset","changeAxisAttr","scalingSize","addTitleDrag","title_g","settings","isBatchMode","acc_x","acc_y","new_x","new_y","alt_pos","curr_indx","drag_rect","drag_move","d3_drag","subject","on","evnt","sourceEvent","preventDefault","stopPropagation","title_length","titlePos","off","swap","isReverseAxis","title_align","isTitleRotated","dx","dy","set_x","set_y","besti","basepos","titleOffset","call","isInsideGrRange","delta1","delta2","getGrRange","drawMainLine","ending","endingSize","endingStyle","sz","sz7","drawTicks","main_draw","ticks","ticks_plusminus","ticksSide","h1","ticksSize","h2","startingSize","ticksColor","ticksWidth","gap0","gap","drawLabels","gaps","center_lbls","rotate_lbls","labelsFont","angle","textscale","maxtextlen","lbls_tilt","lbl_pos","max_lbl_width","max_lbl_height","process_drawtext_ready","painter","result_width","result_height","textwidth","maxwidth","gap_before","gap_after","scale","scaleTextDrawing","lastpos","fix_offset","fix_coord","startTextDrawing","text","latex","draw_g","post_process","drawText","axis_step","has_obstacle","formatExp","finishTextDrawing","then","selectAll","each","txt","d3_select","tr","tilt_height","sin","PI","cos","addZoomingRect","lgaps","disable_zooming","titleFont","drawTitle","fTitle","Promise","resolve","title_shift_x","title_shift_y","title_basepos","rotated","titleCenter","titleOpposite","extractDrawAttributes","rect","getPadRect","roundAngle","maxTickSize","drawAxis","layer","transform","standalone","empty","tgaps","setAfterDrawHandler","_afterDrawAgain","drawAxisAgain","drawAxisOtherPlace","only_ticks","zoomStandalone","redraw","drawable","getCoordinate","fPos","len","getPadLength","fVertical","fLength","labels_len","createG","promise","createMenu","menu","add","fillAxisContextMenu","show","addDragHandler","only_move","positionChanged","d3_pointer","item","analyzeWheelEvent","changed","drag","xn","yn","fHoriz","fArr","fVert","submitCanvExec","toFixed","redraw_mode","changes","arguments","redrawPad","changeAxisLog","getFramePainter","unzoom","addchk","input","addRColorMenu","col","addSizeMenu","addSelectMenu","addRAttrTextItems","noangle","noalign","change","t","flag","RFramePainter","tframe","mode3d","xmin","xmax","ymin","ymax","axes_drawn","keys_handler","projection","v7_frame","is_root6","setFrameActive","enabledKeys","control","enableKeys","setLastEventPos","pnt","fLastEventPnt","getLastEventPos","updateAttributes","force","fX1NDC","modified_NDC","fY1NDC","fX2NDC","fY2NDC","fillatt","getProjectionFunc","l","b","DegToRad","alpha2","r2","sqrt","f","cdec","denom","tan","recalculateRange","Proj","scale_ymin","scale_ymax","pnts","scale_xmin","scale_xmax","original_xmin","original_xmax","original_ymin","original_ymax","n","drawGrids","getFrameSvg","h","getFrameHeight","w","getFrameWidth","gridx","gridy","grid_style","getSvgLineStyle","gStyle","grid_color","getColor","x_handle","draw_grid","grid","swap_xy","y_handle","axisAsText","toUpperCase","toPrecision","_setAxisRange","vmin","vmax","nmin","nmax","nzmin","nzmax","zoomChangedInteractive","setAxesRanges","xaxis","yaxis","zaxis","zmin","zmax","setAxes2Ranges","second_x","second_y","x2axis","y2axis","createXY","self_drawaxes","cleanXY","v6axes","reverse_x","reverse_y","logx","logy","extra_y_space","zoom_ymin","zoom_ymax","zoom_xmin","zoom_xmax","create","TAxisPainter","getDom","setPadName","getPadName","symlog_y","symlog_x","logcheckmin","logminfactor","assignFrameMembers","ndim","log_min_nz","ymin_nz","hasDrawnAxes","drawAxes","ticksx","ticksy","sidex","sidey","cleanupAxes","draw_swapside","draw_ticks","z_handle","pr","draw_horiz","draw_vertical","_fast_drawing","can_adjust_frame","disable_x_draw","disable_y_draw","disable_ticks","pr1","invert_side","pr2","_frame_x","all","arr","drawAxes2","zoom_x2min","zoom_x2max","scale_x2min","scale_x2max","x2min","x2max","x2_handle","zoom_y2min","zoom_y2max","scale_y2min","scale_y2max","y2min","y2max","y2_handle","getGrFuncs","use_x2","grx2","use_y2","gry2","grx","gry","revertAxis","sizeChanged","clean","grname","cleanFrameDrawings","create3DScene","window","removeEventListener","_click_handler","_dblclick_handler","frame_painter_ref","trans","top_rect","main_svg","lm","tm","rotate","fixpos","options","RotateFrame","FixFrame","_frame_y","_frame_width","_frame_height","_frame_rotate","_frame_fixpos","getLayerSvg","rx","ry","addInteractivity","FrameInteractive","addBasicInteractivity","getFrameRect","hint_delta_x","hint_delta_y","configureUserClickHandler","configureUserDblclickHandler","zoom","zoom_x","zoom_y","zoom_z","unzoom_x","unzoom_y","unzoom_z","r_x","r_y","r_z","is_any_check","flags","checkZooming","canZoomInside","zoom_zmin","zoom_zmax","forEachPainter","ranges","interactiveRedraw","zoomSingle","zoom_v","unzoom_v","isAxisZoomed","dox","doy","doz","zoom_changed_x","zoom_changed_y","zoom_changed_z","fld","fillObjectOfflineMenu","changeFrameAttr","fillContextMenu","alone","isTooltipAllowed","setTooltipAllowed","addAttributesMenu","saveAs","revertPoint","showAxisStatus","axis_name","hint_name","axis_value","showObjectStatus","addKeysHandler","addFrameKeysHandler","for_second_axes","addFrameInteractivity","setRootPadRange","toggleAxisLog","RPadPainter","pad","iscan","this_pad_name","fObjectID","internals","painters","has_canvas","forEachPainterInPad","isRoot6","svg_this_pad","getPadSvg","getMainPainter","main_painter_ref","setMainPainter","_doing_draw","forEach","svg_p","pads_cache","_pad_x","_pad_y","_pad_width","_pad_height","draw_object","pad_frame","selectActivePad","active","getPadWidth","szx","szy","getRootPad","cleanPrimitives","splice","findPainterFor","selobj","selname","seltype","find","pobj","fName","fDfltPalette","fColors","fOrdinal","fColor","fInterpolate","fNormalized","addMethods","getNumPainters","userfunc","sub","registerForPadEvents","receiver","pad_events_receiver","producePadEvent","_what","_padpainter","_painter","_position","_place","what","padpainter","position","place","selectObjectPainter","istoppad","getAbsPosInCanvas","createCanvasSvg","check_resize","new_size","btns","frect","factor","svg","_fixed_size","getCanvSvg","testMainResize","render_to","selectDom","setTopPainter","online_canvas","enlargePad","padContextMenu","fWinSize","getElementRect","alignButtons","svg_can","pad_enlarged","hasObjectsToDraw","enlargeMain","was_fast","checkResize","showPadButtons","createPadSvg","only_resize","svg_parent","pad_name","pad_visible","svg_pad","svg_rect","fSize","color0","fBorderMode","constants","fPrimitives","syncDraw","entry","findIndex","e","resolveFunc","confirmDraw","shift","drawObject","drawPrimitives","_start_tm","Date","getTime","spenttm","ppainter","_primitive","processPadTooltipEvent","hints","processTooltipEvent","nproc","hint","user_info","changeDarkMode","mode","addSettingsMenu","hasMenuBar","actiavteMenuBar","hasEventStatus","activateStatusBar","fname","fillObjectExecMenu","reason","sync_promise","showsubitems","redrawNext","isPromise","getActivePad","needRedrawByResize","elem","checkCanvasResize","updateObject","addObjectPainter","objpainter","lst","extractTObjectProp","snap","fColIndex","fColValue","colors","root_colors","getRootColors","pattr","fObject","assignObject","fCssType","fOption","extract_color","member_name","attr_name","addColor","fLineColor","fLineWidth","fLineStyle","fFillColor","fFillStyle","fMarkerColor","fMarkerStyle","fMarkerSize","fTextColor","fTextAlign","fTextAngle","fTextSize","drawNextSnap","_snaps_map","next_rstyle","fDummy","redrawPadSnap","fDrawable","subpad","decodeOptions","addToPadPrimitives","addPadButtons","prev_name","selectCurrentPad","webSnapIds","kNone","kObject","kColors","kStyle","kPalette","fKind","ListOfColors","fString","palette","custom_palette","ColorPalette","$dummy","findSnap","onlyid","check","checkid","embed_canvas","document","title","batch_mode","mainid","use_openui","brlayout","BrowserLayout","setDom","drawing_divid","registerForResize","isanyfound","isanyremove","prim","removePadButtons","createImage","btoa_func","produceImage","separ","itemContextMenu","rrr","getBoundingClientRect","clientX","left","clientY","top","setTimeout","selkind","selp","isInteger","full_canvas","filename","imgdata","saveFile","encodeURIComponent","file_format","use_frame","items","prnt","btns_node","btns_prnt","parentNode","btns_next","nextSibling","main","render3D","access3dKind","can3d","sz2","getSizeFor3d","canvas","renderer","domElement","dataUrl","toDataURL","foreign","clname","svg_frame","frame_node","frame_next","img","insert","reconstruct","insertBefore","innerHTML","compressSVG","image","Image","onload","createElement","getContext","drawImage","onerror","src","data","replace","match","p1","c","String","fromCharCode","decodeURIComponent","reEncode","clickPadButton","funcname","closeMenu","getDimension","shown","done","clickButton","addPadButton","btn","tooltip","keyname","_buttons","cp","is_online","PadButtonsHandler","frame_painter","sign","getV","getRect","user","DrawOptions","GlobalColors","LocalColors","IgnorePalette","fLogx","fLogy","fLogz","fGridx","fGridy","fTickx","fTicky","static","matchObjectType","LongPollSocket","addr","_raw","_args","path","connid","raw","args","nextRequest","url","reqmode","post","browser","createHttpRequest","processRequest","str","u8Arr","Uint8Array","trim","getResponseHeader","extra_hdr","send","_offset","onclose","dummy_tmout","onopen","onmessage","close","FileDumpSocket","protocol","httpRequest","getProtocol","parse","nextOperation","wait_for_file","provideData","WebWindowHandle","socket_kind","credits","state","cansend","ackn","getUserArgs","field","user_args","setUserArgs","setReceiver","invokeReceiver","brdcst","arg2","channels","ks","keys","chid","_msg","_len","wait_first_recv","channel","force_queue","msgqueue","ready","msg","reserveQueueItem","markQueueItemDone","processQueue","_loop_msgqueue","front","master","channelid","timerid","clearTimeout","canSend","numsend","getRelCanSend","keepAlive","inject","immediate","bind","Array","isArray","createChannel","freechannelid","getChannelId","setHRef","href","getHRef","relative_path","ddd","lastIndexOf","connect","ntry","key","token","retry_open","first_time","toString","location","showProgress","WebSocket","next_binary","binchid","Blob","reader","FileReader","qitem","event","target","result","readAsArrayBuffer","i1","credit","i2","i3","ArrayBuffer","err","RCanvasPainter","tooltip_allowed","v7canvas","_submreq","_changed_layout","setLayoutKind","getLayoutKind","origin","main_selector","changeLayout","layout_kind","sidebar","firstChild","removeChild","html","appendChild","GridDisplay","getGridFrame","resize","toggleProjection","proj_painter","showUI5ProjectionArea","layout","drawProjection","drawInSidePanel","canv","testUI5","showMessage","saveCanvasAsFile","sendWebsocket","sendSaveCommand","closeWebsocket","useWebsocket","onWebsocketOpened","onWebsocketClosed","closeCurrentWindow","onWebsocketMsg","redrawObject","processDrawableReply","cmdid","cmd","reply","showUI5Panel","conn","cpainter","panel_handle","panel_name","onWebsocketError","hist","that","showSection","_requests","prevreq","_tm","_nextreq","_nextreqid","reqid","_kind","_method","submitMenuRequest","menukind","menureqid","submitExec","exec","subelem","processChanges","activateGed","hasStatus","hp","getHPainter","hasStatusLine","createStatusLine","hasGed","hasContent","removeGed","ged_view","getController","cleanupGed","destroy","deleteContent","createBrowserBtns","ToolbarIcons","toggleKind","setBrowserContent","setBrowserTitle","toggleBrowserKind","loadOpenui5","sap","ui","define","JSONModel","XMLView","oModel","viewName","oGed","setModel","placeAt","padEventsReceiver","produceJSON","can","nocanvas","normal_canvas","drawRPadSnapshot","ensureRCanvas","frame_kind","draw","reject","Error","drawRFrameTitle","fx","fy","fw","ph","title_margin","title_width","title_height","textFont","fText","minwidth","minheight","no_change_x","drawRFont","font","defs","fSrc","fDefault","drawRAxis","drawRFrame","registerMethods","extractRColor","rcolor","getContourIndex","zc","mid","cntr","fContour","r","fCustomContour","getContourColor","zindx","getContour","deleteContour","calcColor","entry1","entry2","dist","r1","col1","d3_rgb","col2","g","createPaletteColors","setFullRange","createContour","nlevels","zminpositive","colzmin","colzmax","logmin","dz","level"],"sourceRoot":"webpack:///","sources":["../node_modules/jsroot/modules/base/RObjectPainter.mjs","../node_modules/jsroot/modules/gpad/RAxisPainter.mjs","../node_modules/jsroot/modules/gpad/RFramePainter.mjs","../node_modules/jsroot/modules/gpad/RPadPainter.mjs","../node_modules/jsroot/modules/webwindow.mjs","../node_modules/jsroot/modules/gpad/RCanvasPainter.mjs"],"sourcesContent":["import { FontHandler } from './FontHandler.mjs';\nimport { ObjectPainter } from './ObjectPainter.mjs';\n\n\nconst kNormal = 1, /* kLessTraffic = 2, */ kOffline = 3;\n\nclass RObjectPainter extends ObjectPainter {\n\n   constructor(dom, obj, opt, csstype) {\n      super(dom,obj,opt);\n      this.csstype = csstype;\n   }\n\n   /** @summary Evaluate v7 attributes using fAttr storage and configured RStyle */\n   v7EvalAttr(name, dflt) {\n      let obj = this.getObject();\n      if (!obj) return dflt;\n      if (this.cssprefix) name = this.cssprefix + name;\n\n      const type_check = res => {\n         if (dflt === undefined) return res;\n         let typ1 = typeof dflt, typ2 = typeof res;\n         if (typ1 == typ2) return res;\n         if (typ1 == 'boolean') {\n            if (typ2 == 'string') return (res != \"\") && (res != \"0\") && (res != \"no\") && (res != \"off\");\n            return !!res;\n         }\n         if ((typ1 == 'number') && (typ2 == 'string'))\n            return parseFloat(res);\n         return res;\n      };\n\n      if (obj.fAttr && obj.fAttr.m) {\n         let value = obj.fAttr.m[name];\n         if (value) return type_check(value.v); // found value direct in attributes\n      }\n\n      if (this.rstyle && this.rstyle.fBlocks) {\n         let blks = this.rstyle.fBlocks;\n         for (let k = 0; k < blks.length; ++k) {\n            let block = blks[k],\n                match = (this.csstype && (block.selector == this.csstype)) ||\n                        (obj.fId && (block.selector == (\"#\" + obj.fId))) ||\n                        (obj.fCssClass && (block.selector == (\".\" + obj.fCssClass)));\n\n            if (match && block.map && block.map.m) {\n               let value = block.map.m[name.toLowerCase()];\n               if (value) return type_check(value.v);\n            }\n         }\n      }\n\n      return dflt;\n   }\n\n   /** @summary Set v7 attributes value */\n   v7SetAttr(name, value) {\n      let obj = this.getObject();\n      if (this.cssprefix) name = this.cssprefix + name;\n\n      if (obj && obj.fAttr && obj.fAttr.m)\n         obj.fAttr.m[name] = { v: value };\n   }\n\n   /** @summary Decode pad length from string, return pixel value */\n   v7EvalLength(name, sizepx, dflt) {\n      if (sizepx <= 0) sizepx = 1;\n\n      let value = this.v7EvalAttr(name);\n\n      if (value === undefined)\n         return Math.round(dflt*sizepx);\n\n      if (typeof value == \"number\")\n         return Math.round(value*sizepx);\n\n      if (value === null)\n         return 0;\n\n      let norm = 0, px = 0, val = value, operand = 0, pos = 0;\n\n      while (val.length > 0) {\n         // skip empty spaces\n         while ((pos < val.length) && ((val[pos] == ' ') || (val[pos] == '\\t')))\n            ++pos;\n\n         if (pos >= val.length)\n            break;\n\n         if ((val[pos] == '-') || (val[pos] == '+')) {\n            if (operand) {\n               console.log(\"Fail to parse RPadLength \" + value);\n               return dflt;\n            }\n            operand = (val[pos] == '-') ? -1 : 1;\n            pos++;\n            continue;\n         }\n\n         if (pos > 0) { val = val.slice(pos); pos = 0; }\n\n         while ((pos < val.length) && (((val[pos]>='0') && (val[pos]<='9')) || (val[pos]=='.'))) pos++;\n\n         let v = parseFloat(val.slice(0, pos));\n         if (!Number.isFinite(v)) {\n            console.log(\"Fail to parse RPadLength \" + value);\n            return Math.round(dflt*sizepx);\n         }\n\n         val = val.slice(pos);\n         pos = 0;\n         if (!operand) operand = 1;\n         if ((val.length > 0) && (val[0] == '%')) {\n            val = val.slice(1);\n            norm += operand*v*0.01;\n         } else if ((val.length > 1) && (val[0] == 'p') && (val[1] == 'x')) {\n            val = val.slice(2);\n            px += operand*v;\n         } else {\n            norm += operand*v;\n         }\n\n         operand = 0;\n      }\n\n      return Math.round(norm*sizepx + px);\n   }\n\n   /** @summary Evaluate RColor using attribute storage and configured RStyle */\n   v7EvalColor(name, dflt) {\n      let val = this.v7EvalAttr(name, \"\");\n      if (!val || (typeof val != \"string\")) return dflt;\n\n      if (val == \"auto\") {\n         let pp = this.getPadPainter();\n         if (pp?._auto_color_cnt !== undefined) {\n            let pal = pp.getHistPalette(),\n                cnt = pp._auto_color_cnt++,\n                num = pp._num_primitives - 1;\n            if (num < 2) num = 2;\n            val = pal ? pal.getColorOrdinal((cnt % num) / num) : \"blue\";\n            if (!this._auto_colors) this._auto_colors = {};\n            this._auto_colors[name] = val;\n         } else if (this._auto_colors && this._auto_colors[name]) {\n            val = this._auto_colors[name];\n         } else {\n            console.error(`Autocolor ${name} not defined yet - please check code`);\n            val = \"\";\n         }\n      } else if (val[0] == \"[\") {\n         let ordinal = parseFloat(val.slice(1, val.length-1));\n         val = \"black\";\n         if (Number.isFinite(ordinal)) {\n             let pp = this.getPadPainter(),\n                 pal = pp?.getHistPalette();\n             if (pal) val = pal.getColorOrdinal(ordinal);\n         }\n      }\n      return val;\n   }\n\n   /** @summary Evaluate RAttrText properties\n     * @returns {Object} FontHandler, can be used directly for the text drawing */\n   v7EvalFont(name, dflts, fontScale) {\n\n      if (!dflts) dflts = {}; else\n      if (typeof dflts == \"number\") dflts = { size: dflts };\n\n      let pp = this.getPadPainter(),\n          rfont = pp?._dfltRFont || { fFamily: \"Arial\", fStyle: \"\", fWeight: \"\" },\n          text_size   = this.v7EvalAttr(name + \"_size\", dflts.size || 12),\n          text_angle  = this.v7EvalAttr(name + \"_angle\", 0),\n          text_align  = this.v7EvalAttr(name + \"_align\", dflts.align || \"none\"),\n          text_color  = this.v7EvalColor(name + \"_color\", dflts.color || \"none\"),\n          font_family = this.v7EvalAttr(name + \"_font_family\", rfont.fFamily || \"Arial\"),\n          font_style  = this.v7EvalAttr(name + \"_font_style\", rfont.fStyle || \"\"),\n          font_weight = this.v7EvalAttr(name + \"_font_weight\", rfont.fWeight || \"\");\n\n       if (typeof text_size == \"string\") text_size = parseFloat(text_size);\n       if (!Number.isFinite(text_size) || (text_size <= 0)) text_size = 12;\n       if (!fontScale) fontScale = pp?.getPadHeight() || 100;\n\n       let handler = new FontHandler(null, text_size, fontScale, font_family, font_style, font_weight);\n\n       if (text_angle) handler.setAngle(360 - text_angle);\n       if (text_align !== \"none\") handler.setAlign(text_align);\n       if (text_color !== \"none\") handler.setColor(text_color);\n\n       return handler;\n    }\n\n   /** @summary Create this.fillatt object based on v7 fill attributes */\n   createv7AttFill(prefix) {\n      if (!prefix || (typeof prefix != \"string\")) prefix = \"fill_\";\n\n      let color = this.v7EvalColor(prefix + \"color\", \"\"),\n          pattern = this.v7EvalAttr(prefix + \"style\", 0);\n\n      this.createAttFill({ pattern, color,  color_as_svg: true });\n   }\n\n   /** @summary Create this.lineatt object based on v7 line attributes */\n   createv7AttLine(prefix) {\n      if (!prefix || (typeof prefix != \"string\")) prefix = \"line_\";\n\n      let color = this.v7EvalColor(prefix + \"color\", \"black\"),\n          width = this.v7EvalAttr(prefix + \"width\", 1),\n          style = this.v7EvalAttr(prefix + \"style\", 1),\n          pattern = this.v7EvalAttr(prefix + \"pattern\");\n\n      this.createAttLine({ color, width, style, pattern });\n\n      if (prefix == \"border_\")\n         this.lineatt.setBorder(this.v7EvalAttr(prefix + \"rx\", 0), this.v7EvalAttr(prefix + \"ry\", 0));\n   }\n\n    /** @summary Create this.markeratt object based on v7 attributes */\n   createv7AttMarker(prefix) {\n      if (!prefix || (typeof prefix != \"string\")) prefix = \"marker_\";\n\n      let color = this.v7EvalColor(prefix + \"color\", \"black\"),\n          size = this.v7EvalAttr(prefix + \"size\", 0.01),\n          style = this.v7EvalAttr(prefix + \"style\", 1),\n          refsize = 1;\n      if (size < 1) {\n         let pp = this.getPadPainter();\n         refsize = pp?.getPadHeight() || 100;\n      }\n\n      this.createAttMarker({ color, size, style, refsize });\n   }\n\n   /** @summary Create RChangeAttr, which can be applied on the server side\n     * @private */\n   v7AttrChange(req, name, value, kind) {\n      if (!this.snapid)\n         return false;\n\n      if (!req._typename) {\n         req._typename = \"ROOT::Experimental::RChangeAttrRequest\";\n         req.ids = [];\n         req.names = [];\n         req.values = [];\n         req.update = true;\n      }\n\n      if (this.cssprefix) name = this.cssprefix + name;\n      req.ids.push(this.snapid);\n      req.names.push(name);\n      let obj = null;\n\n      if ((value === null) || (value === undefined)) {\n        if (!kind) kind = 'none';\n        if (kind !== 'none') console.error(`Trying to set ${kind} for none value`);\n      }\n\n      if (!kind)\n         switch(typeof value) {\n            case \"number\": kind = \"double\"; break;\n            case \"boolean\": kind = \"boolean\"; break;\n         }\n\n      obj = { _typename: \"ROOT::Experimental::RAttrMap::\" };\n      switch(kind) {\n         case \"none\": obj._typename += \"NoValue_t\"; break;\n         case \"boolean\": obj._typename += \"BoolValue_t\"; obj.v = value ? true : false; break;\n         case \"int\": obj._typename += \"IntValue_t\"; obj.v = parseInt(value); break;\n         case \"double\": obj._typename += \"DoubleValue_t\"; obj.v = parseFloat(value); break;\n         default: obj._typename += \"StringValue_t\"; obj.v = (typeof value == \"string\") ? value : JSON.stringify(value); break;\n      }\n\n      req.values.push(obj);\n      return true;\n   }\n\n   /** @summary Sends accumulated attribute changes to server */\n   v7SendAttrChanges(req, do_update) {\n      let canp = this.getCanvPainter();\n      if (canp && req?._typename) {\n         if (do_update !== undefined)\n            req.update = do_update ? true : false;\n         canp.v7SubmitRequest(\"\", req);\n      }\n   }\n\n   /** @summary Submit request to server-side drawable\n    * @param kind defines request kind, only single request a time can be submitted\n    * @param req is object derived from DrawableRequest, including correct _typename\n    * @param method is method of painter object which will be called when getting reply */\n   v7SubmitRequest(kind, req, method) {\n      let canp = this.getCanvPainter();\n      if (typeof canp?.submitDrawableRequest != 'function') return null;\n\n      // special situation when snapid not yet assigned - just keep ref until snapid is there\n      // maybe keep full list - for now not clear if really needed\n      if (!this.snapid) {\n         this._pending_request = { kind, req, method };\n         return req;\n      }\n\n      return canp.submitDrawableRequest(kind, req, this, method);\n   }\n\n   /** @summary Assign snapid to the painter\n     * @desc Overwrite default method */\n   assignSnapId(id) {\n      this.snapid = id;\n      if (this.snapid && this._pending_request) {\n         let p = this._pending_request;\n         this.v7SubmitRequest(p.kind, p.req, p.method);\n         delete this._pending_request;\n      }\n   }\n\n   /** @summary Return communication mode with the server\n     * @desc\n     * kOffline means no server there,\n     * kLessTraffic advise not to send commands if offline functionality available\n     * kNormal is standard functionality with RCanvas on server side */\n   v7CommMode() {\n      let canp = this.getCanvPainter();\n      if (!canp || !canp.submitDrawableRequest || !canp._websocket)\n         return kOffline;\n\n      return kNormal;\n   }\n\n   v7NormalMode() { return this.v7CommMode() == kNormal; }\n\n   v7OfflineMode() { return this.v7CommMode() == kOffline; }\n\n} // class RObjectPainter\n\nexport { RObjectPainter };\n","import { settings, isBatchMode } from '../core.mjs';\nimport { select as d3_select, pointer as d3_pointer,\n         drag as d3_drag, timeFormat as d3_timeFormat,\n         scaleTime as d3_scaleTime, scaleSymlog as d3_scaleSymlog,\n         scaleLog as d3_scaleLog, scaleLinear as d3_scaleLinear } from '../d3.mjs';\nimport { AxisPainterMethods, chooseTimeFormat } from './TAxisPainter.mjs';\nimport { createMenu } from '../gui/menu.mjs';\nimport { addDragHandler } from './TFramePainter.mjs';\nimport { RObjectPainter } from '../base/RObjectPainter.mjs';\n\n\n/**\n * @summary Axis painter for v7\n *\n * @private\n */\n\nclass RAxisPainter extends RObjectPainter {\n\n   /** @summary constructor */\n   constructor(dom, arg1, axis, cssprefix) {\n      let drawable = cssprefix ? arg1.getObject() : arg1;\n      super(dom, drawable, \"\", cssprefix ? arg1.csstype : \"axis\");\n      Object.assign(this, AxisPainterMethods);\n      this.initAxisPainter();\n\n      this.axis = axis;\n      if (cssprefix) { // drawing from the frame\n         this.embedded = true; // indicate that painter embedded into the histo painter\n         //this.csstype = arg1.csstype; // for the moment only via frame one can set axis attributes\n         this.cssprefix = cssprefix;\n         this.rstyle = arg1.rstyle;\n      } else {\n         // this.csstype = \"axis\";\n         this.cssprefix = \"axis_\";\n      }\n   }\n\n   /** @summary cleanup painter */\n   cleanup() {\n      delete this.axis;\n      delete this.axis_g;\n      this.cleanupAxisPainter();\n      super.cleanup();\n   }\n\n   /** @summary Use in GED to identify kind of axis */\n   getAxisType() { return \"RAttrAxis\"; }\n\n   /** @summary Configure only base parameters, later same handle will be used for drawing  */\n   configureZAxis(name, fp) {\n      this.name = name;\n      this.kind = \"normal\";\n      this.log = false;\n      let _log = this.v7EvalAttr(\"log\", 0);\n      if (_log) {\n         this.log = true;\n         this.logbase = 10;\n         if (Math.abs(_log - Math.exp(1))<0.1)\n            this.logbase = Math.exp(1);\n         else if (_log > 1.9)\n            this.logbase = Math.round(_log);\n      }\n      fp.logz = this.log;\n   }\n\n   /** @summary Configure axis painter\n     * @desc Axis can be drawn inside frame <g> group with offset to 0 point for the frame\n     * Therefore one should distinguish when caclulated coordinates used for axis drawing itself or for calculation of frame coordinates\n     * @private */\n   configureAxis(name, min, max, smin, smax, vertical, frame_range, axis_range, opts) {\n      if (!opts) opts = {};\n      this.name = name;\n      this.full_min = min;\n      this.full_max = max;\n      this.kind = \"normal\";\n      this.vertical = vertical;\n      this.log = false;\n      let _log = this.v7EvalAttr(\"log\", 0),\n          _symlog = this.v7EvalAttr(\"symlog\", 0);\n      this.reverse = opts.reverse || false;\n\n      if (this.v7EvalAttr(\"time\")) {\n         this.kind = 'time';\n         this.timeoffset = 0;\n         let toffset = this.v7EvalAttr(\"timeOffset\");\n         if (toffset !== undefined) {\n            toffset = parseFloat(toffset);\n            if (Number.isFinite(toffset)) this.timeoffset = toffset*1000;\n         }\n      } else if (this.axis && this.axis.fLabelsIndex) {\n         this.kind = 'labels';\n         delete this.own_labels;\n      } else if (opts.labels) {\n         this.kind = 'labels';\n      } else {\n         this.kind = 'normal';\n      }\n\n      if (this.kind == 'time') {\n         this.func = d3_scaleTime().domain([this.convertDate(smin), this.convertDate(smax)]);\n      } else if (_symlog && (_symlog > 0)) {\n         this.symlog = _symlog;\n         this.func = d3_scaleSymlog().constant(_symlog).domain([smin,smax]);\n      } else if (_log) {\n         if (smax <= 0) smax = 1;\n         if ((smin <= 0) || (smin >= smax))\n            smin = smax * 0.0001;\n         this.log = true;\n         this.logbase = 10;\n         if (Math.abs(_log - Math.exp(1))<0.1)\n            this.logbase = Math.exp(1);\n         else if (_log > 1.9)\n            this.logbase = Math.round(_log);\n         this.func = d3_scaleLog().base(this.logbase).domain([smin,smax]);\n      } else {\n         this.func = d3_scaleLinear().domain([smin,smax]);\n      }\n\n      this.scale_min = smin;\n      this.scale_max = smax;\n\n      this.gr_range = axis_range || 1000; // when not specified, one can ignore it\n\n      let range = frame_range ? frame_range : [0, this.gr_range];\n\n      this.axis_shift = range[1] - this.gr_range;\n\n      if (this.reverse)\n         this.func.range([range[1], range[0]]);\n      else\n         this.func.range(range);\n\n      if (this.kind == 'time')\n         this.gr = val => this.func(this.convertDate(val));\n      else if (this.log)\n         this.gr = val => (val < this.scale_min) ? (this.vertical ? this.func.range()[0]+5 : -5) : this.func(val);\n      else\n         this.gr = this.func;\n\n      delete this.format;// remove formatting func\n\n      let ndiv = this.v7EvalAttr(\"ndiv\", 508);\n\n      this.nticks = ndiv % 100;\n      this.nticks2 = (ndiv % 10000 - this.nticks) / 100;\n      this.nticks3 = Math.floor(ndiv/10000);\n\n      if (this.nticks > 20) this.nticks = 20;\n\n      let gr_range = Math.abs(this.gr_range) || 100;\n\n      if (this.kind == 'time') {\n         if (this.nticks > 8) this.nticks = 8;\n\n         let scale_range = this.scale_max - this.scale_min,\n             tf1 = this.v7EvalAttr(\"timeFormat\", \"\"),\n             tf2 = chooseTimeFormat(scale_range / gr_range, false);\n\n         if (!tf1 || (scale_range < 0.1 * (this.full_max - this.full_min)))\n            tf1 = chooseTimeFormat(scale_range / this.nticks, true);\n\n         this.tfunc1 = this.tfunc2 = d3_timeFormat(tf1);\n         if (tf2!==tf1)\n            this.tfunc2 = d3_timeFormat(tf2);\n\n         this.format = this.formatTime;\n\n      } else if (this.log) {\n         if (this.nticks2 > 1) {\n            this.nticks *= this.nticks2; // all log ticks (major or minor) created centrally\n            this.nticks2 = 1;\n         }\n         this.noexp = this.v7EvalAttr(\"noexp\", false);\n         if ((this.scale_max < 300) && (this.scale_min > 0.3) && (this.logbase == 10)) this.noexp = true;\n         this.moreloglabels = this.v7EvalAttr(\"moreloglbls\", false);\n\n         this.format = this.formatLog;\n      } else if (this.kind == 'labels') {\n         this.nticks = 50; // for text output allow max 50 names\n         let scale_range = this.scale_max - this.scale_min;\n         if (this.nticks > scale_range)\n            this.nticks = Math.round(scale_range);\n         this.nticks2 = 1;\n\n         this.format = this.formatLabels;\n      } else {\n         this.order = 0;\n         this.ndig = 0;\n         this.format = this.formatNormal;\n      }\n   }\n\n   /** @summary Return scale min */\n   getScaleMin() {\n      return this.func ? this.func.domain()[0] : 0;\n   }\n\n   /** @summary Return scale max */\n   getScaleMax() {\n      return this.func ? this.func.domain()[1] : 0;\n   }\n\n   /** @summary Provide label for axis value */\n   formatLabels(d) {\n      let indx = Math.round(d);\n      if (this.axis && this.axis.fLabelsIndex) {\n         if ((indx < 0) || (indx >= this.axis.fNBinsNoOver)) return null;\n         for (let i = 0; i < this.axis.fLabelsIndex.length; ++i) {\n            let pair = this.axis.fLabelsIndex[i];\n            if (pair.second === indx) return pair.first;\n         }\n      } else {\n         let labels = this.getObject().fLabels;\n         if (labels && (indx >= 0) && (indx < labels.length))\n            return labels[indx];\n      }\n      return null;\n   }\n\n   /** @summary Creates array with minor/middle/major ticks */\n   createTicks(only_major_as_array, optionNoexp, optionNoopt, optionInt) {\n\n      if (optionNoopt && this.nticks && (this.kind == \"normal\")) this.noticksopt = true;\n\n      let handle = { nminor: 0, nmiddle: 0, nmajor: 0, func: this.func };\n\n      handle.minor = handle.middle = handle.major = this.produceTicks(this.nticks);\n\n      if (only_major_as_array) {\n         let res = handle.major, delta = (this.scale_max - this.scale_min)*1e-5;\n         if (res[0] > this.scale_min + delta) res.unshift(this.scale_min);\n         if (res[res.length-1] < this.scale_max - delta) res.push(this.scale_max);\n         return res;\n      }\n\n      if ((this.nticks2 > 1) && (!this.log || (this.logbase === 10))) {\n         handle.minor = handle.middle = this.produceTicks(handle.major.length, this.nticks2);\n\n         let gr_range = Math.abs(this.func.range()[1] - this.func.range()[0]);\n\n         // avoid black filling by middle-size\n         if ((handle.middle.length <= handle.major.length) || (handle.middle.length > gr_range/3.5)) {\n            handle.minor = handle.middle = handle.major;\n         } else if ((this.nticks3 > 1) && !this.log)  {\n            handle.minor = this.produceTicks(handle.middle.length, this.nticks3);\n            if ((handle.minor.length <= handle.middle.length) || (handle.minor.length > gr_range/1.7)) handle.minor = handle.middle;\n         }\n      }\n\n      handle.reset = function() {\n         this.nminor = this.nmiddle = this.nmajor = 0;\n      };\n\n      handle.next = function(doround) {\n         if (this.nminor >= this.minor.length) return false;\n\n         this.tick = this.minor[this.nminor++];\n         this.grpos = this.func(this.tick);\n         if (doround) this.grpos = Math.round(this.grpos);\n         this.kind = 3;\n\n         if ((this.nmiddle < this.middle.length) && (Math.abs(this.grpos - this.func(this.middle[this.nmiddle])) < 1)) {\n            this.nmiddle++;\n            this.kind = 2;\n         }\n\n         if ((this.nmajor < this.major.length) && (Math.abs(this.grpos - this.func(this.major[this.nmajor])) < 1) ) {\n            this.nmajor++;\n            this.kind = 1;\n         }\n         return true;\n      };\n\n      handle.last_major = function() {\n         return (this.kind !== 1) ? false : this.nmajor == this.major.length;\n      };\n\n      handle.next_major_grpos = function() {\n         if (this.nmajor >= this.major.length) return null;\n         return this.func(this.major[this.nmajor]);\n      };\n\n      this.order = 0;\n      this.ndig = 0;\n\n      // at the moment when drawing labels, we can try to find most optimal text representation for them\n\n      if ((this.kind == \"normal\") && !this.log && (handle.major.length > 0)) {\n\n         let maxorder = 0, minorder = 0, exclorder3 = false;\n\n         if (!optionNoexp) {\n            let maxtick = Math.max(Math.abs(handle.major[0]),Math.abs(handle.major[handle.major.length-1])),\n                mintick = Math.min(Math.abs(handle.major[0]),Math.abs(handle.major[handle.major.length-1])),\n                ord1 = (maxtick > 0) ? Math.round(Math.log10(maxtick)/3)*3 : 0,\n                ord2 = (mintick > 0) ? Math.round(Math.log10(mintick)/3)*3 : 0;\n\n             exclorder3 = (maxtick < 2e4); // do not show 10^3 for values below 20000\n\n             if (maxtick || mintick) {\n                maxorder = Math.max(ord1,ord2) + 3;\n                minorder = Math.min(ord1,ord2) - 3;\n             }\n         }\n\n         // now try to find best combination of order and ndig for labels\n\n         let bestorder = 0, bestndig = this.ndig, bestlen = 1e10;\n\n         for (let order = minorder; order <= maxorder; order+=3) {\n            if (exclorder3 && (order===3)) continue;\n            this.order = order;\n            this.ndig = 0;\n            let lbls = [], indx = 0, totallen = 0;\n            while (indx<handle.major.length) {\n               let lbl = this.format(handle.major[indx], true);\n               if (lbls.indexOf(lbl)<0) {\n                  lbls.push(lbl);\n                  totallen += lbl.length;\n                  indx++;\n                  continue;\n               }\n               if (++this.ndig > 11) break; // not too many digits, anyway it will be exponential\n               lbls = []; indx = 0; totallen = 0;\n            }\n\n            // for order==0 we should virually remove \"0.\" and extra label on top\n            if (!order && (this.ndig<4)) totallen-=(handle.major.length*2+3);\n\n            if (totallen < bestlen) {\n               bestlen = totallen;\n               bestorder = this.order;\n               bestndig = this.ndig;\n            }\n         }\n\n         this.order = bestorder;\n         this.ndig = bestndig;\n\n         if (optionInt) {\n            if (this.order) console.warn('Axis painter - integer labels are configured, but axis order ' + this.order + ' is preferable');\n            if (this.ndig) console.warn('Axis painter - integer labels are configured, but ' + this.ndig + ' decimal digits are required');\n            this.ndig = 0;\n            this.order = 0;\n         }\n      }\n\n      return handle;\n   }\n\n   /** @summary Is labels should be centered */\n   isCenteredLabels() {\n      if (this.kind === 'labels') return true;\n      if (this.kind === 'log') return false;\n      return this.v7EvalAttr(\"labels_center\", false);\n   }\n\n   /** @summary Used to move axis labels instead of zooming\n     * @private */\n   processLabelsMove(arg, pos) {\n      if (this.optionUnlab || !this.axis_g) return false;\n\n      let label_g = this.axis_g.select(\".axis_labels\");\n      if (!label_g || (label_g.size() != 1)) return false;\n\n      if (arg == 'start') {\n         // no moving without labels\n         let box = label_g.node().getBBox();\n\n         label_g.append(\"rect\")\n                 .classed(\"zoom\", true)\n                 .attr(\"x\", box.x)\n                 .attr(\"y\", box.y)\n                 .attr(\"width\", box.width)\n                 .attr(\"height\", box.height)\n                 .style(\"cursor\", \"move\");\n         if (this.vertical) {\n            this.drag_pos0 = pos[0];\n         } else {\n            this.drag_pos0 = pos[1];\n         }\n\n         return true;\n      }\n\n      let offset = label_g.property('fix_offset');\n\n      if (this.vertical) {\n         offset += Math.round(pos[0] - this.drag_pos0);\n         label_g.attr('transform', `translate(${offset})`);\n      } else {\n         offset += Math.round(pos[1] - this.drag_pos0);\n         label_g.attr('transform', `translate(0,${offset})`);\n      }\n      if (!offset) label_g.attr('transform', null);\n\n      if (arg == 'stop') {\n         label_g.select(\"rect.zoom\").remove();\n         delete this.drag_pos0;\n         if (offset != label_g.property('fix_offset')) {\n            label_g.property('fix_offset', offset);\n            let side = label_g.property('side') || 1;\n            this.labelsOffset = offset / (this.vertical ? -side : side);\n            this.changeAxisAttr(1, \"labels_offset\", this.labelsOffset / this.scalingSize);\n         }\n      }\n\n      return true;\n   }\n\n   /** @summary Add interactive elements to draw axes title */\n   addTitleDrag(title_g, side) {\n      if (!settings.MoveResize || isBatchMode()) return;\n\n      let drag_rect = null,\n          acc_x, acc_y, new_x, new_y, alt_pos, curr_indx,\n          drag_move = d3_drag().subject(Object);\n\n      drag_move\n         .on(\"start\", evnt => {\n\n            evnt.sourceEvent.preventDefault();\n            evnt.sourceEvent.stopPropagation();\n\n            let box = title_g.node().getBBox(), // check that elements visible, request precise value\n                title_length = this.vertical ? box.height : box.width;\n\n            new_x = acc_x = title_g.property('shift_x');\n            new_y = acc_y = title_g.property('shift_y');\n\n            if (this.titlePos == \"center\")\n               curr_indx = 1;\n            else\n               curr_indx = (this.titlePos == \"left\") ? 0 : 2;\n\n            // let d = ((this.gr_range > 0) && this.vertical) ? title_length : 0;\n            alt_pos = [0, this.gr_range/2, this.gr_range]; // possible positions\n            let off = this.vertical ? -title_length : title_length,\n                swap = this.isReverseAxis() ? 2 : 0;\n            if (this.title_align == \"middle\") {\n               alt_pos[swap] += off/2;\n               alt_pos[2-swap] -= off/2;\n            } else if ((this.title_align == \"begin\") ^ this.isTitleRotated()) {\n               alt_pos[1] -= off/2;\n               alt_pos[2-swap] -= off;\n            } else { // end\n               alt_pos[swap] += off;\n               alt_pos[1] += off/2;\n            }\n\n            alt_pos[curr_indx] = this.vertical ? acc_y : acc_x;\n\n            drag_rect = title_g.append(\"rect\")\n                 .classed(\"zoom\", true)\n                 .attr(\"x\", box.x)\n                 .attr(\"y\", box.y)\n                 .attr(\"width\", box.width)\n                 .attr(\"height\", box.height)\n                 .style(\"cursor\", \"move\");\n//                 .style(\"pointer-events\",\"none\"); // let forward double click to underlying elements\n          }).on(\"drag\", evnt => {\n               if (!drag_rect) return;\n\n               evnt.sourceEvent.preventDefault();\n               evnt.sourceEvent.stopPropagation();\n\n               acc_x += evnt.dx;\n               acc_y += evnt.dy;\n\n               let set_x, set_y,\n                   p = this.vertical ? acc_y : acc_x, besti = 0;\n\n               for (let i=1; i<3; ++i)\n                  if (Math.abs(p - alt_pos[i]) < Math.abs(p - alt_pos[besti])) besti = i;\n\n               if (this.vertical) {\n                  set_x = acc_x;\n                  set_y = alt_pos[besti];\n               } else {\n                  set_x = alt_pos[besti];\n                  set_y = acc_y;\n               }\n\n               new_x = set_x; new_y = set_y; curr_indx = besti;\n               title_g.attr('transform', 'translate(' + Math.round(new_x) + ',' + Math.round(new_y) +  ')');\n\n          }).on(\"end\", evnt => {\n               if (!drag_rect) return;\n\n               evnt.sourceEvent.preventDefault();\n               evnt.sourceEvent.stopPropagation();\n\n               let basepos = title_g.property('basepos') || 0;\n\n               title_g.property('shift_x', new_x)\n                      .property('shift_y', new_y);\n\n               this.titleOffset = (this.vertical ? basepos - new_x : new_y - basepos) * side;\n\n               if (curr_indx == 1) {\n                  this.titlePos = \"center\";\n               } else if (curr_indx == 0) {\n                  this.titlePos = \"left\";\n               } else {\n                  this.titlePos = \"right\";\n               }\n\n               this.changeAxisAttr(0, \"title_position\", this.titlePos, \"title_offset\", this.titleOffset / this.scalingSize);\n\n               drag_rect.remove();\n               drag_rect = null;\n            });\n\n      title_g.style(\"cursor\", \"move\").call(drag_move);\n   }\n\n   /** @summary checks if value inside graphical range, taking into account delta */\n   isInsideGrRange(pos, delta1, delta2) {\n      if (!delta1) delta1 = 0;\n      if (delta2 === undefined) delta2 = delta1;\n      if (this.gr_range < 0)\n         return (pos >= this.gr_range - delta2) && (pos <= delta1);\n      return (pos >= -delta1) && (pos <= this.gr_range + delta2);\n   }\n\n   /** @summary returns graphical range */\n   getGrRange(delta) {\n      if (!delta) delta = 0;\n      if (this.gr_range < 0)\n         return this.gr_range - delta;\n      return this.gr_range + delta;\n   }\n\n   /** @summary If axis direction is negative coordinates direction */\n   isReverseAxis() {\n      return !this.vertical !== (this.getGrRange() > 0);\n   }\n\n   /** @summary Draw axis ticks\n     * @private */\n   drawMainLine(axis_g) {\n      let ending = \"\";\n\n      if (this.endingSize && this.endingStyle) {\n         let sz = (this.gr_range > 0) ? -this.endingSize : this.endingSize,\n             sz7 = Math.round(sz*0.7);\n         sz = Math.round(sz);\n         if (this.vertical)\n            ending = `l${sz7},${sz}M0,${this.gr_range}l${-sz7},${sz}`;\n         else\n            ending = `l${sz},${sz7}M${this.gr_range},0l${sz},${-sz7}`;\n      }\n\n      axis_g.append(\"svg:path\")\n            .attr(\"d\",\"M0,0\" + (this.vertical ? \"v\" : \"h\") + this.gr_range + ending)\n            .call(this.lineatt.func)\n            .style('fill', ending ? \"none\" : null);\n   }\n\n   /** @summary Draw axis ticks\n     * @returns {Promise} with gaps on left and right side\n     * @private */\n   drawTicks(axis_g, side, main_draw) {\n      if (main_draw) this.ticks = [];\n\n      this.handle.reset();\n\n      let res = \"\", ticks_plusminus = 0;\n      if (this.ticksSide == \"both\") {\n         side = 1;\n         ticks_plusminus = 1;\n      }\n\n      while (this.handle.next(true)) {\n\n         let h1 = Math.round(this.ticksSize/4), h2 = 0;\n\n         if (this.handle.kind < 3)\n            h1 = Math.round(this.ticksSize/2);\n\n         let grpos = this.handle.grpos - this.axis_shift;\n\n         if ((this.startingSize || this.endingSize) && !this.isInsideGrRange(grpos, -Math.abs(this.startingSize), -Math.abs(this.endingSize))) continue;\n\n         if (this.handle.kind == 1) {\n            // if not showing labels, not show large tick\n            if ((this.kind == \"labels\") || (this.format(this.handle.tick,true) !== null)) h1 = this.ticksSize;\n\n            if (main_draw) this.ticks.push(grpos); // keep graphical positions of major ticks\n         }\n\n         if (ticks_plusminus > 0) {\n            h2 = -h1;\n         } else if (side < 0) {\n            h2 = -h1; h1 = 0;\n         } else {\n            h2 = 0;\n         }\n\n         res += this.vertical ? `M${h1},${grpos}H${h2}` : `M${grpos},${-h1}V${-h2}`;\n      }\n\n      if (res)\n         axis_g.append(\"svg:path\")\n               .attr(\"d\", res)\n               .style('stroke', this.ticksColor || this.lineatt.color)\n               .style('stroke-width', !this.ticksWidth || (this.ticksWidth == 1) ? null : this.ticksWidth);\n\n       let gap0 = Math.round(0.25*this.ticksSize), gap = Math.round(1.25*this.ticksSize);\n       return { \"-1\": (side > 0) || ticks_plusminus ? gap : gap0,\n                \"1\": (side < 0) || ticks_plusminus ? gap : gap0 };\n   }\n\n   /** @summary Performs labels drawing\n     * @returns {Promise} wwith gaps in both direction */\n   drawLabels(axis_g, side, gaps) {\n      let center_lbls = this.isCenteredLabels(),\n          rotate_lbls = this.labelsFont.angle != 0,\n          textscale = 1, maxtextlen = 0, lbls_tilt = false,\n          label_g = axis_g.append(\"svg:g\").attr(\"class\",\"axis_labels\").property('side', side),\n          lbl_pos = this.handle.lbl_pos || this.handle.major,\n          max_lbl_width = 0, max_lbl_height = 0;\n\n      // function called when text is drawn to analyze width, required to correctly scale all labels\n      function process_drawtext_ready(painter) {\n\n         max_lbl_width = Math.max(max_lbl_width, this.result_width);\n         max_lbl_height = Math.max(max_lbl_height, this.result_height);\n\n         let textwidth = this.result_width;\n\n         if (textwidth && ((!painter.vertical && !rotate_lbls) || (painter.vertical && rotate_lbls)) && !painter.log) {\n            let maxwidth = this.gap_before*0.45 + this.gap_after*0.45;\n            if (!this.gap_before) maxwidth = 0.9*this.gap_after; else\n            if (!this.gap_after) maxwidth = 0.9*this.gap_before;\n            textscale = Math.min(textscale, maxwidth / textwidth);\n         }\n\n         if ((textscale > 0.0001) && (textscale < 0.8) && !painter.vertical && !rotate_lbls && (maxtextlen > 5) && (side > 0))\n            lbls_tilt = true;\n\n         let scale = textscale * (lbls_tilt ? 3 : 1);\n         if ((scale > 0.0001) && (scale < 1))\n            painter.scaleTextDrawing(1/scale, label_g);\n      }\n\n      let lastpos = 0,\n          fix_offset = Math.round((this.vertical ? -side : side) * this.labelsOffset),\n          fix_coord = Math.round((this.vertical ? -side : side) * gaps[side]);\n\n      if (fix_offset)\n         label_g.attr('transform', this.vertical ? `translate(${fix_offset})` : `translate(0,${fix_offset})`);\n\n      label_g.property('fix_offset', fix_offset);\n\n      this.startTextDrawing(this.labelsFont, 'font', label_g);\n\n      for (let nmajor = 0; nmajor < lbl_pos.length; ++nmajor) {\n\n         let lbl = this.format(lbl_pos[nmajor], true);\n         if (lbl === null) continue;\n\n         let pos = Math.round(this.func(lbl_pos[nmajor])),\n             arg = { text: lbl, latex: 1, draw_g: label_g };\n\n         arg.gap_before = (nmajor > 0) ? Math.abs(Math.round(pos - this.func(lbl_pos[nmajor-1]))) : 0,\n         arg.gap_after = (nmajor < lbl_pos.length-1) ? Math.abs(Math.round(this.func(lbl_pos[nmajor+1])-pos)) : 0;\n\n         if (center_lbls) {\n            let gap = arg.gap_after || arg.gap_before;\n            pos = Math.round(pos - (this.vertical ? 0.5*gap : -0.5*gap));\n            if (!this.isInsideGrRange(pos, 5)) continue;\n         }\n\n         maxtextlen = Math.max(maxtextlen, lbl.length);\n\n         pos -= this.axis_shift;\n\n         if ((this.startingSize || this.endingSize) && !this.isInsideGrRange(pos, -Math.abs(this.startingSize), -Math.abs(this.endingSize))) continue;\n\n         if (this.vertical) {\n            arg.x = fix_coord;\n            arg.y = pos;\n            arg.align = rotate_lbls ? ((side<0) ? 23 : 20) : ((side<0) ? 12 : 32);\n         } else {\n            arg.x = pos;\n            arg.y = fix_coord;\n            arg.align = rotate_lbls ? ((side<0) ? 12 : 32) : ((side<0) ? 20 : 23);\n         }\n\n         arg.post_process = process_drawtext_ready;\n\n         this.drawText(arg);\n\n         if (lastpos && (pos!=lastpos) && ((this.vertical && !rotate_lbls) || (!this.vertical && rotate_lbls))) {\n            let axis_step = Math.abs(pos-lastpos);\n            textscale = Math.min(textscale, 0.9*axis_step/this.labelsFont.size);\n         }\n\n         lastpos = pos;\n      }\n\n      if (this.order)\n         this.drawText({ x: this.vertical ? side*5 : this.getGrRange(5),\n                         y: this.has_obstacle ? fix_coord : (this.vertical ? this.getGrRange(3) : -3*side),\n                         align: this.vertical ? ((side < 0) ? 30 : 10) : ((this.has_obstacle ^ (side < 0)) ? 13 : 10),\n                         latex: 1,\n                         text: '#times' + this.formatExp(10, this.order),\n                         draw_g: label_g\n         });\n\n      return this.finishTextDrawing(label_g).then(() => {\n\n        if (lbls_tilt)\n           label_g.selectAll(\"text\").each(function () {\n               let txt = d3_select(this), tr = txt.attr(\"transform\");\n               txt.attr(\"transform\", tr + \" rotate(25)\").style(\"text-anchor\", \"start\");\n           });\n\n         if (this.vertical) {\n            gaps[side] += Math.round(rotate_lbls ? 1.2*max_lbl_height : max_lbl_width + 0.4*this.labelsFont.size) - side*fix_offset;\n         } else {\n            let tilt_height = lbls_tilt ? max_lbl_width * Math.sin(25/180*Math.PI) + max_lbl_height * (Math.cos(25/180*Math.PI) + 0.2) : 0;\n\n            gaps[side] += Math.round(Math.max(rotate_lbls ? max_lbl_width + 0.4*this.labelsFont.size : 1.2*max_lbl_height, 1.2*this.labelsFont.size, tilt_height)) + fix_offset;\n         }\n\n         return gaps;\n      });\n   }\n\n   /** @summary Add zomming rect to axis drawing */\n   addZoomingRect(axis_g, side, lgaps) {\n      if (settings.Zooming && !this.disable_zooming && !isBatchMode()) {\n         let sz = Math.max(lgaps[side], 10),\n             d = this.vertical ? `v${this.gr_range}h${-side*sz}v${-this.gr_range}`\n                               : `h${this.gr_range}v${side*sz}h${-this.gr_range}`;\n         axis_g.append(\"svg:path\")\n               .attr(\"d\",`M0,0${d}z`)\n               .attr(\"class\", \"axis_zoom\")\n               .style(\"opacity\", \"0\")\n               .style(\"cursor\", \"crosshair\");\n      }\n   }\n\n   /** @summary Returns true if axis title is rotated */\n   isTitleRotated() {\n      return this.titleFont && (this.titleFont.angle != (this.vertical ? 270 : 0));\n   }\n\n   /** @summary Draw axis title */\n   drawTitle(axis_g, side, lgaps) {\n      if (!this.fTitle)\n         return Promise.resolve(this);\n\n      let title_g = axis_g.append(\"svg:g\").attr(\"class\", \"axis_title\"),\n          title_shift_x = 0, title_shift_y = 0, title_basepos = 0;\n\n      let rotated = this.isTitleRotated();\n\n      this.startTextDrawing(this.titleFont, 'font', title_g);\n\n      this.title_align = this.titleCenter ? \"middle\" : (this.titleOpposite ^ (this.isReverseAxis() || rotated) ? \"begin\" : \"end\");\n\n      if (this.vertical) {\n         title_basepos = Math.round(-side*(lgaps[side]));\n         title_shift_x = title_basepos + Math.round(-side*this.titleOffset);\n         title_shift_y = Math.round(this.titleCenter ? this.gr_range/2 : (this.titleOpposite ? 0 : this.gr_range));\n         this.drawText({ align: [this.title_align, ((side < 0) ^ rotated ? 'top' : 'bottom')],\n                         text: this.fTitle, draw_g: title_g });\n      } else {\n         title_shift_x = Math.round(this.titleCenter ? this.gr_range/2 : (this.titleOpposite ? 0 : this.gr_range));\n         title_basepos = Math.round(side*lgaps[side]);\n         title_shift_y = title_basepos + Math.round(side*this.titleOffset);\n         this.drawText({ align: [this.title_align, ((side > 0) ^ rotated ? 'top' : 'bottom')],\n                         text: this.fTitle, draw_g: title_g });\n      }\n\n      title_g.attr('transform', `translate(${title_shift_x},${title_shift_y})`)\n             .property('basepos', title_basepos)\n             .property('shift_x', title_shift_x)\n             .property('shift_y', title_shift_y);\n\n      this.addTitleDrag(title_g, side);\n\n      return this.finishTextDrawing(title_g);\n   }\n\n   /** @summary Extract major draw attributes, which are also used in interactive operations\n     * @private  */\n   extractDrawAttributes(scalingSize) {\n      let pp = this.getPadPainter(),\n          rect = pp?.getPadRect() || { width: 10, height: 10 };\n\n      this.scalingSize = scalingSize || (this.vertical ? rect.width : rect.height);\n\n      this.createv7AttLine(\"line_\");\n\n      this.optionUnlab = this.v7EvalAttr(\"labels_hide\", false);\n\n      this.endingStyle = this.v7EvalAttr(\"ending_style\", \"\");\n      this.endingSize = Math.round(this.v7EvalLength(\"ending_size\", this.scalingSize, this.endingStyle ? 0.02 : 0));\n      this.startingSize = Math.round(this.v7EvalLength(\"starting_size\", this.scalingSize, 0));\n      this.ticksSize = this.v7EvalLength(\"ticks_size\", this.scalingSize, 0.02);\n      this.ticksSide = this.v7EvalAttr(\"ticks_side\", \"normal\");\n      this.ticksColor = this.v7EvalColor(\"ticks_color\", \"\");\n      this.ticksWidth = this.v7EvalAttr(\"ticks_width\", 1);\n      if (scalingSize && (this.ticksSize < 0))\n         this.ticksSize = -this.ticksSize;\n\n      this.fTitle = this.v7EvalAttr(\"title_value\", \"\");\n\n      if (this.fTitle) {\n         this.titleFont = this.v7EvalFont(\"title\", { size: 0.03 }, scalingSize || pp?.getPadHeight() || 10);\n         this.titleFont.roundAngle(180, this.vertical ? 270 : 0);\n\n         this.titleOffset = this.v7EvalLength(\"title_offset\", this.scalingSize, 0);\n         this.titlePos = this.v7EvalAttr(\"title_position\", \"right\");\n         this.titleCenter = (this.titlePos == \"center\");\n         this.titleOpposite = (this.titlePos == \"left\");\n      } else {\n         delete this.titleFont;\n         delete this.titleOffset;\n         delete this.titlePos;\n      }\n\n      // TODO: remove old scaling factors for labels and ticks\n      this.labelsFont = this.v7EvalFont(\"labels\", { size: scalingSize ? 0.05 : 0.03 });\n      this.labelsFont.roundAngle(180);\n      if (this.labelsFont.angle) this.labelsFont.angle = 270;\n      this.labelsOffset = this.v7EvalLength(\"labels_offset\", this.scalingSize, 0);\n\n      if (scalingSize) this.ticksSize = this.labelsFont.size*0.5; // old lego scaling factor\n\n      if (this.maxTickSize && (this.ticksSize > this.maxTickSize))\n         this.ticksSize = this.maxTickSize;\n   }\n\n   /** @summary Performs axis drawing\n     * @returns {Promise} which resolved when drawing is completed */\n   drawAxis(layer, transform, side) {\n      let axis_g = layer;\n\n      if (side === undefined) side = 1;\n\n      if (!this.standalone) {\n         axis_g = layer.select(\".\" + this.name + \"_container\");\n         if (axis_g.empty())\n            axis_g = layer.append(\"svg:g\").attr(\"class\", this.name + \"_container\");\n         else\n            axis_g.selectAll(\"*\").remove();\n      }\n\n      axis_g.attr(\"transform\", transform || null);\n\n      this.extractDrawAttributes();\n      this.axis_g = axis_g;\n      this.side = side;\n\n      if (this.ticksSide == \"invert\") side = -side;\n\n      if (this.standalone)\n         this.drawMainLine(axis_g);\n\n      let optionNoopt = false,  // no ticks position optimization\n          optionInt = false,    // integer labels\n          optionNoexp = false;  // do not create exp\n\n      this.handle = this.createTicks(false, optionNoexp, optionNoopt, optionInt);\n\n      // first draw ticks\n      let tgaps = this.drawTicks(axis_g, side, true);\n\n      // draw labels\n      let labelsPromise = this.optionUnlab ? Promise.resolve(tgaps) : this.drawLabels(axis_g, side, tgaps);\n\n      return labelsPromise.then(lgaps => {\n         // when drawing axis on frame, zoom rect should be always outside\n         this.addZoomingRect(axis_g, this.standalone ? side : this.side, lgaps);\n\n         return this.drawTitle(axis_g, side, lgaps);\n      });\n   }\n\n   /** @summary Assign handler, which is called when axis redraw by interactive changes\n     * @desc Used by palette painter to reassign iteractive handlers\n     * @private */\n   setAfterDrawHandler(handler) {\n      this._afterDrawAgain = handler;\n   }\n\n   /** @summary Draw axis with the same settings, used by interactive changes */\n   drawAxisAgain() {\n      if (!this.axis_g || !this.side) return;\n\n      this.axis_g.selectAll(\"*\").remove();\n\n      this.extractDrawAttributes();\n\n      let side = this.side;\n      if (this.ticksSide == \"invert\") side = -side;\n\n      if (this.standalone)\n         this.drawMainLine(this.axis_g);\n\n      // first draw ticks\n      let tgaps = this.drawTicks(this.axis_g, side, false);\n\n      let labelsPromise = this.optionUnlab ? Promise.resolve(tgaps) : this.drawLabels(this.axis_g, side, tgaps);\n\n      return labelsPromise.then(lgaps => {\n         // when drawing axis on frame, zoom rect should be always outside\n         this.addZoomingRect(this.axis_g, this.standalone ? side : this.side, lgaps);\n\n         return this.drawTitle(this.axis_g, side, lgaps);\n      }).then(() => {\n         if (typeof this._afterDrawAgain == 'function')\n            this._afterDrawAgain();\n      });\n   }\n\n   /** @summary Draw axis again on opposite frame size */\n   drawAxisOtherPlace(layer, transform, side, only_ticks) {\n      let axis_g = layer.select(\".\" + this.name + \"_container2\");\n      if (axis_g.empty())\n         axis_g = layer.append(\"svg:g\").attr(\"class\",this.name + \"_container2\");\n      else\n         axis_g.selectAll(\"*\").remove();\n\n      axis_g.attr(\"transform\", transform || null);\n\n      if (this.ticksSide == \"invert\") side = -side;\n\n      // draw ticks again\n      let tgaps = this.drawTicks(axis_g, side, false);\n\n      // draw labels again\n      let promise = this.optionUnlab || only_ticks ? Promise.resolve(tgaps) : this.drawLabels(axis_g, side, tgaps);\n\n      return promise.then(lgaps => {\n         this.addZoomingRect(axis_g, side, lgaps);\n         return true;\n      });\n   }\n\n   /** @summary Change zooming in standalone mode */\n   zoomStandalone(min,max) {\n      this.changeAxisAttr(1, \"zoomMin\", min, \"zoomMax\", max);\n   }\n\n   /** @summary Redraw axis, used in standalone mode for RAxisDrawable */\n   redraw() {\n\n      let drawable = this.getObject(),\n          pp   = this.getPadPainter(),\n          pos  = pp.getCoordinate(drawable.fPos),\n          len  = pp.getPadLength(drawable.fVertical, drawable.fLength),\n          reverse = this.v7EvalAttr(\"reverse\", false),\n          labels_len = drawable.fLabels.length,\n          min = (labels_len > 0) ? 0 : this.v7EvalAttr(\"min\", 0),\n          max = (labels_len > 0) ? labels_len : this.v7EvalAttr(\"max\", 100);\n\n      // in vertical direction axis drawn in negative direction\n      if (drawable.fVertical) len -= pp.getPadHeight();\n\n      let smin = this.v7EvalAttr(\"zoomMin\"),\n          smax = this.v7EvalAttr(\"zoomMax\");\n      if (smin === smax) {\n         smin = min; smax = max;\n      }\n\n      this.configureAxis(\"axis\", min, max, smin, smax, drawable.fVertical, undefined, len, { reverse, labels: labels_len > 0 });\n\n      this.createG();\n\n      this.standalone = true;  // no need to clean axis container\n\n      let promise = this.drawAxis(this.draw_g, `translate(${pos.x},${pos.y})`);\n\n      if (isBatchMode()) return promise;\n\n      return promise.then(() => {\n         if (settings.ContextMenu)\n            this.draw_g.on(\"contextmenu\", evnt => {\n               evnt.stopPropagation(); // disable main context menu\n               evnt.preventDefault();  // disable browser context menu\n               createMenu(evnt, this).then(menu => {\n                 menu.add(\"header:RAxisDrawable\");\n                 menu.add(\"Unzoom\", () => this.zoomStandalone());\n                 this.fillAxisContextMenu(menu, \"\");\n                 menu.show();\n               });\n            });\n\n         addDragHandler(this, { x: pos.x, y: pos.y, width: this.vertical ? 10 : len, height: this.vertical ? len : 10,\n                                only_move: true, redraw: d => this.positionChanged(d) });\n\n         this.draw_g.on(\"dblclick\", () => this.zoomStandalone());\n\n         if (settings.ZoomWheel)\n            this.draw_g.on(\"wheel\", evnt => {\n               evnt.stopPropagation();\n               evnt.preventDefault();\n\n               let pos = d3_pointer(evnt, this.draw_g.node()),\n                   coord = this.vertical ? (1 - pos[1] / len) : pos[0] / len,\n                   item = this.analyzeWheelEvent(evnt, coord);\n\n               if (item.changed) this.zoomStandalone(item.min, item.max);\n            });\n      });\n   }\n\n   /** @summary Process interactive moving of the axis drawing */\n   positionChanged(drag) {\n      let drawable = this.getObject(),\n          rect = this.getPadPainter().getPadRect(),\n          xn = drag.x / rect.width,\n          yn = 1 - drag.y / rect.height;\n\n      drawable.fPos.fHoriz.fArr = [ xn ];\n      drawable.fPos.fVert.fArr = [ yn ];\n\n      this.submitCanvExec(`SetPos({${xn.toFixed(4)},${yn.toFixed(4)}})`);\n   }\n\n   /** @summary Change axis attribute, submit changes to server and redraw axis when specified\n     * @desc Arguments as redraw_mode, name1, value1, name2, value2, ... */\n   changeAxisAttr(redraw_mode) {\n      let changes = {}, indx = 1;\n      while (indx < arguments.length - 1) {\n         this.v7AttrChange(changes, arguments[indx], arguments[indx+1]);\n         this.v7SetAttr(arguments[indx], arguments[indx+1]);\n         indx += 2;\n      }\n      this.v7SendAttrChanges(changes, false); // do not invoke canvas update on the server\n      if (redraw_mode === 1) {\n         if (this.standalone)\n            this.redraw();\n         else\n            this.drawAxisAgain();\n      } else if (redraw_mode)\n         this.redrawPad();\n   }\n\n   /** @summary Change axis log scale kind */\n   changeAxisLog(arg) {\n      if ((this.kind == \"labels\") || (this.kind == 'time')) return;\n      if (arg === 'toggle') arg = this.log ? 0 : 10;\n\n      arg = parseFloat(arg);\n      if (Number.isFinite(arg)) this.changeAxisAttr(2, \"log\", arg, \"symlog\", 0);\n   }\n\n   /** @summary Provide context menu for axis */\n   fillAxisContextMenu(menu, kind) {\n\n      if (kind) menu.add(\"Unzoom\", () => this.getFramePainter().unzoom(kind));\n\n      menu.add(\"sub:Log scale\", () => this.changeAxisLog('toggle'));\n      menu.addchk(!this.log && !this.symlog, \"linear\", 0, arg => this.changeAxisLog(arg));\n      menu.addchk(this.log && !this.symlog && (this.logbase==10), \"log10\", () => this.changeAxisLog(10));\n      menu.addchk(this.log && !this.symlog && (this.logbase==2), \"log2\", () => this.changeAxisLog(2));\n      menu.addchk(this.log && !this.symlog && Math.abs(this.logbase - Math.exp(1)) < 0.1, \"ln\", () => this.changeAxisLog(Math.exp(1)));\n      menu.addchk(!this.log && this.symlog, \"symlog\", 0, () =>\n         menu.input(\"set symlog constant\", this.symlog || 10, \"float\").then(v => this.changeAxisAttr(2,\"symlog\", v)));\n      menu.add(\"endsub:\");\n\n      menu.add(\"Divisions\", () => menu.input(\"Set axis devisions\", this.v7EvalAttr(\"ndiv\", 508), \"int\").then(val => this.changeAxisAttr(2, \"ndiv\", val)));\n\n      menu.add(\"sub:Ticks\");\n      menu.addRColorMenu(\"color\", this.ticksColor, col => this.changeAxisAttr(1, \"ticks_color\", col));\n      menu.addSizeMenu(\"size\", 0, 0.05, 0.01, this.ticksSize/this.scalingSize, sz => this.changeAxisAttr(1, \"ticks_size\", sz));\n      menu.addSelectMenu(\"side\", [\"normal\", \"invert\", \"both\"], this.ticksSide, side => this.changeAxisAttr(1, \"ticks_side\", side));\n      menu.add(\"endsub:\");\n\n      if (!this.optionUnlab && this.labelsFont) {\n         menu.add(\"sub:Labels\");\n         menu.addSizeMenu(\"offset\", -0.05, 0.05, 0.01, this.labelsOffset/this.scalingSize,\n                         offset => this.changeAxisAttr(1, \"labels_offset\", offset));\n         menu.addRAttrTextItems(this.labelsFont, { noangle: 1, noalign: 1 },\n               change => this.changeAxisAttr(1, \"labels_\" + change.name, change.value));\n         menu.addchk(this.labelsFont.angle, \"rotate\", res => this.changeAxisAttr(1, \"labels_angle\", res ? 180 : 0));\n         menu.add(\"endsub:\");\n      }\n\n      menu.add(\"sub:Title\", () => menu.input(\"Enter axis title\", this.fTitle).then(t => this.changeAxisAttr(1, \"title_value\", t)));\n\n      if (this.fTitle) {\n         menu.addSizeMenu(\"offset\", -0.05, 0.05, 0.01, this.titleOffset/this.scalingSize,\n                           offset => this.changeAxisAttr(1, \"title_offset\", offset));\n\n         menu.addSelectMenu(\"position\", [\"left\", \"center\", \"right\"], this.titlePos,\n                            pos => this.changeAxisAttr(1, \"title_position\", pos));\n\n         menu.addchk(this.isTitleRotated(), \"rotate\", flag => this.changeAxisAttr(1, \"title_angle\", flag ? 180 : 0));\n\n         menu.addRAttrTextItems(this.titleFont, { noangle: 1, noalign: 1 }, change => this.changeAxisAttr(1, \"title_\" + change.name, change.value));\n      }\n\n      menu.add(\"endsub:\");\n      return true;\n   }\n\n} // class RAxisPainter\n\nexport { RAxisPainter };\n","import { gStyle, settings, create, isBatchMode } from '../core.mjs';\nimport { pointer as d3_pointer } from '../d3.mjs';\nimport { getSvgLineStyle } from '../base/TAttLineHandler.mjs';\nimport { TAxisPainter } from './TAxisPainter.mjs';\nimport { RAxisPainter } from './RAxisPainter.mjs';\nimport { FrameInteractive } from './TFramePainter.mjs';\nimport { RObjectPainter } from '../base/RObjectPainter.mjs';\n\n\n/**\n * @summary Painter class for RFrame, main handler for interactivity\n *\n * @private\n */\n\nclass RFramePainter extends RObjectPainter {\n\n   /** @summary constructor\n     * @param {object|string} dom - DOM element for drawing or element id\n     * @param {object} tframe - RFrame object */\n   constructor(dom, tframe) {\n      super(dom, tframe, \"\", \"frame\");\n      this.mode3d = false;\n      this.xmin = this.xmax = 0; // no scale specified, wait for objects drawing\n      this.ymin = this.ymax = 0; // no scale specified, wait for objects drawing\n      this.axes_drawn = false;\n      this.keys_handler = null;\n      this.projection = 0; // different projections\n      this.v7_frame = true; // indicator of v7, used in interactive part\n   }\n\n   /** @summary Returns frame painter - object itself */\n   getFramePainter() { return this; }\n\n   /** @summary Returns true if it is ROOT6 frame\n    * @private */\n   is_root6() { return false; }\n\n   /** @summary Set active flag for frame - can block some events\n    * @private */\n   setFrameActive(on) {\n      this.enabledKeys = on && settings.HandleKeys ? true : false;\n      // used only in 3D mode\n      if (this.control)\n         this.control.enableKeys = this.enabledKeys;\n   }\n\n   setLastEventPos(pnt) {\n      // set position of last context menu event, can be\n      this.fLastEventPnt = pnt;\n   }\n\n   getLastEventPos() {\n      // return position of last event\n      return this.fLastEventPnt;\n   }\n\n   /** @summary Update graphical attributes */\n   updateAttributes(force) {\n      if ((this.fX1NDC === undefined) || (force && !this.modified_NDC)) {\n\n         let rect = this.getPadPainter().getPadRect();\n         this.fX1NDC = this.v7EvalLength(\"margins_left\", rect.width, settings.FrameNDC.fX1NDC) / rect.width;\n         this.fY1NDC = this.v7EvalLength(\"margins_bottom\", rect.height, settings.FrameNDC.fY1NDC) / rect.height;\n         this.fX2NDC = 1 - this.v7EvalLength(\"margins_right\", rect.width, 1-settings.FrameNDC.fX2NDC) / rect.width;\n         this.fY2NDC = 1 - this.v7EvalLength(\"margins_top\", rect.height, 1-settings.FrameNDC.fY2NDC) / rect.height;\n      }\n\n      if (!this.fillatt)\n         this.createv7AttFill();\n\n      this.createv7AttLine(\"border_\");\n   }\n\n   /** @summary Returns coordinates transformation func */\n   getProjectionFunc() {\n      switch (this.projection) {\n         // Aitoff2xy\n         case 1: return (l, b) => {\n            const DegToRad = Math.PI/180,\n                  alpha2 = (l/2)*DegToRad,\n                  delta  = b*DegToRad,\n                  r2     = Math.sqrt(2),\n                  f      = 2*r2/Math.PI,\n                  cdec   = Math.cos(delta),\n                  denom  = Math.sqrt(1. + cdec*Math.cos(alpha2));\n            return {\n               x: cdec*Math.sin(alpha2)*2.*r2/denom/f/DegToRad,\n               y: Math.sin(delta)*r2/denom/f/DegToRad\n            };\n         };\n         // mercator\n         case 2: return (l, b) => { return { x: l, y: Math.log(Math.tan((Math.PI/2 + b/180*Math.PI)/2)) }; };\n         // sinusoidal\n         case 3: return (l, b) => { return { x: l*Math.cos(b/180*Math.PI), y: b } };\n         // parabolic\n         case 4: return (l, b) => { return { x: l*(2.*Math.cos(2*b/180*Math.PI/3) - 1), y: 180*Math.sin(b/180*Math.PI/3) }; };\n      }\n   }\n\n   /** @summary Rcalculate frame ranges using specified projection functions\n     * @desc Not yet used in v7 */\n   recalculateRange(Proj) {\n      this.projection = Proj || 0;\n\n      if ((this.projection == 2) && ((this.scale_ymin <= -90 || this.scale_ymax >=90))) {\n         console.warn(\"Mercator Projection\", \"Latitude out of range\", this.scale_ymin, this.scale_ymax);\n         this.projection = 0;\n      }\n\n      let func = this.getProjectionFunc();\n      if (!func) return;\n\n      let pnts = [ func(this.scale_xmin, this.scale_ymin),\n                   func(this.scale_xmin, this.scale_ymax),\n                   func(this.scale_xmax, this.scale_ymax),\n                   func(this.scale_xmax, this.scale_ymin) ];\n      if (this.scale_xmin<0 && this.scale_xmax>0) {\n         pnts.push(func(0, this.scale_ymin));\n         pnts.push(func(0, this.scale_ymax));\n      }\n      if (this.scale_ymin<0 && this.scale_ymax>0) {\n         pnts.push(func(this.scale_xmin, 0));\n         pnts.push(func(this.scale_xmax, 0));\n      }\n\n      this.original_xmin = this.scale_xmin;\n      this.original_xmax = this.scale_xmax;\n      this.original_ymin = this.scale_ymin;\n      this.original_ymax = this.scale_ymax;\n\n      this.scale_xmin = this.scale_xmax = pnts[0].x;\n      this.scale_ymin = this.scale_ymax = pnts[0].y;\n\n      for (let n = 1; n < pnts.length; ++n) {\n         this.scale_xmin = Math.min(this.scale_xmin, pnts[n].x);\n         this.scale_xmax = Math.max(this.scale_xmax, pnts[n].x);\n         this.scale_ymin = Math.min(this.scale_ymin, pnts[n].y);\n         this.scale_ymax = Math.max(this.scale_ymax, pnts[n].y);\n      }\n   }\n\n   /** @summary Draw axes grids\n     * @desc Called immediately after axes drawing */\n   drawGrids() {\n      let layer = this.getFrameSvg().select(\".grid_layer\");\n\n      layer.selectAll(\".xgrid\").remove();\n      layer.selectAll(\".ygrid\").remove();\n\n      let h = this.getFrameHeight(),\n          w = this.getFrameWidth(),\n          gridx = this.v7EvalAttr(\"gridX\", false),\n          gridy = this.v7EvalAttr(\"gridY\", false),\n          grid_style = getSvgLineStyle(gStyle.fGridStyle),\n          grid_color = (gStyle.fGridColor > 0) ? this.getColor(gStyle.fGridColor) : \"black\";\n\n      if (this.x_handle)\n         this.x_handle.draw_grid = gridx;\n\n      // add a grid on x axis, if the option is set\n      if (this.x_handle && this.x_handle.draw_grid) {\n         let grid = \"\";\n         for (let n = 0; n < this.x_handle.ticks.length; ++n)\n            if (this.swap_xy)\n               grid += \"M0,\"+(h+this.x_handle.ticks[n])+\"h\"+w;\n            else\n               grid += \"M\"+this.x_handle.ticks[n]+\",0v\"+h;\n\n         if (grid.length > 0)\n            layer.append(\"svg:path\")\n                 .attr(\"class\", \"xgrid\")\n                 .attr(\"d\", grid)\n                 .style('stroke',grid_color)\n                 .style(\"stroke-width\", gStyle.fGridWidth)\n                 .style(\"stroke-dasharray\", grid_style);\n      }\n\n      if (this.y_handle)\n         this.y_handle.draw_grid = gridy;\n\n      // add a grid on y axis, if the option is set\n      if (this.y_handle && this.y_handle.draw_grid) {\n         let grid = \"\";\n         for (let n = 0; n < this.y_handle.ticks.length; ++n)\n            if (this.swap_xy)\n               grid += \"M\"+this.y_handle.ticks[n]+\",0v\"+h;\n            else\n               grid += \"M0,\"+(h+this.y_handle.ticks[n])+\"h\"+w;\n\n         if (grid.length > 0)\n          layer.append(\"svg:path\")\n               .attr(\"class\", \"ygrid\")\n               .attr(\"d\", grid)\n               .style('stroke', grid_color)\n               .style(\"stroke-width\", gStyle.fGridWidth)\n               .style(\"stroke-dasharray\", grid_style);\n      }\n   }\n\n   /** @summary Converts \"raw\" axis value into text */\n   axisAsText(axis, value) {\n      let handle = this[axis+\"_handle\"];\n\n      if (handle)\n         return handle.axisAsText(value, settings[axis.toUpperCase() + \"ValuesFormat\"]);\n\n      return value.toPrecision(4);\n   }\n\n   /** @summary Set axix range */\n   _setAxisRange(prefix, vmin, vmax) {\n      let nmin = prefix + \"min\", nmax = prefix + \"max\";\n      if (this[nmin] != this[nmax]) return;\n      let min = this.v7EvalAttr(prefix + \"_min\"),\n          max = this.v7EvalAttr(prefix + \"_max\");\n\n      if (min !== undefined) vmin = min;\n      if (max !== undefined) vmax = max;\n\n      if (vmin < vmax) {\n         this[nmin] = vmin;\n         this[nmax] = vmax;\n      }\n\n      let nzmin = \"zoom_\" + prefix + \"min\", nzmax = \"zoom_\" + prefix + \"max\";\n\n      if ((this[nzmin] == this[nzmax]) && !this.zoomChangedInteractive(prefix)) {\n         min = this.v7EvalAttr(prefix + \"_zoomMin\");\n         max = this.v7EvalAttr(prefix + \"_zoomMax\");\n\n         if ((min !== undefined) || (max !== undefined)) {\n            this[nzmin] = (min === undefined) ? this[nmin] : min;\n            this[nzmax] = (max === undefined) ? this[nmax] : max;\n         }\n      }\n   }\n\n   /** @summary Set axes ranges for drawing, check configured attributes if range already specified */\n   setAxesRanges(xaxis, xmin, xmax, yaxis, ymin, ymax, zaxis, zmin, zmax) {\n      if (this.axes_drawn) return;\n      this.xaxis = xaxis;\n      this._setAxisRange(\"x\", xmin, xmax);\n      this.yaxis = yaxis;\n      this._setAxisRange(\"y\", ymin, ymax);\n      this.zaxis = zaxis;\n      this._setAxisRange(\"z\", zmin, zmax);\n   }\n\n   /** @summary Set secondary axes ranges */\n   setAxes2Ranges(second_x, xaxis, xmin, xmax, second_y, yaxis, ymin, ymax) {\n      if (second_x) {\n         this.x2axis = xaxis;\n         this._setAxisRange(\"x2\", xmin, xmax);\n      }\n      if (second_y) {\n         this.y2axis = yaxis;\n         this._setAxisRange(\"y2\", ymin, ymax);\n      }\n   }\n\n   /** @summary Create x,y objects which maps user coordinates into pixels\n     * @desc Must be used only for v6 objects, see TFramePainter for more details\n     * @private */\n   createXY(opts) {\n      if (this.self_drawaxes) return;\n\n      this.cleanXY(); // remove all previous configurations\n\n      if (!opts) opts = {};\n\n      this.v6axes = true;\n      this.swap_xy = opts.swap_xy || false;\n      this.reverse_x = opts.reverse_x || false;\n      this.reverse_y = opts.reverse_y || false;\n\n      this.logx = this.v7EvalAttr(\"x_log\", 0);\n      this.logy = this.v7EvalAttr(\"y_log\", 0);\n\n      let w = this.getFrameWidth(), h = this.getFrameHeight();\n\n      this.scale_xmin = this.xmin;\n      this.scale_xmax = this.xmax;\n\n      this.scale_ymin = this.ymin;\n      this.scale_ymax = this.ymax;\n\n      if (opts.extra_y_space) {\n         let log_scale = this.swap_xy ? this.logx : this.logy;\n         if (log_scale && (this.scale_ymax > 0))\n            this.scale_ymax = Math.exp(Math.log(this.scale_ymax)*1.1);\n         else\n            this.scale_ymax += (this.scale_ymax - this.scale_ymin)*0.1;\n      }\n\n      // if (opts.check_pad_range) {\n         // take zooming out of pad or axis attributes - skip!\n      // }\n\n      if ((this.zoom_ymin == this.zoom_ymax) && (opts.zoom_ymin != opts.zoom_ymax) && !this.zoomChangedInteractive(\"y\")) {\n         this.zoom_ymin = opts.zoom_ymin;\n         this.zoom_ymax = opts.zoom_ymax;\n      }\n\n      if (this.zoom_xmin != this.zoom_xmax) {\n         this.scale_xmin = this.zoom_xmin;\n         this.scale_xmax = this.zoom_xmax;\n      }\n\n      if (this.zoom_ymin != this.zoom_ymax) {\n         this.scale_ymin = this.zoom_ymin;\n         this.scale_ymax = this.zoom_ymax;\n      }\n\n      let xaxis = this.xaxis, yaxis = this.yaxis;\n      if (xaxis?._typename != \"TAxis\") xaxis = create(\"TAxis\");\n      if (yaxis?._typename != \"TAxis\") yaxis = create(\"TAxis\");\n\n      this.x_handle = new TAxisPainter(this.getDom(), xaxis, true);\n      this.x_handle.setPadName(this.getPadName());\n      this.x_handle.optionUnlab = this.v7EvalAttr(\"x_labels_hide\", false);\n\n      this.x_handle.configureAxis(\"xaxis\", this.xmin, this.xmax, this.scale_xmin, this.scale_xmax, this.swap_xy, this.swap_xy ? [0,h] : [0,w],\n                                      { reverse: this.reverse_x,\n                                        log: this.swap_xy ? this.logy : this.logx,\n                                        symlog: this.swap_xy ? opts.symlog_y : opts.symlog_x,\n                                        logcheckmin: this.swap_xy,\n                                        logminfactor: 0.0001 });\n\n      this.x_handle.assignFrameMembers(this,\"x\");\n\n      this.y_handle = new TAxisPainter(this.getDom(), yaxis, true);\n      this.y_handle.setPadName(this.getPadName());\n      this.y_handle.optionUnlab = this.v7EvalAttr(\"y_labels_hide\", false);\n\n      this.y_handle.configureAxis(\"yaxis\", this.ymin, this.ymax, this.scale_ymin, this.scale_ymax, !this.swap_xy, this.swap_xy ? [0,w] : [0,h],\n                                      { reverse: this.reverse_y,\n                                        log: this.swap_xy ? this.logx : this.logy,\n                                        symlog: this.swap_xy ? opts.symlog_x : opts.symlog_y,\n                                        logcheckmin: (opts.ndim < 2) || this.swap_xy,\n                                        log_min_nz: opts.ymin_nz && (opts.ymin_nz < 0.01*this.ymax) ? 0.3 * opts.ymin_nz : 0,\n                                        logminfactor: 3e-4 });\n\n      this.y_handle.assignFrameMembers(this,\"y\");\n   }\n\n   /** @summary Identify if requested axes are drawn\n     * @desc Checks if x/y axes are drawn. Also if second side is already there */\n   hasDrawnAxes(second_x, second_y) {\n      return !second_x && !second_y ? this.axes_drawn : false;\n   }\n\n   /** @summary Draw configured axes on the frame\n     * @desc axes can be drawn only for main histogram  */\n   drawAxes() {\n\n      if (this.axes_drawn || (this.xmin == this.xmax) || (this.ymin == this.ymax))\n         return Promise.resolve(this.axes_drawn);\n\n      let ticksx = this.v7EvalAttr(\"ticksX\", 1),\n          ticksy = this.v7EvalAttr(\"ticksY\", 1),\n          sidex = 1, sidey = 1;\n\n      if (this.v7EvalAttr(\"swapX\", false)) sidex = -1;\n      if (this.v7EvalAttr(\"swapY\", false)) sidey = -1;\n\n      let w = this.getFrameWidth(), h = this.getFrameHeight();\n\n      if (!this.v6axes) {\n         // this is partially same as v6 createXY method\n\n         this.cleanupAxes();\n\n         this.swap_xy = false;\n\n         if (this.zoom_xmin != this.zoom_xmax) {\n            this.scale_xmin = this.zoom_xmin;\n            this.scale_xmax = this.zoom_xmax;\n         } else {\n            this.scale_xmin = this.xmin;\n            this.scale_xmax = this.xmax;\n         }\n\n         if (this.zoom_ymin != this.zoom_ymax) {\n            this.scale_ymin = this.zoom_ymin;\n            this.scale_ymax = this.zoom_ymax;\n         } else {\n            this.scale_ymin = this.ymin;\n            this.scale_ymax = this.ymax;\n         }\n\n         this.recalculateRange(0);\n\n         this.x_handle = new RAxisPainter(this.getDom(), this, this.xaxis, \"x_\");\n         this.x_handle.setPadName(this.getPadName());\n         this.x_handle.snapid = this.snapid;\n         this.x_handle.draw_swapside = (sidex < 0);\n         this.x_handle.draw_ticks = ticksx;\n\n         this.y_handle = new RAxisPainter(this.getDom(), this, this.yaxis, \"y_\");\n         this.y_handle.setPadName(this.getPadName());\n         this.y_handle.snapid = this.snapid;\n         this.y_handle.draw_swapside = (sidey < 0);\n         this.y_handle.draw_ticks = ticksy;\n\n         this.z_handle = new RAxisPainter(this.getDom(), this, this.zaxis, \"z_\");\n         this.z_handle.setPadName(this.getPadName());\n         this.z_handle.snapid = this.snapid;\n\n         this.x_handle.configureAxis(\"xaxis\", this.xmin, this.xmax, this.scale_xmin, this.scale_xmax, false, [0,w], w, { reverse: false });\n         this.x_handle.assignFrameMembers(this,\"x\");\n\n         this.y_handle.configureAxis(\"yaxis\", this.ymin, this.ymax, this.scale_ymin, this.scale_ymax, true, [h,0], -h, { reverse: false });\n         this.y_handle.assignFrameMembers(this,\"y\");\n\n         // only get basic properties like log scale\n         this.z_handle.configureZAxis(\"zaxis\", this);\n      }\n\n      let layer = this.getFrameSvg().select(\".axis_layer\");\n\n      this.x_handle.has_obstacle = false;\n\n      let draw_horiz = this.swap_xy ? this.y_handle : this.x_handle,\n          draw_vertical = this.swap_xy ? this.x_handle : this.y_handle,\n          pp = this.getPadPainter(), pr;\n\n      if (pp?._fast_drawing) {\n         pr = Promise.resolve(true); // do nothing\n      } else if (this.v6axes) {\n\n         // in v7 ticksx/y values shifted by 1 relative to v6\n         // In v7 ticksx==0 means no ticks, ticksx==1 equivalent to ==0 in v6\n\n         let can_adjust_frame = false, disable_x_draw = false, disable_y_draw = false;\n\n         draw_horiz.disable_ticks = (ticksx <= 0);\n         draw_vertical.disable_ticks = (ticksy <= 0);\n\n         let pr1 = draw_horiz.drawAxis(layer, w, h,\n                                   draw_horiz.invert_side ? undefined : `translate(0,${h})`,\n                                   (ticksx > 1) ? -h : 0, disable_x_draw,\n                                   undefined, false);\n\n         let pr2 =  draw_vertical.drawAxis(layer, w, h,\n                                      draw_vertical.invert_side ? `translate(${w})` : undefined,\n                                      (ticksy > 1) ? w : 0, disable_y_draw,\n                                      draw_vertical.invert_side ? 0 : this._frame_x, can_adjust_frame);\n\n         pr = Promise.all([pr1,pr2]).then(() => this.drawGrids());\n\n      } else {\n\n         let arr = [];\n\n         if (ticksx > 0)\n            arr.push(draw_horiz.drawAxis(layer, (sidex > 0) ? `translate(0,${h})` : \"\", sidex));\n\n         if (ticksy > 0)\n            arr.push(draw_vertical.drawAxis(layer, (sidey > 0) ? `translate(0,${h})` : `translate(${w},${h})`, sidey));\n\n         pr = Promise.all(arr).then(() => {\n            arr = [];\n            if (ticksx > 1)\n               arr.push(draw_horiz.drawAxisOtherPlace(layer, (sidex < 0) ? `translate(0,${h})` : \"\", -sidex, ticksx == 2));\n\n            if (ticksy > 1)\n               arr.push(draw_vertical.drawAxisOtherPlace(layer, (sidey < 0) ? `translate(0,${h})` : `translate(${w},${h})`, -sidey, ticksy == 2));\n            return Promise.all(arr);\n         }).then(() => this.drawGrids());\n      }\n\n      return pr.then(() => {\n         this.axes_drawn = true;\n         return true;\n      });\n   }\n\n   /** @summary Draw secondary configuread axes */\n   drawAxes2(second_x, second_y) {\n      let w = this.getFrameWidth(), h = this.getFrameHeight(),\n          layer = this.getFrameSvg().select(\".axis_layer\"),\n          pr1, pr2;\n\n      if (second_x) {\n         if (this.zoom_x2min != this.zoom_x2max) {\n            this.scale_x2min = this.zoom_x2min;\n            this.scale_x2max = this.zoom_x2max;\n         } else {\n           this.scale_x2min = this.x2min;\n           this.scale_x2max = this.x2max;\n         }\n         this.x2_handle = new RAxisPainter(this.getDom(), this, this.x2axis, \"x2_\");\n         this.x2_handle.setPadName(this.getPadName());\n         this.x2_handle.snapid = this.snapid;\n\n         this.x2_handle.configureAxis(\"x2axis\", this.x2min, this.x2max, this.scale_x2min, this.scale_x2max, false, [0,w], w, { reverse: false });\n         this.x2_handle.assignFrameMembers(this,\"x2\");\n\n         pr1 = this.x2_handle.drawAxis(layer, \"\", -1);\n      }\n\n      if (second_y) {\n         if (this.zoom_y2min != this.zoom_y2max) {\n            this.scale_y2min = this.zoom_y2min;\n            this.scale_y2max = this.zoom_y2max;\n         } else {\n            this.scale_y2min = this.y2min;\n            this.scale_y2max = this.y2max;\n         }\n\n         this.y2_handle = new RAxisPainter(this.getDom(), this, this.y2axis, \"y2_\");\n         this.y2_handle.setPadName(this.getPadName());\n         this.y2_handle.snapid = this.snapid;\n\n         this.y2_handle.configureAxis(\"y2axis\", this.y2min, this.y2max, this.scale_y2min, this.scale_y2max, true, [h,0], -h, { reverse: false });\n         this.y2_handle.assignFrameMembers(this,\"y2\");\n\n         pr2 = this.y2_handle.drawAxis(layer, `translate(${w},${h})`, -1);\n      }\n\n      return Promise.all([pr1,pr2]);\n   }\n\n   /** @summary Return functions to create x/y points based on coordinates\n     * @desc In default case returns frame painter itself\n     * @private */\n   getGrFuncs(second_x, second_y) {\n      let use_x2 = second_x && this.grx2,\n          use_y2 = second_y && this.gry2;\n      if (!use_x2 && !use_y2) return this;\n\n      return {\n         use_x2: use_x2,\n         grx: use_x2 ? this.grx2 : this.grx,\n         x_handle: use_x2 ? this.x2_handle : this.x_handle,\n         logx: use_x2 ? this.x2_handle.log : this.x_handle.log,\n         scale_xmin: use_x2 ? this.scale_x2min : this.scale_xmin,\n         scale_xmax: use_x2 ? this.scale_x2max : this.scale_xmax,\n         use_y2: use_y2,\n         gry: use_y2 ? this.gry2 : this.gry,\n         y_handle: use_y2 ? this.y2_handle : this.y_handle,\n         logy: use_y2 ? this.y2_handle.log : this.y_handle.log,\n         scale_ymin: use_y2 ? this.scale_y2min : this.scale_ymin,\n         scale_ymax: use_y2 ? this.scale_y2max : this.scale_ymax,\n         swap_xy: this.swap_xy,\n         fp: this,\n         revertAxis(name, v) {\n            if ((name == \"x\") && this.use_x2) name = \"x2\";\n            if ((name == \"y\") && this.use_y2) name = \"y2\";\n            return this.fp.revertAxis(name, v);\n         },\n         axisAsText(name, v) {\n            if ((name == \"x\") && this.use_x2) name = \"x2\";\n            if ((name == \"y\") && this.use_y2) name = \"y2\";\n            return this.fp.axisAsText(name, v);\n         }\n      };\n   }\n\n   /** @summary function called at the end of resize of frame\n     * @desc Used to update attributes on the server\n     * @private */\n   sizeChanged() {\n\n      let changes = {};\n      this.v7AttrChange(changes, \"margins_left\", this.fX1NDC);\n      this.v7AttrChange(changes, \"margins_bottom\", this.fY1NDC);\n      this.v7AttrChange(changes, \"margins_right\", 1 - this.fX2NDC);\n      this.v7AttrChange(changes, \"margins_top\", 1 - this.fY2NDC);\n      this.v7SendAttrChanges(changes, false); // do not invoke canvas update on the server\n\n      this.redrawPad();\n   }\n\n   /** @summary Remove all x/y functions\n     * @private */\n   cleanXY() {\n      // remove all axes drawings\n      let clean = (name,grname) => {\n         if (this[name]) {\n            this[name].cleanup();\n            delete this[name];\n         }\n         delete this[grname];\n      };\n\n      clean(\"x_handle\", \"grx\");\n      clean(\"y_handle\", \"gry\");\n      clean(\"z_handle\", \"grz\");\n      clean(\"x2_handle\", \"grx2\");\n      clean(\"y2_handle\", \"gry2\");\n\n      delete this.v6axes; // marker that v6 axes are used\n   }\n\n   /** @summary Remove all axes drawings\n     * @private */\n   cleanupAxes() {\n      this.cleanXY();\n\n      if (this.draw_g) {\n         this.draw_g.select(\".grid_layer\").selectAll(\"*\").remove();\n         this.draw_g.select(\".axis_layer\").selectAll(\"*\").remove();\n      }\n      this.axes_drawn = false;\n   }\n\n   /** @summary Removes all drawn elements of the frame\n     * @private */\n   cleanFrameDrawings() {\n      // cleanup all 3D drawings if any\n      if (typeof this.create3DScene === 'function')\n         this.create3DScene(-1);\n\n      this.cleanupAxes();\n\n      let clean = (name) => {\n         this[name+\"min\"] = this[name+\"max\"] = 0;\n         this[\"zoom_\"+name+\"min\"] = this[\"zoom_\"+name+\"max\"] = 0;\n         this[\"scale_\"+name+\"min\"] = this[\"scale_\"+name+\"max\"] = 0;\n      };\n\n      clean(\"x\");\n      clean(\"y\");\n      clean(\"z\");\n      clean(\"x2\");\n      clean(\"y2\");\n\n      if (this.draw_g) {\n         this.draw_g.select(\".main_layer\").selectAll(\"*\").remove();\n         this.draw_g.select(\".upper_layer\").selectAll(\"*\").remove();\n      }\n   }\n\n   /** @summary Fully cleanup frame\n     * @private */\n   cleanup() {\n\n      this.cleanFrameDrawings();\n\n      if (this.draw_g) {\n         this.draw_g.selectAll(\"*\").remove();\n         this.draw_g.on(\"mousedown\", null)\n                    .on(\"dblclick\", null)\n                    .on(\"wheel\", null)\n                    .on(\"contextmenu\", null)\n                    .property('interactive_set', null);\n      }\n\n      if (this.keys_handler) {\n         window.removeEventListener('keydown', this.keys_handler, false);\n         this.keys_handler = null;\n      }\n      delete this.enabledKeys;\n      delete this.self_drawaxes;\n\n      delete this.xaxis;\n      delete this.yaxis;\n      delete this.zaxis;\n      delete this.x2axis;\n      delete this.y2axis;\n\n      delete this.draw_g; // frame <g> element managet by the pad\n\n      delete this._click_handler;\n      delete this._dblclick_handler;\n\n      let pp = this.getPadPainter();\n      if (pp?.frame_painter_ref === this)\n         delete pp.frame_painter_ref;\n\n      super.cleanup();\n   }\n\n   /** @summary Redraw frame\n     * @private */\n   redraw() {\n\n      let pp = this.getPadPainter();\n      if (pp) pp.frame_painter_ref = this;\n\n      // first update all attributes from objects\n      this.updateAttributes();\n\n      let rect = pp ? pp.getPadRect() : { width: 10, height: 10 },\n          lm = Math.round(rect.width * this.fX1NDC),\n          w = Math.round(rect.width * (this.fX2NDC - this.fX1NDC)),\n          tm = Math.round(rect.height * (1 - this.fY2NDC)),\n          h = Math.round(rect.height * (this.fY2NDC - this.fY1NDC)),\n          rotate = false, fixpos = false, trans;\n\n      if (pp && pp.options) {\n         if (pp.options.RotateFrame) rotate = true;\n         if (pp.options.FixFrame) fixpos = true;\n      }\n\n      if (rotate) {\n         trans = `rotate(-90,${lm},${tm}) translate(${lm-h},${tm})`;\n         let d = w; w = h; h = d;\n      } else {\n         trans = `translate(${lm},${tm})`;\n      }\n\n      // update values here to let access even when frame is not really updated\n      this._frame_x = lm;\n      this._frame_y = tm;\n      this._frame_width = w;\n      this._frame_height = h;\n      this._frame_rotate = rotate;\n      this._frame_fixpos = fixpos;\n\n      if (this.mode3d) return this; // no need for real draw in mode3d\n\n      // this is svg:g object - container for every other items belonging to frame\n      this.draw_g = this.getFrameSvg();\n\n      let top_rect, main_svg;\n\n      if (this.draw_g.empty()) {\n\n         this.draw_g = this.getLayerSvg(\"primitives_layer\").append(\"svg:g\").attr(\"class\", \"root_frame\");\n\n         if (!isBatchMode())\n            this.draw_g.append(\"svg:title\").text(\"\");\n\n         top_rect = this.draw_g.append(\"svg:rect\");\n\n         // append for the moment three layers - for drawing and axis\n         this.draw_g.append('svg:g').attr('class','grid_layer');\n\n         main_svg = this.draw_g.append('svg:svg')\n                           .attr('class','main_layer')\n                           .attr(\"x\", 0)\n                           .attr(\"y\", 0)\n                           .attr('overflow', 'hidden');\n\n         this.draw_g.append('svg:g').attr('class','axis_layer');\n         this.draw_g.append('svg:g').attr('class','upper_layer');\n      } else {\n         top_rect = this.draw_g.select(\"rect\");\n         main_svg = this.draw_g.select(\".main_layer\");\n      }\n\n      this.axes_drawn = false;\n\n      this.draw_g.attr(\"transform\", trans);\n\n      top_rect.attr(\"x\", 0)\n              .attr(\"y\", 0)\n              .attr(\"width\", w)\n              .attr(\"height\", h)\n              .attr(\"rx\", this.lineatt.rx || null)\n              .attr(\"ry\", this.lineatt.ry || null)\n              .call(this.fillatt.func)\n              .call(this.lineatt.func);\n\n      main_svg.attr(\"width\", w)\n              .attr(\"height\", h)\n              .attr(\"viewBox\", `0 0 ${w} ${h}`);\n\n      let pr = Promise.resolve(true);\n\n      if (this.v7EvalAttr(\"drawAxes\")) {\n         this.self_drawaxes = true;\n         this.setAxesRanges();\n         pr = this.drawAxes().then(() => this.addInteractivity());\n      }\n\n      return pr.then(() => {\n         if (!isBatchMode()) {\n            top_rect.style(\"pointer-events\", \"visibleFill\");  // let process mouse events inside frame\n\n            FrameInteractive.assign(this);\n            this.addBasicInteractivity();\n         }\n\n         return this;\n      });\n   }\n\n   /** @summary Returns frame width */\n   getFrameWidth() { return this._frame_width || 0; }\n\n   /** @summary Returns frame height */\n   getFrameHeight() { return this._frame_height || 0; }\n\n   /** @summary Returns frame rectangle plus extra info for hint display */\n   getFrameRect() {\n      return {\n         x: this._frame_x || 0,\n         y: this._frame_y || 0,\n         width: this.getFrameWidth(),\n         height: this.getFrameHeight(),\n         transform: this.draw_g ? this.draw_g.attr(\"transform\") : \"\",\n         hint_delta_x: 0,\n         hint_delta_y: 0\n      }\n   }\n\n   /** @summary Returns palette associated with frame */\n   getHistPalette() {\n      return this.getPadPainter().getHistPalette();\n   }\n\n   /** @summary Configure user-defined click handler\n     * @desc Function will be called every time when frame click was perfromed\n     * As argument, tooltip object with selected bins will be provided\n     * If handler function returns true, default handling of click will be disabled */\n   configureUserClickHandler(handler) {\n      this._click_handler = handler && (typeof handler == 'function') ? handler : null;\n   }\n\n   /** @summary Configure user-defined dblclick handler\n     * @desc Function will be called every time when double click was called\n     * As argument, tooltip object with selected bins will be provided\n     * If handler function returns true, default handling of dblclick (unzoom) will be disabled */\n   configureUserDblclickHandler(handler) {\n      this._dblclick_handler = handler && (typeof handler == 'function') ? handler : null;\n   }\n\n   /** @summary function can be used for zooming into specified range\n     * @desc if both limits for each axis 0 (like xmin==xmax==0), axis will be unzoomed\n     * @returns {Promise} with boolean flag if zoom operation was performed */\n   zoom(xmin, xmax, ymin, ymax, zmin, zmax) {\n\n      // disable zooming when axis conversion is enabled\n      if (this.projection) return Promise.resolve(false);\n\n      if (xmin===\"x\") { xmin = xmax; xmax = ymin; ymin = undefined; } else\n      if (xmin===\"y\") { ymax = ymin; ymin = xmax; xmin = xmax = undefined; } else\n      if (xmin===\"z\") { zmin = xmax; zmax = ymin; xmin = xmax = ymin = undefined; }\n\n      let zoom_x = (xmin !== xmax), zoom_y = (ymin !== ymax), zoom_z = (zmin !== zmax),\n          unzoom_x = false, unzoom_y = false, unzoom_z = false;\n\n      if (zoom_x) {\n         let cnt = 0;\n         if (xmin <= this.xmin) { xmin = this.xmin; cnt++; }\n         if (xmax >= this.xmax) { xmax = this.xmax; cnt++; }\n         if (cnt === 2) { zoom_x = false; unzoom_x = true; }\n      } else {\n         unzoom_x = (xmin === xmax) && (xmin === 0);\n      }\n\n      if (zoom_y) {\n         let cnt = 0;\n         if (ymin <= this.ymin) { ymin = this.ymin; cnt++; }\n         if (ymax >= this.ymax) { ymax = this.ymax; cnt++; }\n         if (cnt === 2) { zoom_y = false; unzoom_y = true; }\n      } else {\n         unzoom_y = (ymin === ymax) && (ymin === 0);\n      }\n\n      if (zoom_z) {\n         let cnt = 0;\n         // if (this.logz && this.ymin_nz && this.getDimension()===2) main_zmin = 0.3*this.ymin_nz;\n         if (zmin <= this.zmin) { zmin = this.zmin; cnt++; }\n         if (zmax >= this.zmax) { zmax = this.zmax; cnt++; }\n         if (cnt === 2) { zoom_z = false; unzoom_z = true; }\n      } else {\n         unzoom_z = (zmin === zmax) && (zmin === 0);\n      }\n\n      let changed = false,\n          r_x = \"\", r_y = \"\", r_z = \"\", is_any_check = false,\n         req = {\n            _typename: \"ROOT::Experimental::RFrame::RUserRanges\",\n            values: [0, 0, 0, 0, 0, 0],\n            flags: [false, false, false, false, false, false]\n         };\n\n      const checkZooming = (painter, force) => {\n         if (!force && (typeof painter.canZoomInside != 'function')) return;\n\n         is_any_check = true;\n\n         if (zoom_x && (force || painter.canZoomInside(\"x\", xmin, xmax))) {\n            this.zoom_xmin = xmin;\n            this.zoom_xmax = xmax;\n            changed = true; r_x = \"0\";\n            zoom_x = false;\n            req.values[0] = xmin; req.values[1] = xmax;\n            req.flags[0] = req.flags[1] = true;\n         }\n         if (zoom_y && (force || painter.canZoomInside(\"y\", ymin, ymax))) {\n            this.zoom_ymin = ymin;\n            this.zoom_ymax = ymax;\n            changed = true; r_y = \"1\";\n            zoom_y = false;\n            req.values[2] = ymin; req.values[3] = ymax;\n            req.flags[2] = req.flags[3] = true;\n         }\n         if (zoom_z && (force || painter.canZoomInside(\"z\", zmin, zmax))) {\n            this.zoom_zmin = zmin;\n            this.zoom_zmax = zmax;\n            changed = true; r_z = \"2\";\n            zoom_z = false;\n            req.values[4] = zmin; req.values[5] = zmax;\n            req.flags[4] = req.flags[5] = true;\n         }\n      };\n\n      // first process zooming (if any)\n      if (zoom_x || zoom_y || zoom_z)\n         this.forEachPainter(painter => checkZooming(painter));\n\n      // force zooming when no any other painter can verify zoom range\n      if (!is_any_check && this.self_drawaxes)\n         checkZooming(null, true);\n\n      // and process unzoom, if any\n      if (unzoom_x || unzoom_y || unzoom_z) {\n         if (unzoom_x) {\n            if (this.zoom_xmin !== this.zoom_xmax) { changed = true; r_x = \"0\"; }\n            this.zoom_xmin = this.zoom_xmax = 0;\n            req.values[0] = req.values[1] = -1;\n         }\n         if (unzoom_y) {\n            if (this.zoom_ymin !== this.zoom_ymax) { changed = true; r_y = \"1\"; }\n            this.zoom_ymin = this.zoom_ymax = 0;\n            req.values[2] = req.values[3] = -1;\n         }\n         if (unzoom_z) {\n            if (this.zoom_zmin !== this.zoom_zmax) { changed = true; r_z = \"2\"; }\n            this.zoom_zmin = this.zoom_zmax = 0;\n            req.values[4] = req.values[5] = -1;\n         }\n      }\n\n      if (!changed) return Promise.resolve(false);\n\n      if (this.v7NormalMode())\n         this.v7SubmitRequest(\"zoom\", { _typename: \"ROOT::Experimental::RFrame::RZoomRequest\", ranges: req });\n\n      return this.interactiveRedraw(\"pad\", \"zoom\" + r_x + r_y + r_z).then(() => true);\n   }\n\n   /** @summary Provide zooming of single axis\n     * @desc One can specify names like x/y/z but also second axis x2 or y2 */\n   zoomSingle(name, vmin, vmax) {\n\n      let names = [\"x\",\"y\",\"z\",\"x2\",\"y2\"], indx = names.indexOf(name);\n\n      // disable zooming when axis conversion is enabled\n      if (this.projection || !this[name+\"_handle\"] || (indx < 0))\n         return Promise.resolve(false);\n\n      let zoom_v = (vmin !== vmax), unzoom_v = false;\n\n      if (zoom_v) {\n         let cnt = 0;\n         if (vmin <= this[name+\"min\"]) { vmin = this[name+\"min\"]; cnt++; }\n         if (vmax >= this[name+\"max\"]) { vmax = this[name+\"max\"]; cnt++; }\n         if (cnt === 2) { zoom_v = false; unzoom_v = true; }\n      } else {\n         unzoom_v = (vmin === vmax) && (vmin === 0);\n      }\n\n      let changed = false, is_any_check = false,\n          req = {\n             _typename: \"ROOT::Experimental::RFrame::RUserRanges\",\n             values: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n             flags: [false, false, false, false, false, false, false, false, false, false]\n          };\n\n      let checkZooming = (painter, force) => {\n         if (!force && (typeof painter?.canZoomInside != 'function')) return;\n\n         is_any_check = true;\n\n         if (zoom_v && (force || painter.canZoomInside(name[0], vmin, vmax))) {\n            this[\"zoom_\" + name + \"min\"] = vmin;\n            this[\"zoom_\" + name + \"max\"] = vmax;\n            changed = true;\n            zoom_v = false;\n            req.values[indx*2] = vmin; req.values[indx*2+1] = vmax;\n            req.flags[indx*2] = req.flags[indx*2+1] = true;\n         }\n      };\n\n      // first process zooming (if any)\n      if (zoom_v)\n         this.forEachPainter(painter => checkZooming(painter));\n\n      // force zooming when no any other painter can verify zoom range\n      if (!is_any_check && this.self_drawaxes)\n         checkZooming(null, true);\n\n      if (unzoom_v) {\n         if (this[`zoom_${name}min`] !== this[`zoom_${name}max`]) changed = true;\n         this[`zoom_${name}min`] = this[`zoom_${name}max`] = 0;\n         req.values[indx*2] = req.values[indx*2+1] = -1;\n      }\n\n      if (!changed) return Promise.resolve(false);\n\n      if (this.v7NormalMode())\n         this.v7SubmitRequest(\"zoom\", { _typename: \"ROOT::Experimental::RFrame::RZoomRequest\", ranges: req });\n\n      return this.interactiveRedraw(\"pad\", \"zoom\" + indx).then(() => true);\n   }\n\n   /** @summary Checks if specified axis zoomed */\n   isAxisZoomed(axis) {\n      return this['zoom_'+axis+'min'] !== this['zoom_'+axis+'max'];\n   }\n\n   /** @summary Unzoom specified axes\n     * @returns {Promise} with boolean flag if zoom is changed */\n   unzoom(dox, doy, doz) {\n      if (dox == \"all\")\n         return this.unzoom(\"x2\").then(() => this.unzoom(\"y2\")).then(() => this.unzoom(\"xyz\"));\n\n      if ((dox == \"x2\") || (dox == \"y2\"))\n         return this.zoomSingle(dox, 0, 0).then(changed => {\n            if (changed) this.zoomChangedInteractive(dox, \"unzoom\");\n            return changed;\n         });\n\n      if (typeof dox === 'undefined') { dox = doy = doz = true; } else\n      if (typeof dox === 'string') { doz = dox.indexOf(\"z\") >= 0; doy = dox.indexOf(\"y\") >= 0; dox = dox.indexOf(\"x\") >= 0; }\n\n      return this.zoom(dox ? 0 : undefined, dox ? 0 : undefined,\n                       doy ? 0 : undefined, doy ? 0 : undefined,\n                       doz ? 0 : undefined, doz ? 0 : undefined).then(changed => {\n\n         if (changed && dox) this.zoomChangedInteractive(\"x\", \"unzoom\");\n         if (changed && doy) this.zoomChangedInteractive(\"y\", \"unzoom\");\n         if (changed && doz) this.zoomChangedInteractive(\"z\", \"unzoom\");\n\n         return changed;\n      });\n   }\n\n   /** @summary Mark/check if zoom for specific axis was changed interactively\n     * @private */\n   zoomChangedInteractive(axis, value) {\n      if (axis == 'reset') {\n         this.zoom_changed_x = this.zoom_changed_y = this.zoom_changed_z = undefined;\n         return;\n      }\n      if (!axis || axis == 'any')\n         return this.zoom_changed_x || this.zoom_changed_y  || this.zoom_changed_z;\n\n      if ((axis !== 'x') && (axis !== 'y') && (axis !== 'z')) return;\n\n      let fld = \"zoom_changed_\" + axis;\n      if (value === undefined) return this[fld];\n\n      if (value === 'unzoom') {\n         // special handling of unzoom, only if was never changed before flag set to true\n         this[fld] = (this[fld] === undefined);\n         return;\n      }\n\n      if (value) this[fld] = true;\n   }\n\n   /** @summary Fill menu for frame when server is not there */\n   fillObjectOfflineMenu(menu, kind) {\n      if ((kind!=\"x\") && (kind!=\"y\")) return;\n\n      menu.add(\"Unzoom\", () => this.unzoom(kind));\n\n      //if (this[kind+\"_kind\"] == \"normal\")\n      //   menu.addchk(this[\"log\"+kind], \"SetLog\"+kind, this.toggleAxisLog.bind(this, kind));\n\n      // here should be all axes attributes in offline\n   }\n\n   /** @summary Set grid drawing for specified axis */\n   changeFrameAttr(attr, value) {\n      let changes = {};\n      this.v7AttrChange(changes, attr, value);\n      this.v7SetAttr(attr, value);\n      this.v7SendAttrChanges(changes, false); // do not invoke canvas update on the server\n      this.redrawPad();\n   }\n\n   /** @summary Fill context menu */\n   fillContextMenu(menu, kind, /* obj */) {\n\n      // when fill and show context menu, remove all zooming\n\n      if ((kind==\"x\") || (kind==\"y\") || (kind==\"x2\") || (kind==\"y2\")) {\n         let handle = this[kind+\"_handle\"];\n         if (!handle) return false;\n         menu.add(\"header: \" + kind.toUpperCase() + \" axis\");\n         return handle.fillAxisContextMenu(menu, kind);\n      }\n\n      let alone = menu.size()==0;\n\n      if (alone)\n         menu.add(\"header:Frame\");\n      else\n         menu.add(\"separator\");\n\n      if (this.zoom_xmin !== this.zoom_xmax)\n         menu.add(\"Unzoom X\", () => this.unzoom(\"x\"));\n      if (this.zoom_ymin !== this.zoom_ymax)\n         menu.add(\"Unzoom Y\", () => this.unzoom(\"y\"));\n      if (this.zoom_zmin !== this.zoom_zmax)\n         menu.add(\"Unzoom Z\", () => this.unzoom(\"z\"));\n      if (this.zoom_x2min !== this.zoom_x2max)\n         menu.add(\"Unzoom X2\", () => this.unzoom(\"x2\"));\n      if (this.zoom_y2min !== this.zoom_y2max)\n         menu.add(\"Unzoom Y2\", () => this.unzoom(\"y2\"));\n      menu.add(\"Unzoom all\", () => this.unzoom(\"all\"));\n\n      menu.add(\"separator\");\n\n      menu.addchk(this.isTooltipAllowed(), \"Show tooltips\", () => this.setTooltipAllowed(\"toggle\"));\n\n      if (this.x_handle)\n         menu.addchk(this.x_handle.draw_grid, \"Grid x\", flag => this.changeFrameAttr(\"gridX\", flag));\n      if (this.y_handle)\n         menu.addchk(this.y_handle.draw_grid, \"Grid y\", flag => this.changeFrameAttr(\"gridY\", flag));\n      if (this.x_handle && !this.x2_handle)\n         menu.addchk(this.x_handle.draw_swapside, \"Swap x\", flag => this.changeFrameAttr(\"swapX\", flag));\n      if (this.y_handle && !this.y2_handle)\n         menu.addchk(this.y_handle.draw_swapside, \"Swap y\", flag => this.changeFrameAttr(\"swapY\", flag));\n      if (this.x_handle && !this.x2_handle) {\n         menu.add(\"sub:Ticks x\");\n         menu.addchk(this.x_handle.draw_ticks == 0, \"off\", () => this.changeFrameAttr(\"ticksX\", 0));\n         menu.addchk(this.x_handle.draw_ticks == 1, \"normal\", () => this.changeFrameAttr(\"ticksX\", 1));\n         menu.addchk(this.x_handle.draw_ticks == 2, \"ticks on both sides\", () => this.changeFrameAttr(\"ticksX\", 2));\n         menu.addchk(this.x_handle.draw_ticks == 3, \"labels on both sides\", () => this.changeFrameAttr(\"ticksX\", 3));\n         menu.add(\"endsub:\");\n       }\n      if (this.y_handle && !this.y2_handle) {\n         menu.add(\"sub:Ticks y\");\n         menu.addchk(this.y_handle.draw_ticks == 0, \"off\", () => this.changeFrameAttr(\"ticksY\", 0));\n         menu.addchk(this.y_handle.draw_ticks == 1, \"normal\", () => this.changeFrameAttr(\"ticksY\", 1));\n         menu.addchk(this.y_handle.draw_ticks == 2, \"ticks on both sides\", () => this.changeFrameAttr(\"ticksY\", 2));\n         menu.addchk(this.y_handle.draw_ticks == 3, \"labels on both sides\", () => this.changeFrameAttr(\"ticksY\", 3));\n         menu.add(\"endsub:\");\n       }\n\n      menu.addAttributesMenu(this, alone ? \"\" : \"Frame \");\n      menu.add(\"separator\");\n      menu.add(\"Save as frame.png\", () => this.getPadPainter().saveAs(\"png\", 'frame', 'frame.png'));\n      menu.add(\"Save as frame.svg\", () => this.getPadPainter().saveAs(\"svg\", 'frame', 'frame.svg'));\n\n      return true;\n   }\n\n   /** @summary Convert graphical coordinate into axis value */\n   revertAxis(axis, pnt) {\n      let handle = this[axis+\"_handle\"];\n      return handle ? handle.revertPoint(pnt) : 0;\n   }\n\n   /** @summary Show axis status message\n     * @desc method called normally when mouse enter main object element\n     * @private */\n   showAxisStatus(axis_name, evnt) {\n\n      let taxis = null, hint_name = axis_name, hint_title = \"axis\",\n          m = d3_pointer(evnt, this.getFrameSvg().node()), id = (axis_name==\"x\") ? 0 : 1;\n\n      if (taxis) { hint_name = taxis.fName; hint_title = taxis.fTitle || \"axis object\"; }\n\n      if (this.swap_xy) id = 1-id;\n\n      let axis_value = this.revertAxis(axis_name, m[id]);\n\n      this.showObjectStatus(hint_name, hint_title, axis_name + \" : \" + this.axisAsText(axis_name, axis_value), Math.round(m[0])+\",\"+Math.round(m[1]));\n   }\n\n   /** @summary Add interactive keys handlers\n    * @private */\n   addKeysHandler() {\n      if (isBatchMode()) return;\n      FrameInteractive.assign(this);\n      this.addFrameKeysHandler();\n   }\n\n   /** @summary Add interactive functionality to the frame\n    * @private */\n   addInteractivity(for_second_axes) {\n\n      if (isBatchMode() || (!settings.Zooming && !settings.ContextMenu))\n         return true;\n      FrameInteractive.assign(this);\n      return this.addFrameInteractivity(for_second_axes);\n   }\n\n   /** @summary Set selected range back to pad object - to be implemented\n     * @private */\n   setRootPadRange(/* pad, is3d */) {\n      // TODO: change of pad range and send back to root application\n   }\n\n   /** @summary Toggle log scale on the specified axes */\n   toggleAxisLog(axis) {\n      let handle = this[axis+\"_handle\"];\n      if (handle) handle.changeAxisLog('toggle');\n   }\n\n} // class RFramePainter\n\nexport { RFramePainter };\n","import { gStyle, settings, constants, internals, addMethods, isPromise, isBatchMode, btoa_func } from '../core.mjs';\nimport { pointer as d3_pointer } from '../d3.mjs';\nimport { ColorPalette, addColor, getRootColors } from '../base/colors.mjs';\nimport { RObjectPainter } from '../base/RObjectPainter.mjs';\nimport { getElementRect, getAbsPosInCanvas, DrawOptions, compressSVG } from '../base/BasePainter.mjs';\nimport { selectActivePad, getActivePad } from '../base/ObjectPainter.mjs';\nimport { registerForResize, saveFile } from '../gui/utils.mjs';\nimport { BrowserLayout } from '../gui/display.mjs';\nimport { createMenu, closeMenu } from '../gui/menu.mjs';\nimport { PadButtonsHandler } from './TPadPainter.mjs';\n\n\n/**\n * @summary Painter class for RPad\n *\n * @private\n */\n\nclass RPadPainter extends RObjectPainter {\n\n   /** @summary constructor */\n   constructor(dom, pad, iscan) {\n      super(dom, pad, \"\", \"pad\");\n      this.pad = pad;\n      this.iscan = iscan; // indicate if working with canvas\n      this.this_pad_name = \"\";\n      if (!this.iscan && (pad !== null)) {\n         if (pad.fObjectID)\n            this.this_pad_name = \"pad\" + pad.fObjectID; // use objectid as padname\n         else\n            this.this_pad_name = \"ppp\" + internals.id_counter++; // artificical name\n      }\n      this.painters = []; // complete list of all painters in the pad\n      this.has_canvas = true;\n      this.forEachPainter = this.forEachPainterInPad;\n   }\n\n   /** @summary Indicates that is not Root6 pad painter\n    * @private */\n   isRoot6() { return false; }\n\n  /** @summary Returns SVG element for the pad itself\n    * @private */\n   svg_this_pad() {\n      return this.getPadSvg(this.this_pad_name);\n   }\n\n   /** @summary Returns main painter on the pad\n     * @desc Typically main painter is TH1/TH2 object which is drawing axes\n    * @private */\n   getMainPainter() {\n      return this.main_painter_ref || null;\n   }\n\n   /** @summary Assign main painter on the pad\n    * @private */\n   setMainPainter(painter, force) {\n      if (!this.main_painter_ref || force)\n         this.main_painter_ref = painter;\n   }\n\n   /** @summary cleanup pad and all primitives inside */\n   cleanup() {\n      if (this._doing_draw)\n         console.error('pad drawing is not completed when cleanup is called');\n\n      this.painters.forEach(p => p.cleanup());\n\n      let svg_p = this.svg_this_pad();\n      if (!svg_p.empty()) {\n         svg_p.property('pad_painter', null);\n         if (!this.iscan) svg_p.remove();\n      }\n\n      delete this.main_painter_ref;\n      delete this.frame_painter_ref;\n      delete this.pads_cache;\n      delete this._pad_x;\n      delete this._pad_y;\n      delete this._pad_width;\n      delete this._pad_height;\n      delete this._doing_draw;\n      delete this._dfltRFont;\n\n      this.painters = [];\n      this.pad = null;\n      this.draw_object = null;\n      this.pad_frame = null;\n      this.this_pad_name = undefined;\n      this.has_canvas = false;\n\n      selectActivePad({ pp: this, active: false });\n\n      super.cleanup();\n   }\n\n   /** @summary Returns frame painter inside the pad\n    * @private */\n   getFramePainter() { return this.frame_painter_ref; }\n\n   /** @summary get pad width */\n   getPadWidth() { return this._pad_width || 0; }\n\n   /** @summary get pad height */\n   getPadHeight() { return this._pad_height || 0; }\n\n   /** @summary get pad rect */\n   getPadRect() {\n      return {\n         x: this._pad_x || 0,\n         y: this._pad_y || 0,\n         width: this.getPadWidth(),\n         height: this.getPadHeight()\n      }\n   }\n\n   /** @summary Returns frame coordiantes - also when frame is not drawn */\n   getFrameRect() {\n      let fp = this.getFramePainter();\n      if (fp) return fp.getFrameRect();\n\n      let w = this.getPadWidth(),\n          h = this.getPadHeight(),\n          rect = {};\n\n      rect.szx = Math.round(0.5*w);\n      rect.szy = Math.round(0.5*h);\n      rect.width = 2*rect.szx;\n      rect.height = 2*rect.szy;\n      rect.x = Math.round(w/2 - rect.szx);\n      rect.y = Math.round(h/2 - rect.szy);\n      rect.hint_delta_x = rect.szx;\n      rect.hint_delta_y = rect.szy;\n      rect.transform = `translate(${rect.x},${rect.y})`;\n      return rect;\n   }\n\n   /** @summary return RPad object */\n   getRootPad(is_root6) {\n      return (is_root6 === undefined) || !is_root6 ? this.pad : null;\n   }\n\n   /** @summary Cleanup primitives from pad - selector lets define which painters to remove\n    * @private */\n   cleanPrimitives(selector) {\n      if (!selector || (typeof selector !== 'function')) return;\n\n      for (let k = this.painters.length-1; k >= 0; --k)\n         if (selector(this.painters[k])) {\n            this.painters[k].cleanup();\n            this.painters.splice(k, 1);\n         }\n   }\n\n   /** @summary Try to find painter for specified object\n     * @desc can be used to find painter for some special objects, registered as\n     * histogram functions\n     * @private */\n   findPainterFor(selobj, selname, seltype) {\n      return this.painters.find(p => {\n         let pobj = p.getObject();\n         if (!pobj) return;\n\n         if (selobj && (pobj === selobj)) return true;\n         if (!selname && !seltype) return;\n         if (selname && (pobj.fName !== selname)) return;\n         if (seltype && (pobj._typename !== seltype)) return;\n         return true;\n      });\n   }\n\n   /** @summary Returns palette associated with pad.\n     * @desc Either from existing palette painter or just default palette */\n   getHistPalette() {\n      let pp = this.findPainterFor(undefined, undefined, \"ROOT::Experimental::RPaletteDrawable\");\n\n      if (pp) return pp.getHistPalette();\n\n      if (!this.fDfltPalette) {\n         this.fDfltPalette = {\n            _typename: \"ROOT::Experimental::RPalette\",\n            fColors: [{ fOrdinal : 0,     fColor : { fColor : \"rgb(53, 42, 135)\" } },\n                      { fOrdinal : 0.125, fColor : { fColor : \"rgb(15, 92, 221)\" } },\n                      { fOrdinal : 0.25,  fColor : { fColor : \"rgb(20, 129, 214)\" } },\n                      { fOrdinal : 0.375, fColor : { fColor : \"rgb(6, 164, 202)\" } },\n                      { fOrdinal : 0.5,   fColor : { fColor : \"rgb(46, 183, 164)\" } },\n                      { fOrdinal : 0.625, fColor : { fColor : \"rgb(135, 191, 119)\" } },\n                      { fOrdinal : 0.75,  fColor : { fColor : \"rgb(209, 187, 89)\" } },\n                      { fOrdinal : 0.875, fColor : { fColor : \"rgb(254, 200, 50)\" } },\n                      { fOrdinal : 1,     fColor : { fColor : \"rgb(249, 251, 14)\" } }],\n             fInterpolate: true,\n             fNormalized: true\n         };\n         addMethods(this.fDfltPalette, \"ROOT::Experimental::RPalette\");\n      }\n\n      return this.fDfltPalette;\n   }\n\n   /** @summary Returns number of painters\n     * @private */\n   getNumPainters() { return this.painters.length; }\n\n   /** @summary Call function for each painter in pad\n     * @param {function} userfunc - function to call\n     * @param {string} kind - \"all\" for all objects (default), \"pads\" only pads and subpads, \"objects\" only for object in current pad\n     * @private */\n   forEachPainterInPad(userfunc, kind) {\n      if (!kind) kind = \"all\";\n      if (kind != \"objects\") userfunc(this);\n      for (let k = 0; k < this.painters.length; ++k) {\n         let sub = this.painters[k];\n         if (typeof sub.forEachPainterInPad === 'function') {\n            if (kind!=\"objects\") sub.forEachPainterInPad(userfunc, kind);\n         } else if (kind != \"pads\") userfunc(sub);\n      }\n   }\n\n   /** @summary register for pad events receiver\n     * @desc in pad painter, while pad may be drawn without canvas\n     * @private */\n   registerForPadEvents(receiver) {\n      this.pad_events_receiver = receiver;\n   }\n\n   /** @summary Generate pad events, normally handled by GED\n     * @desc in pad painter, while pad may be drawn without canvas\n     * @private */\n   producePadEvent(_what, _padpainter, _painter, _position, _place) {\n      if ((_what == \"select\") && (typeof this.selectActivePad == 'function'))\n         this.selectActivePad(_padpainter, _painter, _position);\n\n      if (this.pad_events_receiver)\n         this.pad_events_receiver({ what: _what, padpainter:  _padpainter, painter: _painter, position: _position, place: _place });\n   }\n\n   /** @summary method redirect call to pad events receiver */\n   selectObjectPainter(_painter, pos, _place) {\n\n      let istoppad = (this.iscan || !this.has_canvas),\n          canp = istoppad ? this : this.getCanvPainter();\n\n      if (_painter === undefined) _painter = this;\n\n      if (pos && !istoppad)\n         pos = getAbsPosInCanvas(this.svg_this_pad(), pos);\n\n      selectActivePad({ pp: this, active: true });\n\n      canp.producePadEvent(\"select\", this, _painter, pos, _place);\n   }\n\n   /** @summary Create SVG element for the canvas */\n   createCanvasSvg(check_resize, new_size) {\n\n      let factor = null, svg = null, lmt = 5, rect = null, btns, frect;\n\n      if (check_resize > 0) {\n\n         if (this._fixed_size) return (check_resize > 1); // flag used to force re-drawing of all subpads\n\n         svg = this.getCanvSvg();\n\n         if (svg.empty()) return false;\n\n         factor = svg.property('height_factor');\n\n         rect = this.testMainResize(check_resize, null, factor);\n\n         if (!rect.changed) return false;\n\n         if (!isBatchMode())\n            btns = this.getLayerSvg(\"btns_layer\", this.this_pad_name);\n\n         frect = svg.select(\".canvas_fillrect\");\n\n      } else {\n\n         let render_to = this.selectDom();\n\n         if (render_to.style('position') == 'static')\n            render_to.style('position', 'relative');\n\n         svg = render_to.append(\"svg\")\n             .attr(\"class\", \"jsroot root_canvas\")\n             .property('pad_painter', this) // this is custom property\n             .property('current_pad', \"\") // this is custom property\n             .property('redraw_by_resize', false); // could be enabled to force redraw by each resize\n\n         this.setTopPainter(); //assign canvas as top painter of that element\n\n         if (!isBatchMode() && !this.online_canvas)\n            svg.append(\"svg:title\").text(\"ROOT canvas\");\n\n         frect = svg.append(\"svg:path\").attr(\"class\",\"canvas_fillrect\");\n         if (!isBatchMode())\n            frect.style(\"pointer-events\", \"visibleFill\")\n                 .on(\"dblclick\", evnt => this.enlargePad(evnt))\n                 .on(\"click\", () => this.selectObjectPainter(this, null))\n                 .on(\"mouseenter\", () => this.showObjectStatus())\n                 .on(\"contextmenu\", settings.ContextMenu ? evnt => this.padContextMenu(evnt) : null);\n\n         svg.append(\"svg:g\").attr(\"class\", \"primitives_layer\");\n         svg.append(\"svg:g\").attr(\"class\", \"info_layer\");\n         if (!isBatchMode())\n            btns = svg.append(\"svg:g\")\n                      .attr(\"class\",\"btns_layer\")\n                      .property('leftside', settings.ToolBarSide == 'left')\n                      .property('vertical', settings.ToolBarVert);\n\n         factor = 0.66;\n         if (this.pad && this.pad.fWinSize[0] && this.pad.fWinSize[1]) {\n            factor = this.pad.fWinSize[1] / this.pad.fWinSize[0];\n            if ((factor < 0.1) || (factor > 10)) factor = 0.66;\n         }\n\n         if (this._fixed_size) {\n            render_to.style(\"overflow\",\"auto\");\n            rect = { width: this.pad.fWinSize[0], height: this.pad.fWinSize[1] };\n            if (!rect.width || !rect.height)\n               rect = getElementRect(render_to);\n         } else {\n            rect = this.testMainResize(2, new_size, factor);\n         }\n      }\n\n      this.createAttFill({ pattern: 1001, color: 0 });\n\n      if ((rect.width <= lmt) || (rect.height <= lmt)) {\n         svg.style(\"display\", \"none\");\n         console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);\n         rect.width = 200; rect.height = 100; // just to complete drawing\n      } else {\n         svg.style(\"display\", null);\n      }\n\n      if (this._fixed_size) {\n         svg.attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .attr(\"width\", rect.width)\n            .attr(\"height\", rect.height)\n            .style(\"position\", \"absolute\");\n      } else {\n        svg.attr(\"x\", 0)\n           .attr(\"y\", 0)\n           .style(\"width\", \"100%\")\n           .style(\"height\", \"100%\")\n           .style(\"position\", \"absolute\")\n           .style(\"left\", 0)\n           .style(\"top\", 0)\n           .style(\"right\", 0)\n           .style(\"bottom\", 0);\n      }\n\n      svg.style(\"filter\", settings.DarkMode ? \"invert(100%)\" : null);\n\n      svg.attr(\"viewBox\", `0 0 ${rect.width} ${rect.height}`)\n         .attr(\"preserveAspectRatio\", \"none\")  // we do not preserve relative ratio\n         .property('height_factor', factor)\n         .property('draw_x', 0)\n         .property('draw_y', 0)\n         .property('draw_width', rect.width)\n         .property('draw_height', rect.height);\n\n      this._pad_x = 0;\n      this._pad_y = 0;\n      this._pad_width = rect.width;\n      this._pad_height = rect.height;\n\n      frect.attr(\"d\", `M0,0H${rect.width}V${rect.height}H0Z`)\n           .call(this.fillatt.func);\n\n      this._fast_drawing = settings.SmallPad && ((rect.width < settings.SmallPad.width) || (rect.height < settings.SmallPad.height));\n\n      if (this.alignButtons && btns)\n         this.alignButtons(btns, rect.width, rect.height);\n\n      return true;\n   }\n\n   /** @summary Enlarge pad draw element when possible */\n   enlargePad(evnt) {\n\n      if (evnt) {\n         evnt.preventDefault();\n         evnt.stopPropagation();\n      }\n\n      let svg_can = this.getCanvSvg(),\n          pad_enlarged = svg_can.property(\"pad_enlarged\");\n\n      if (this.iscan || !this.has_canvas || (!pad_enlarged && !this.hasObjectsToDraw() && !this.painters)) {\n         if (this._fixed_size) return; // canvas cannot be enlarged in such mode\n         if (!this.enlargeMain('toggle')) return;\n         if (this.enlargeMain('state')=='off') svg_can.property(\"pad_enlarged\", null);\n      } else if (!pad_enlarged) {\n         this.enlargeMain(true, true);\n         svg_can.property(\"pad_enlarged\", this.pad);\n      } else if (pad_enlarged === this.pad) {\n         this.enlargeMain(false);\n         svg_can.property(\"pad_enlarged\", null);\n      } else {\n         console.error('missmatch with pad double click events');\n      }\n\n      let was_fast = this._fast_drawing;\n\n      this.checkResize(true);\n\n      if (this._fast_drawing != was_fast)\n         this.showPadButtons();\n   }\n\n   /** @summary Create SVG element for the pad\n     * @returns true when pad is displayed and all its items should be redrawn */\n   createPadSvg(only_resize) {\n\n      if (!this.has_canvas) {\n         this.createCanvasSvg(only_resize ? 2 : 0);\n         return true;\n      }\n\n      let svg_parent = this.getPadSvg(this.pad_name), // this.pad_name MUST be here to select parent pad\n          svg_can = this.getCanvSvg(),\n          width = svg_parent.property(\"draw_width\"),\n          height = svg_parent.property(\"draw_height\"),\n          pad_enlarged = svg_can.property(\"pad_enlarged\"),\n          pad_visible = true,\n          w = width, h = height, x = 0, y = 0,\n          svg_pad = null, svg_rect = null, btns = null;\n\n      if (this.pad && this.pad.fPos && this.pad.fSize) {\n         x = Math.round(width * this.pad.fPos.fHoriz.fArr[0]);\n         y = Math.round(height * this.pad.fPos.fVert.fArr[0]);\n         w = Math.round(width * this.pad.fSize.fHoriz.fArr[0]);\n         h = Math.round(height * this.pad.fSize.fVert.fArr[0]);\n      }\n\n      if (pad_enlarged) {\n         pad_visible = false;\n         if (pad_enlarged === this.pad)\n            pad_visible = true;\n         else\n            this.forEachPainterInPad(pp => { if (pp.getObject() == pad_enlarged) pad_visible = true; }, \"pads\");\n\n         if (pad_visible) { w = width; h = height; x = y = 0; }\n      }\n\n      if (only_resize) {\n         svg_pad = this.svg_this_pad();\n         svg_rect = svg_pad.select(\".root_pad_border\");\n         if (!isBatchMode())\n            btns = this.getLayerSvg(\"btns_layer\", this.this_pad_name);\n      } else {\n         svg_pad = svg_parent.select(\".primitives_layer\")\n             .append(\"svg:svg\") // here was g before, svg used to blend all drawin outside\n             .classed(\"__root_pad_\" + this.this_pad_name, true)\n             .attr(\"pad\", this.this_pad_name) // set extra attribute  to mark pad name\n             .property('pad_painter', this); // this is custom property\n\n         if (!isBatchMode())\n            svg_pad.append(\"svg:title\").text(\"ROOT subpad\");\n\n         svg_rect = svg_pad.append(\"svg:path\").attr(\"class\", \"root_pad_border\");\n\n         svg_pad.append(\"svg:g\").attr(\"class\",\"primitives_layer\");\n         if (!isBatchMode())\n            btns = svg_pad.append(\"svg:g\")\n                          .attr(\"class\",\"btns_layer\")\n                          .property('leftside', settings.ToolBarSide != 'left')\n                          .property('vertical', settings.ToolBarVert);\n\n         if (settings.ContextMenu)\n            svg_rect.on(\"contextmenu\", evnt => this.padContextMenu(evnt));\n\n         if (!isBatchMode())\n            svg_rect.style(\"pointer-events\", \"visibleFill\") // get events also for not visible rect\n                    .on(\"dblclick\", evnt => this.enlargePad(evnt))\n                    .on(\"click\", () => this.selectObjectPainter(this, null))\n                    .on(\"mouseenter\", () => this.showObjectStatus());\n      }\n\n      this.createAttFill({ attr: this.pad });\n\n      this.createAttLine({ attr: this.pad, color0: this.pad.fBorderMode == 0 ? 'none' : '' });\n\n      svg_pad.style(\"display\", pad_visible ? null : \"none\")\n             .attr(\"viewBox\", `0 0 ${w} ${h}`) // due to svg\n             .attr(\"preserveAspectRatio\", \"none\")   // due to svg, we do not preserve relative ratio\n             .attr(\"x\", x)    // due to svg\n             .attr(\"y\", y)   // due to svg\n             .attr(\"width\", w)    // due to svg\n             .attr(\"height\", h)   // due to svg\n             .property('draw_x', x) // this is to make similar with canvas\n             .property('draw_y', y)\n             .property('draw_width', w)\n             .property('draw_height', h);\n\n      this._pad_x = x;\n      this._pad_y = y;\n      this._pad_width = w;\n      this._pad_height = h;\n\n      svg_rect.attr(\"d\", `M0,0H${w}V${h}H0Z`)\n              .call(this.fillatt.func)\n              .call(this.lineatt.func);\n\n      this._fast_drawing = settings.SmallPad && ((w < settings.SmallPad.width) || (h < settings.SmallPad.height));\n\n       // special case of 3D canvas overlay\n      if (svg_pad.property('can3d') === constants.Embed3D.Overlay)\n          this.selectDom().select(\".draw3d_\" + this.this_pad_name)\n              .style('display', pad_visible ? '' : 'none');\n\n      if (this.alignButtons && btns) this.alignButtons(btns, w, h);\n\n      return pad_visible;\n   }\n\n   /** @summary returns true if any objects beside sub-pads exists in the pad */\n   hasObjectsToDraw() {\n      let arr = this.pad ? this.pad.fPrimitives : null;\n      return arr && arr.find(obj => obj._typename != \"ROOT::Experimental::RPadDisplayItem\") ? true : false;\n   }\n\n   /** @summary sync drawing/redrawing/resize of the pad\n     * @param {string} kind - kind of draw operation, if true - always queued\n     * @returns {Promise} when pad is ready for draw operation or false if operation already queued\n     * @private */\n   syncDraw(kind) {\n      let entry = { kind : kind || \"redraw\" };\n      if (this._doing_draw === undefined) {\n         this._doing_draw = [ entry ];\n         return Promise.resolve(true);\n      }\n      // if queued operation registered, ignore next calls, indx == 0 is running operation\n      if ((entry.kind !== true) && (this._doing_draw.findIndex((e,i) => (i > 0) && (e.kind == entry.kind)) > 0))\n         return false;\n      this._doing_draw.push(entry);\n      return new Promise(resolveFunc => {\n         entry.func = resolveFunc;\n      });\n   }\n\n   /** @summary confirms that drawing is completed, may trigger next drawing immediately\n     * @private */\n   confirmDraw() {\n      if (this._doing_draw === undefined)\n         return console.warn(\"failure, should not happen\");\n      this._doing_draw.shift();\n      if (this._doing_draw.length == 0) {\n         delete this._doing_draw;\n      } else {\n         let entry = this._doing_draw[0];\n         if(entry.func) { entry.func(); delete entry.func; }\n      }\n   }\n\n   /** @summary Draw single primitive */\n   drawObject(dom, obj, opt) {\n      console.log('Not possible to draw object without loading of draw.mjs');\n      return Promise.resolve(null);\n   }\n\n   /** @summary Draw pad primitives\n     * @private */\n   drawPrimitives(indx) {\n\n      if (indx === undefined) {\n         if (this.iscan)\n            this._start_tm = new Date().getTime();\n\n         // set number of primitves\n         this._num_primitives = this.pad && this.pad.fPrimitives ? this.pad.fPrimitives.length : 0;\n\n         return this.syncDraw(true).then(() => this.drawPrimitives(0));\n      }\n\n      if (!this.pad || (indx >= this._num_primitives)) {\n\n         this.confirmDraw();\n\n         if (this._start_tm) {\n            let spenttm = new Date().getTime() - this._start_tm;\n            if (spenttm > 3000) console.log(\"Canvas drawing took \" + (spenttm*1e-3).toFixed(2) + \"s\");\n            delete this._start_tm;\n         }\n\n         return Promise.resolve();\n      }\n\n      // handle used to invoke callback only when necessary\n      return this.drawObject(this.getDom(), this.pad.fPrimitives[indx], \"\").then(ppainter => {\n         // mark painter as belonging to primitives\n         if (ppainter && (typeof ppainter == 'object'))\n            ppainter._primitive = true;\n\n         return this.drawPrimitives(indx+1);\n      });\n   }\n\n   /** @summary Process tooltip event in the pad\n     * @private */\n   processPadTooltipEvent(pnt) {\n      let painters = [], hints = [];\n\n      // first count - how many processors are there\n      if (this.painters !== null)\n         this.painters.forEach(obj => {\n            if (typeof obj.processTooltipEvent == 'function') painters.push(obj);\n         });\n\n      if (pnt) pnt.nproc = painters.length;\n\n      painters.forEach(obj => {\n         let hint = obj.processTooltipEvent(pnt);\n         if (!hint) hint = { user_info: null };\n         hints.push(hint);\n         if (pnt && pnt.painters) hint.painter = obj;\n      });\n\n      return hints;\n   }\n\n   /** @summary Changes canvas dark mode\n     * @private */\n   changeDarkMode(mode) {\n      this.getCanvSvg().style(\"filter\", (mode ?? settings.DarkMode)  ? \"invert(100%)\" : null);\n   }\n\n   /** @summary Fill pad context menu\n     * @private */\n   fillContextMenu(menu) {\n\n      if (this.iscan)\n         menu.add(\"header: RCanvas\");\n      else\n         menu.add(\"header: RPad\");\n\n      menu.addchk(this.isTooltipAllowed(), \"Show tooltips\", () => this.setTooltipAllowed(\"toggle\"));\n\n      if (!this._websocket) {\n         menu.addAttributesMenu(this);\n         if (this.iscan)\n            menu.addSettingsMenu(false, false, arg => {\n               if (arg == \"dark\") this.changeDarkMode();\n            });\n      }\n\n      menu.add(\"separator\");\n\n      if (typeof this.hasMenuBar == 'function' && typeof this.actiavteMenuBar == 'function')\n         menu.addchk(this.hasMenuBar(), \"Menu bar\", flag => this.actiavteMenuBar(flag));\n\n      if (typeof this.hasEventStatus == 'function' && typeof this.activateStatusBar == 'function')\n         menu.addchk(this.hasEventStatus(), \"Event status\", () => this.activateStatusBar('toggle'));\n\n      if (this.enlargeMain() || (this.has_canvas && this.hasObjectsToDraw()))\n         menu.addchk((this.enlargeMain('state')=='on'), \"Enlarge \" + (this.iscan ? \"canvas\" : \"pad\"), () => this.enlargePad());\n\n      let fname = this.this_pad_name || (this.iscan ? \"canvas\" : \"pad\");\n      menu.add(`Save as ${fname}.png`, fname+\".png\", arg => this.saveAs(\"png\", false, arg));\n      menu.add(`Save as ${fname}.svg`, fname+\".svg\", arg => this.saveAs(\"svg\", false, arg));\n\n      return true;\n   }\n\n   /** @summary Show pad context menu\n     * @private */\n   padContextMenu(evnt) {\n      if (evnt.stopPropagation) {\n         let pos = d3_pointer(evnt, this.svg_this_pad().node());\n         // this is normal event processing and not emulated jsroot event\n         // for debug purposes keep original context menu for small region in top-left corner\n         if ((pos.length==2) && (pos[0] >= 0) && (pos[0] < 10) && (pos[1] >= 0) && (pos[1] < 10)) return;\n\n         evnt.stopPropagation(); // disable main context menu\n         evnt.preventDefault();  // disable browser context menu\n\n         this.getFramePainter()?.setLastEventPos();\n      }\n\n      createMenu(evnt, this).then(menu => {\n         this.fillContextMenu(menu);\n         return this.fillObjectExecMenu(menu);\n      }).then(menu => menu.show());\n   }\n\n   /** @summary Redraw pad means redraw ourself\n     * @returns {Promise} when redrawing ready */\n   redrawPad(reason) {\n\n      let sync_promise = this.syncDraw(reason);\n      if (sync_promise === false) {\n         console.log('Prevent RPad redrawing');\n         return Promise.resolve(false);\n      }\n\n      let showsubitems = true;\n      let redrawNext = indx => {\n         while (indx < this.painters.length) {\n            let sub = this.painters[indx++], res = 0;\n            if (showsubitems || sub.this_pad_name)\n               res = sub.redraw(reason);\n\n            if (isPromise(res))\n               return res.then(() => redrawNext(indx));\n         }\n         return Promise.resolve(true);\n      };\n\n      return sync_promise.then(() => {\n         if (this.iscan) {\n            this.createCanvasSvg(2);\n         } else {\n            showsubitems = this.createPadSvg(true);\n         }\n         return redrawNext(0);\n      }).then(() => {\n         if (getActivePad() === this)\n            this.getCanvPainter()?.producePadEvent(\"padredraw\", this);\n         this.confirmDraw();\n         return true;\n      });\n   }\n\n   /** @summary redraw pad */\n   redraw(reason) {\n      return this.redrawPad(reason);\n   }\n\n\n   /** @summary Checks if pad should be redrawn by resize\n     * @private */\n   needRedrawByResize() {\n      let elem = this.svg_this_pad();\n      if (!elem.empty() && elem.property('can3d') === constants.Embed3D.Overlay) return true;\n\n      for (let i = 0; i < this.painters.length; ++i)\n         if (typeof this.painters[i].needRedrawByResize === 'function')\n            if (this.painters[i].needRedrawByResize()) return true;\n\n      return false;\n   }\n\n   /** @summary Check resize of canvas */\n   checkCanvasResize(size, force) {\n\n      if (!this.iscan && this.has_canvas) return false;\n\n      let sync_promise = this.syncDraw(\"canvas_resize\");\n      if (sync_promise === false) return false;\n\n      if ((size === true) || (size === false)) { force = size; size = null; }\n\n      if (size && (typeof size === 'object') && size.force) force = true;\n\n      if (!force) force = this.needRedrawByResize();\n\n      let changed = false,\n          redrawNext = indx => {\n             if (!changed || (indx >= this.painters.length)) {\n                this.confirmDraw();\n                return changed;\n             }\n\n             let res = this.painters[indx].redraw(force ? \"redraw\" : \"resize\");\n             if (!isPromise(res)) res = Promise.resolve();\n             return res.then(() => redrawNext(indx+1));\n          };\n\n      return sync_promise.then(() => {\n\n         changed = this.createCanvasSvg(force ? 2 : 1, size);\n\n         // if canvas changed, redraw all its subitems.\n         // If redrawing was forced for canvas, same applied for sub-elements\n         return redrawNext(0);\n      });\n   }\n\n   /** @summary update RPad object\n     * @private */\n   updateObject(obj) {\n      if (!obj) return false;\n\n      this.pad.fStyle = obj.fStyle;\n      this.pad.fAttr = obj.fAttr;\n\n      if (this.iscan) {\n         this.pad.fTitle = obj.fTitle;\n         this.pad.fWinSize = obj.fWinSize;\n      } else {\n         this.pad.fPos = obj.fPos;\n         this.pad.fSize = obj.fSize;\n      }\n\n      return true;\n   }\n\n\n   /** @summary Add object painter to list of primitives\n     * @private */\n   addObjectPainter(objpainter, lst, indx) {\n      if (objpainter && lst && lst[indx] && (objpainter.snapid === undefined)) {\n         // keep snap id in painter, will be used for the\n         if (this.painters.indexOf(objpainter) < 0)\n            this.painters.push(objpainter);\n         objpainter.assignSnapId(lst[indx].fObjectID);\n         if (!objpainter.rstyle) objpainter.rstyle = lst[indx].fStyle || this.rstyle;\n      }\n   }\n\n   /** @summary Extract properties from TObjectDisplayItem */\n   extractTObjectProp(snap) {\n      if (snap.fColIndex && snap.fColValue) {\n         let colors = this.root_colors || getRootColors();\n         for (let k = 0; k < snap.fColIndex.length; ++k)\n            colors[snap.fColIndex[k]] = snap.fColValue[k];\n       }\n\n      // painter used only for evaluation of attributes\n      let pattr = new RObjectPainter(), obj = snap.fObject;\n      pattr.assignObject(snap);\n      pattr.csstype = snap.fCssType;\n      pattr.rstyle = snap.fStyle;\n\n      snap.fOption = pattr.v7EvalAttr(\"options\", \"\");\n\n      const extract_color = (member_name, attr_name) => {\n         let col = pattr.v7EvalColor(attr_name, \"\");\n         if (col) obj[member_name] = addColor(col, this.root_colors);\n      };\n\n      // handle TAttLine\n      if ((obj.fLineColor !== undefined) && (obj.fLineWidth !== undefined) && (obj.fLineStyle !== undefined)) {\n         extract_color(\"fLineColor\", \"line_color\");\n         obj.fLineWidth = pattr.v7EvalAttr(\"line_width\", obj.fLineWidth);\n         obj.fLineStyle = pattr.v7EvalAttr(\"line_style\", obj.fLineStyle);\n      }\n\n      // handle TAttFill\n      if ((obj.fFillColor !== undefined) && (obj.fFillStyle !== undefined)) {\n         extract_color(\"fFillColor\", \"fill_color\");\n         obj.fFillStyle = pattr.v7EvalAttr(\"fill_style\", obj.fFillStyle);\n      }\n\n      // handle TAttMarker\n      if ((obj.fMarkerColor !== undefined) && (obj.fMarkerStyle !== undefined) && (obj.fMarkerSize !== undefined)) {\n         extract_color(\"fMarkerColor\", \"marker_color\");\n         obj.fMarkerStyle = pattr.v7EvalAttr(\"marker_style\", obj.fMarkerStyle);\n         obj.fMarkerSize = pattr.v7EvalAttr(\"marker_size\", obj.fMarkerSize);\n      }\n\n      // handle TAttText\n      if ((obj.fTextColor !== undefined) && (obj.fTextAlign !== undefined) && (obj.fTextAngle !== undefined) && (obj.fTextSize !== undefined)) {\n         extract_color(\"fTextColor\", \"text_color\");\n         obj.fTextAlign = pattr.v7EvalAttr(\"text_align\", obj.fTextAlign);\n         obj.fTextAngle = pattr.v7EvalAttr(\"text_angle\", obj.fTextAngle);\n         obj.fTextSize = pattr.v7EvalAttr(\"text_size\", obj.fTextSize);\n         // TODO: v7 font handling differs much from v6, ignore for the moment\n      }\n   }\n\n   /** @summary Function called when drawing next snapshot from the list\n     * @returns {Promise} with pad painter when ready\n     * @private */\n   drawNextSnap(lst, indx) {\n\n      if (indx === undefined) {\n         indx = -1;\n         // flag used to prevent immediate pad redraw during first draw\n         this._snaps_map = {}; // to control how much snaps are drawn\n         this._num_primitives = lst ? lst.length : 0;\n         this._auto_color_cnt = 0;\n      }\n\n      delete this.next_rstyle;\n\n      ++indx; // change to the next snap\n\n      if (!lst || indx >= lst.length) {\n         delete this._snaps_map;\n         delete this._auto_color_cnt;\n         return Promise.resolve(this);\n      }\n\n      let snap = lst[indx],\n          snapid = snap.fObjectID,\n          cnt = this._snaps_map[snapid],\n          objpainter = null;\n\n      if (cnt) cnt++; else cnt=1;\n      this._snaps_map[snapid] = cnt; // check how many objects with same snapid drawn, use them again\n\n      // empty object, no need to do something, take next\n      if (snap.fDummy) return this.drawNextSnap(lst, indx);\n\n      // first appropriate painter for the object\n      // if same object drawn twice, two painters will exists\n      for (let k = 0; k<this.painters.length; ++k) {\n         if (this.painters[k].snapid === snapid)\n            if (--cnt === 0) { objpainter = this.painters[k]; break;  }\n      }\n\n      if (objpainter) {\n\n         if (snap._typename == \"ROOT::Experimental::RPadDisplayItem\")  // subpad\n            return objpainter.redrawPadSnap(snap).then(ppainter => {\n               this.addObjectPainter(ppainter, lst, indx);\n               return this.drawNextSnap(lst, indx);\n            });\n\n         if (snap._typename === \"ROOT::Experimental::TObjectDisplayItem\")\n            this.extractTObjectProp(snap);\n\n         let promise;\n\n         if (objpainter.updateObject(snap.fDrawable || snap.fObject || snap, snap.fOption || \"\"))\n            promise = objpainter.redraw();\n\n         if (!isPromise(promise)) promise = Promise.resolve(true);\n\n         return promise.then(() => this.drawNextSnap(lst, indx)); // call next\n      }\n\n      if (snap._typename == \"ROOT::Experimental::RPadDisplayItem\") { // subpad\n\n         let subpad = snap; // not subpad, but just attributes\n\n         let padpainter = new RPadPainter(this.getDom(), subpad, false);\n         padpainter.decodeOptions(\"\");\n         padpainter.addToPadPrimitives(this.this_pad_name); // only set parent pad name\n         padpainter.assignSnapId(snap.fObjectID);\n         padpainter.rstyle = snap.fStyle;\n\n         padpainter.createPadSvg();\n\n         if (snap.fPrimitives && snap.fPrimitives.length > 0)\n            padpainter.addPadButtons();\n\n         // we select current pad, where all drawing is performed\n         let prev_name = padpainter.selectCurrentPad(padpainter.this_pad_name);\n\n         return padpainter.drawNextSnap(snap.fPrimitives).then(() => {\n            padpainter.selectCurrentPad(prev_name);\n            return this.drawNextSnap(lst, indx);\n         });\n      }\n\n      // will be used in addToPadPrimitives to assign style to sub-painters\n      this.next_rstyle = lst[indx].fStyle || this.rstyle;\n\n      if (snap._typename === \"ROOT::Experimental::TObjectDisplayItem\") {\n\n         // identifier used in RObjectDrawable\n         const webSnapIds = { kNone: 0,  kObject: 1, kColors: 4, kStyle: 5, kPalette: 6 };\n\n         if (snap.fKind == webSnapIds.kStyle) {\n            Object.assign(gStyle, snap.fObject);\n            return this.drawNextSnap(lst, indx);\n         }\n\n         if (snap.fKind == webSnapIds.kColors) {\n            let ListOfColors = [], arr = snap.fObject.arr;\n            for (let n = 0; n < arr.length; ++n) {\n               let name = arr[n].fString, p = name.indexOf(\"=\");\n               if (p > 0)\n                  ListOfColors[parseInt(name.slice(0,p))] = name.slice(p+1);\n            }\n\n            this.root_colors = ListOfColors;\n            // set global list of colors\n            // adoptRootColors(ListOfColors);\n            return this.drawNextSnap(lst, indx);\n         }\n\n         if (snap.fKind == webSnapIds.kPalette) {\n            let arr = snap.fObject.arr, palette = [];\n            for (let n = 0; n < arr.length; ++n)\n               palette[n] =  arr[n].fString;\n            this.custom_palette = new ColorPalette(palette);\n            return this.drawNextSnap(lst, indx);\n         }\n\n         if (!this.getFramePainter())\n            return this.drawObject(this.getDom(), { _typename: \"TFrame\", $dummy: true }, \"\")\n                       .then(() => this.drawNextSnap(lst, indx-1)); // call same object again\n\n         this.extractTObjectProp(snap);\n      }\n\n      // TODO - fDrawable is v7, fObject from v6, maybe use same data member?\n      return this.drawObject(this.getDom(), snap.fDrawable || snap.fObject || snap, snap.fOption || \"\").then(objpainter => {\n         this.addObjectPainter(objpainter, lst, indx);\n         return this.drawNextSnap(lst, indx);\n      });\n   }\n\n   /** @summary Search painter with specified snapid, also sub-pads are checked\n     * @private */\n   findSnap(snapid, onlyid) {\n\n      function check(checkid) {\n         if (!checkid || (typeof checkid != 'string')) return false;\n         if (checkid == snapid) return true;\n         return onlyid && (checkid.length > snapid.length) &&\n                (checkid.indexOf(snapid) == (checkid.length - snapid.length));\n      }\n\n      if (check(this.snapid)) return this;\n\n      if (!this.painters) return null;\n\n      for (let k=0;k<this.painters.length;++k) {\n         let sub = this.painters[k];\n\n         if (!onlyid && (typeof sub.findSnap === 'function'))\n            sub = sub.findSnap(snapid);\n         else if (!check(sub.snapid))\n            sub = null;\n\n         if (sub) return sub;\n      }\n\n      return null;\n   }\n\n   /** @summary Redraw pad snap\n     * @desc Online version of drawing pad primitives\n     * @returns {Promise} with pad painter*/\n   redrawPadSnap(snap) {\n      // for the pad/canvas display item contains list of primitives plus pad attributes\n\n      if (!snap || !snap.fPrimitives)\n         return Promise.resolve(this);\n\n      // for the moment only window size attributes are provided\n      // let padattr = { fCw: snap.fWinSize[0], fCh: snap.fWinSize[1], fTitle: snap.fTitle };\n\n      // if canvas size not specified in batch mode, temporary use 900x700 size\n      // if (this.batch_mode && this.iscan && (!padattr.fCw || !padattr.fCh)) { padattr.fCw = 900; padattr.fCh = 700; }\n\n      if (this.iscan && this._websocket && snap.fTitle && !this.embed_canvas && (typeof document !== \"undefined\"))\n         document.title = snap.fTitle;\n\n      if (this.snapid === undefined) {\n         // first time getting snap, create all gui elements first\n\n         this.assignSnapId(snap.fObjectID);\n\n         this.draw_object = snap;\n         this.pad = snap;\n\n         if (this.batch_mode && this.iscan)\n             this._fixed_size = true;\n\n         let mainid = this.selectDom().attr(\"id\");\n\n         if (!this.batch_mode && !this.use_openui && !this.brlayout && mainid && (typeof mainid == \"string\")) {\n            this.brlayout = new BrowserLayout(mainid, null, this);\n            this.brlayout.create(mainid, true);\n            this.setDom(this.brlayout.drawing_divid()); // need to create canvas\n            registerForResize(this.brlayout);\n         }\n\n         this.createCanvasSvg(0);\n         this.addPadButtons(true);\n\n         return this.drawNextSnap(snap.fPrimitives);\n      }\n\n      // update only pad/canvas attributes\n      this.updateObject(snap);\n\n      // apply all changes in the object (pad or canvas)\n      if (this.iscan) {\n         this.createCanvasSvg(2);\n      } else {\n         this.createPadSvg(true);\n      }\n\n      let isanyfound = false, isanyremove = false;\n\n      // find and remove painters which no longer exists in the list\n      for (let k = 0;k < this.painters.length; ++k) {\n         let sub = this.painters[k];\n         if (sub.snapid===undefined) continue; // look only for painters with snapid\n\n         snap.fPrimitives.forEach(prim => {\n            if (sub && (prim.fObjectID === sub.snapid)) {\n               sub = null; isanyfound = true;\n            }\n         });\n\n         if (sub) {\n            // remove painter which does not found in the list of snaps\n            this.painters.splice(k--,1);\n            sub.cleanup(); // cleanup such painter\n            isanyremove = true;\n            if (this.main_painter_ref === sub)\n               delete this.main_painter_ref;\n         }\n      }\n\n      if (isanyremove)\n         delete this.pads_cache;\n\n      if (!isanyfound) {\n         let fp = this.getFramePainter();\n         // cannot preserve ROOT6 frame - it must be recreated\n         if (fp?.is_root6()) fp = null;\n         for (let k = 0; k < this.painters.length; ++k)\n             if (fp !== this.painters[k])\n               this.painters[k].cleanup();\n         this.painters = [];\n         delete this.main_painter_ref;\n         if (fp) {\n            this.painters.push(fp);\n            fp.cleanFrameDrawings();\n            fp.redraw(); // need to create all layers again\n         }\n         if (this.removePadButtons) this.removePadButtons();\n         this.addPadButtons(true);\n      }\n\n      let prev_name = this.selectCurrentPad(this.this_pad_name);\n\n      return this.drawNextSnap(snap.fPrimitives).then(() => {\n         this.selectCurrentPad(prev_name);\n\n         if (getActivePad() === this)\n            this.getCanvPainter()?.producePadEvent(\"padredraw\", this);\n         return this;\n      });\n   }\n\n   /** @summary Create image for the pad\n     * @desc Used with web-based canvas to create images for server side\n     * @returns {Promise} with image data, coded with btoa() function\n     * @private */\n   createImage(format) {\n      // use https://github.com/MrRio/jsPDF in the future here\n      if (format == \"pdf\")\n         return Promise.resolve(btoa_func(\"dummy PDF file\"));\n\n      if ((format == \"png\") || (format == \"jpeg\") || (format == \"svg\"))\n         return this.produceImage(true, format).then(res => {\n            if (!res || (format == \"svg\")) return res;\n            let separ = res.indexOf(\"base64,\");\n            return (separ > 0) ? res.slice(separ+7) : \"\";\n         });\n\n      return Promise.resolve(\"\");\n   }\n\n   /** @summary Show context menu for specified item\n     * @private */\n   itemContextMenu(name) {\n       let rrr = this.svg_this_pad().node().getBoundingClientRect(),\n           evnt = { clientX: rrr.left+10, clientY: rrr.top + 10 };\n\n       // use timeout to avoid conflict with mouse click and automatic menu close\n       if (name == \"pad\")\n          return setTimeout(() => this.padContextMenu(evnt), 50);\n\n       let selp = null, selkind;\n\n       switch(name) {\n          case \"xaxis\":\n          case \"yaxis\":\n          case \"zaxis\":\n             selp = this.getMainPainter();\n             selkind = name[0];\n             break;\n          case \"frame\":\n             selp = this.getFramePainter();\n             break;\n          default: {\n             let indx = parseInt(name);\n             if (Number.isInteger(indx)) selp = this.painters[indx];\n          }\n       }\n\n       if (typeof selp?.fillContextMenu !== 'function') return;\n\n       createMenu(evnt, selp).then(menu => {\n          if (selp.fillContextMenu(menu, selkind))\n             setTimeout(() => menu.show(), 50);\n       });\n   }\n\n   /** @summary Save pad in specified format\n     * @desc Used from context menu */\n   saveAs(kind, full_canvas, filename) {\n      if (!filename)\n         filename = (this.this_pad_name || (this.iscan ? \"canvas\" : \"pad\")) + \".\" + kind;\n\n      this.produceImage(full_canvas, kind).then(imgdata => {\n         if (!imgdata)\n            return console.error(`Fail to produce image ${filename}`);\n\n         saveFile(filename, (kind != \"svg\") ? imgdata : \"data:image/svg+xml;charset=utf-8,\"+encodeURIComponent(imgdata));\n      });\n   }\n\n   /** @summary Prodce image for the pad\n     * @returns {Promise} with created image */\n   produceImage(full_canvas, file_format) {\n\n      let use_frame = (full_canvas === \"frame\"),\n          elem = use_frame ? this.getFrameSvg(this.this_pad_name) : (full_canvas ? this.getCanvSvg() : this.svg_this_pad()),\n          painter = (full_canvas && !use_frame) ? this.getCanvPainter() : this,\n          items = []; // keep list of replaced elements, which should be moved back at the end\n\n      if (elem.empty())\n         return Promise.resolve(\"\");\n\n      if (!use_frame) // do not make transformations for the frame\n      painter.forEachPainterInPad(pp => {\n\n         let item = { prnt: pp.svg_this_pad() };\n         items.push(item);\n\n         // remove buttons from each subpad\n         let btns = pp.getLayerSvg(\"btns_layer\", this.this_pad_name);\n         item.btns_node = btns.node();\n         if (item.btns_node) {\n            item.btns_prnt = item.btns_node.parentNode;\n            item.btns_next = item.btns_node.nextSibling;\n            btns.remove();\n         }\n\n         let main = pp.getFramePainter();\n         if (!main || (typeof main.render3D !== 'function') || (typeof main.access3dKind != 'function')) return;\n\n         let can3d = main.access3dKind();\n\n         if ((can3d !== constants.Embed3D.Overlay) && (can3d !== constants.Embed3D.Embed)) return;\n\n         let sz2 = main.getSizeFor3d(constants.Embed3D.Embed), // get size and position of DOM element as it will be embed\n             canvas = main.renderer.domElement;\n\n         main.render3D(0); // WebGL clears buffers, therefore we should render scene and convert immediately\n\n         let dataUrl = canvas.toDataURL(\"image/png\");\n\n         // remove 3D drawings\n\n         if (can3d === constants.Embed3D.Embed) {\n            item.foreign = item.prnt.select(\".\" + sz2.clname);\n            item.foreign.remove();\n         }\n\n         let svg_frame = main.getFrameSvg();\n         item.frame_node = svg_frame.node();\n         if (item.frame_node) {\n            item.frame_next = item.frame_node.nextSibling;\n            svg_frame.remove();\n         }\n\n         // add svg image\n         item.img = item.prnt.insert(\"image\",\".primitives_layer\")     // create image object\n                        .attr(\"x\", sz2.x)\n                        .attr(\"y\", sz2.y)\n                        .attr(\"width\", canvas.width)\n                        .attr(\"height\", canvas.height)\n                        .attr(\"href\", dataUrl);\n\n      }, \"pads\");\n\n      const reEncode = data => {\n         data = encodeURIComponent(data);\n         data = data.replace(/%([0-9A-F]{2})/g, function(match, p1) {\n           let c = String.fromCharCode('0x'+p1);\n           return c === '%' ? '%25' : c;\n         });\n         return decodeURIComponent(data);\n      }, reconstruct = () => {\n         for (let k = 0; k < items.length; ++k) {\n            let item = items[k];\n\n            if (item.img)\n               item.img.remove(); // delete embed image\n\n            let prim = item.prnt.select(\".primitives_layer\");\n\n            if (item.foreign) // reinsert foreign object\n               item.prnt.node().insertBefore(item.foreign.node(), prim.node());\n\n            if (item.frame_node) // reinsert frame as first in list of primitives\n               prim.node().insertBefore(item.frame_node, item.frame_next);\n\n            if (item.btns_node) // reinsert buttons\n               item.btns_prnt.insertBefore(item.btns_node, item.btns_next);\n         }\n      };\n\n      let width = elem.property('draw_width'), height = elem.property('draw_height');\n      if (use_frame) {\n         let fp = this.getFramePainter();\n         width = fp.getFrameWidth();\n         height = fp.getFrameHeight();\n      }\n\n      let svg = `<svg width=\"${width}\" height=\"${height}\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">${elem.node().innerHTML}</svg>`;\n\n      if (internals.processSvgWorkarounds)\n         svg = internals.processSvgWorkarounds(svg);\n\n      svg = compressSVG(svg);\n\n      if (file_format == \"svg\") {\n         reconstruct();\n         return Promise.resolve(svg); // return SVG file as is\n      }\n\n      let doctype = '<?xml version=\"1.0\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">',\n          image = new Image();\n\n      return new Promise(resolveFunc => {\n         image.onload = function() {\n            let canvas = document.createElement('canvas');\n            canvas.width = image.width;\n            canvas.height = image.height;\n            let context = canvas.getContext('2d');\n            context.drawImage(image, 0, 0);\n\n            reconstruct();\n\n            resolveFunc(canvas.toDataURL('image/' + file_format));\n         }\n\n         image.onerror = function(arg) {\n            console.log('IMAGE ERROR', arg);\n            reconstruct();\n            resolveFunc(null);\n         }\n\n         image.src = 'data:image/svg+xml;base64,' + btoa_func(reEncode(doctype + svg));\n      });\n   }\n\n   /** @summary Process pad button click */\n   clickPadButton(funcname, evnt) {\n\n      if (funcname == \"CanvasSnapShot\")\n         return this.saveAs(\"png\", true);\n\n      if (funcname == \"enlargePad\")\n         return this.enlargePad();\n\n      if (funcname == \"PadSnapShot\")\n         return this.saveAs(\"png\", false);\n\n      if (funcname == \"PadContextMenus\") {\n\n         if (evnt) {\n            evnt.preventDefault();\n            evnt.stopPropagation();\n         }\n\n         if (closeMenu()) return;\n\n         createMenu(evnt, this).then(menu => {\n            menu.add(\"header:Menus\");\n\n            if (this.iscan)\n               menu.add(\"Canvas\", \"pad\", this.itemContextMenu);\n            else\n               menu.add(\"Pad\", \"pad\", this.itemContextMenu);\n\n            if (this.getFramePainter())\n               menu.add(\"Frame\", \"frame\", this.itemContextMenu);\n\n            let main = this.getMainPainter(); // here hist painter methods\n\n            if (main) {\n               menu.add(\"X axis\", \"xaxis\", this.itemContextMenu);\n               menu.add(\"Y axis\", \"yaxis\", this.itemContextMenu);\n               if ((typeof main.getDimension === 'function') && (main.getDimension() > 1))\n                  menu.add(\"Z axis\", \"zaxis\", this.itemContextMenu);\n            }\n\n            if (this.painters?.length) {\n               menu.add(\"separator\");\n               let shown = [];\n               for (let n = 0; n < this.painters.length; ++n) {\n                  let obj = this.painters[n]?.getObject();\n                  if (!obj || (shown.indexOf(obj) >= 0)) continue;\n\n                  let name = obj._typename ? obj._typename + \"::\" : \"\";\n                  if (obj.fName) name += obj.fName;\n                  if (!name) name = \"item\" + n;\n                  menu.add(name, n, this.itemContextMenu);\n               }\n            }\n\n            menu.show();\n         });\n\n         return;\n      }\n\n      // click automatically goes to all sub-pads\n      // if any painter indicates that processing completed, it returns true\n      let done = false;\n\n      for (let i = 0; i < this.painters.length; ++i) {\n         let pp = this.painters[i];\n\n         if (typeof pp.clickPadButton == 'function')\n            pp.clickPadButton(funcname);\n\n         if (!done && (typeof pp.clickButton == 'function'))\n            done = pp.clickButton(funcname);\n      }\n   }\n\n   /** @summary Add button to the pad\n     * @private */\n   addPadButton(btn, tooltip, funcname, keyname) {\n      if (!settings.ToolBar || isBatchMode() || this.batch_mode) return;\n\n      if (!this._buttons) this._buttons = [];\n      // check if there are duplications\n\n      for (let k = 0; k < this._buttons.length; ++k)\n         if (this._buttons[k].funcname == funcname) return;\n\n      this._buttons.push({ btn, tooltip, funcname, keyname });\n\n      let iscan = this.iscan || !this.has_canvas;\n      if (!iscan && (funcname.indexOf(\"Pad\") != 0) && (funcname !== \"enlargePad\")) {\n         let cp = this.getCanvPainter();\n         if (cp && (cp !== this)) cp.addPadButton(btn, tooltip, funcname);\n      }\n   }\n\n   /** @summary Add buttons for pad or canvas\n     * @private */\n   addPadButtons(is_online) {\n\n      this.addPadButton(\"camera\", \"Create PNG\", this.iscan ? \"CanvasSnapShot\" : \"PadSnapShot\", \"Ctrl PrintScreen\");\n\n      if (settings.ContextMenu)\n         this.addPadButton(\"question\", \"Access context menus\", \"PadContextMenus\");\n\n      let add_enlarge = !this.iscan && this.has_canvas && this.hasObjectsToDraw()\n\n      if (add_enlarge || this.enlargeMain('verify'))\n         this.addPadButton(\"circle\", \"Enlarge canvas\", \"enlargePad\");\n\n      if (is_online && this.brlayout) {\n         this.addPadButton(\"diamand\", \"Toggle Ged\", \"ToggleGed\");\n         this.addPadButton(\"three_circles\", \"Toggle Status\", \"ToggleStatus\");\n      }\n\n   }\n\n   /** @summary Show pad buttons\n     * @private */\n   showPadButtons() {\n      if (!this._buttons) return;\n\n      PadButtonsHandler.assign(this);\n      this.showPadButtons();\n   }\n\n   /** @summary Calculates RPadLength value */\n   getPadLength(vertical, len, frame_painter) {\n      let sign = vertical ? -1 : 1,\n          rect, res,\n          getV = (indx, dflt) => (indx < len.fArr.length) ? len.fArr[indx] : dflt,\n          getRect = () => {\n             if (!rect)\n                rect = frame_painter ? frame_painter.getFrameRect() : this.getPadRect();\n             return rect;\n          };\n\n      if (frame_painter) {\n         let user = getV(2), func = vertical ? \"gry\" : \"grx\";\n         if ((user !== undefined) && frame_painter[func])\n            res = frame_painter[func](user);\n      }\n\n      if (res === undefined)\n         res = vertical ? getRect().height : 0;\n\n      let norm = getV(0, 0), pixel = getV(1, 0);\n\n      res += sign*pixel;\n\n      if (norm)\n         res += sign * (vertical ? getRect().height : getRect().width) * norm;\n\n      return Math.round(res);\n   }\n\n\n   /** @summary Calculates pad position for RPadPos values\n     * @param {object} pos - instance of RPadPos\n     * @param {object} frame_painter - if drawing will be performed inside frame, frame painter */\n   getCoordinate(pos, frame_painter) {\n      return {\n         x: this.getPadLength(false, pos.fHoriz, frame_painter),\n         y: this.getPadLength(true, pos.fVert, frame_painter)\n      }\n   }\n\n   /** @summary Decode pad draw options */\n   decodeOptions(opt) {\n      let pad = this.getObject();\n      if (!pad) return;\n\n      let d = new DrawOptions(opt);\n\n      if (!this.options) this.options = {};\n\n      Object.assign(this.options, { GlobalColors: true, LocalColors: false, IgnorePalette: false, RotateFrame: false, FixFrame: false });\n\n      if (d.check('NOCOLORS') || d.check('NOCOL')) this.options.GlobalColors = this.options.LocalColors = false;\n      if (d.check('LCOLORS') || d.check('LCOL')) { this.options.GlobalColors = false; this.options.LocalColors = true; }\n      if (d.check('NOPALETTE') || d.check('NOPAL')) this.options.IgnorePalette = true;\n      if (d.check('ROTATE')) this.options.RotateFrame = true;\n      if (d.check('FIXFRAME')) this.options.FixFrame = true;\n\n      if (d.check('WHITE')) pad.fFillColor = 0;\n      if (d.check('LOGX')) pad.fLogx = 1;\n      if (d.check('LOGY')) pad.fLogy = 1;\n      if (d.check('LOGZ')) pad.fLogz = 1;\n      if (d.check('LOG')) pad.fLogx = pad.fLogy = pad.fLogz = 1;\n      if (d.check('GRIDX')) pad.fGridx = 1;\n      if (d.check('GRIDY')) pad.fGridy = 1;\n      if (d.check('GRID')) pad.fGridx = pad.fGridy = 1;\n      if (d.check('TICKX')) pad.fTickx = 1;\n      if (d.check('TICKY')) pad.fTicky = 1;\n      if (d.check('TICK')) pad.fTickx = pad.fTicky = 1;\n   }\n\n   /** @summary draw RPad object */\n   static draw(dom, pad, opt) {\n      let painter = new RPadPainter(dom, pad, false);\n      painter.decodeOptions(opt);\n\n      if (painter.getCanvSvg().empty()) {\n         painter.has_canvas = false;\n         painter.this_pad_name = \"\";\n         painter.setTopPainter();\n      } else {\n         painter.addToPadPrimitives(painter.pad_name); // must be here due to pad painter\n      }\n\n      painter.createPadSvg();\n\n      if (painter.matchObjectType(\"TPad\") && (!painter.has_canvas || painter.hasObjectsToDraw())) {\n         painter.addPadButtons();\n      }\n\n      // we select current pad, where all drawing is performed\n      let prev_name = painter.has_canvas ? painter.selectCurrentPad(painter.this_pad_name) : undefined;\n\n      selectActivePad({ pp: painter, active: false });\n\n      // flag used to prevent immediate pad redraw during first draw\n      return painter.drawPrimitives().then(() => {\n         painter.showPadButtons();\n         // we restore previous pad name\n         painter.selectCurrentPad(prev_name);\n         return painter;\n      });\n   }\n\n} // class RPadPainter\n\nexport { RPadPainter };\n","/// Connections handling to RWebWindow\n\nimport { httpRequest, createHttpRequest, loadScript, decodeUrl, browser, setBatchMode, isBatchMode, btoa_func } from './core.mjs';\n\nimport { closeCurrentWindow, showProgress, loadOpenui5 } from './gui/utils.mjs';\n\n/**\n * @summary Class emulating web socket with long-poll http requests\n *\n * @private\n */\n\nclass LongPollSocket {\n\n   constructor(addr, _raw, _args) {\n      this.path = addr;\n      this.connid = null;\n      this.req = null;\n      this.raw = _raw;\n      this.args = _args;\n\n      this.nextRequest(\"\", \"connect\");\n   }\n\n   /** @summary Submit next request */\n   nextRequest(data, kind) {\n      let url = this.path, reqmode = \"buf\", post = null;\n      if (kind === \"connect\") {\n         url += this.raw ? \"?raw_connect\" : \"?txt_connect\";\n         if (this.args) url += \"&\" + this.args;\n         console.log('longpoll connect ' + url + ' raw = ' + this.raw);\n         this.connid = \"connect\";\n      } else if (kind === \"close\") {\n         if ((this.connid === null) || (this.connid === \"close\")) return;\n         url += \"?connection=\" + this.connid + \"&close\";\n         this.connid = \"close\";\n         reqmode = \"text;sync\"; // use sync mode to close connection before browser window closed\n      } else if ((this.connid === null) || (typeof this.connid !== 'number')) {\n         if (!browser.qt5) console.error(\"No connection\");\n         return;\n      } else {\n         url += \"?connection=\" + this.connid;\n         if (kind === \"dummy\") url += \"&dummy\";\n      }\n\n      if (data) {\n         if (this.raw) {\n            // special workaround to avoid POST request, use base64 coding\n            url += \"&post=\" + btoa_func(data);\n         } else {\n            // send data with post request - most efficient way\n            reqmode = \"postbuf\";\n            post = data;\n         }\n      }\n\n      createHttpRequest(url, reqmode, function(res) {\n         // this set to the request itself, res is response\n\n         if (this.handle.req === this)\n            this.handle.req = null; // get response for existing dummy request\n\n         if (res === null)\n            return this.handle.processRequest(null);\n\n         if (this.handle.raw) {\n            // raw mode - all kind of reply data packed into binary buffer\n            // first 4 bytes header \"txt:\" or \"bin:\"\n            // after the \"bin:\" there is length of optional text argument like \"bin:14  :optional_text\"\n            // and immedaitely after text binary data. Server sends binary data so, that offset should be multiple of 8\n\n            let str = \"\", i = 0, u8Arr = new Uint8Array(res), offset = u8Arr.length;\n            if (offset < 4) {\n               if (!browser.qt5) console.error('longpoll got short message in raw mode ' + offset);\n               return this.handle.processRequest(null);\n            }\n\n            while (i < 4) str += String.fromCharCode(u8Arr[i++]);\n            if (str != \"txt:\") {\n               str = \"\";\n               while ((i < offset) && (String.fromCharCode(u8Arr[i]) != ':'))\n                  str += String.fromCharCode(u8Arr[i++]);\n               ++i;\n               offset = i + parseInt(str.trim());\n            }\n\n            str = \"\";\n            while (i < offset) str += String.fromCharCode(u8Arr[i++]);\n\n            if (str) {\n               if (str == \"<<nope>>\")\n                  this.handle.processRequest(-1111);\n               else\n                   this.handle.processRequest(str);\n            }\n            if (offset < u8Arr.length)\n               this.handle.processRequest(res, offset);\n         } else if (this.getResponseHeader(\"Content-Type\") == \"application/x-binary\") {\n            // binary reply with optional header\n            let extra_hdr = this.getResponseHeader(\"LongpollHeader\");\n            if (extra_hdr) this.handle.processRequest(extra_hdr);\n            this.handle.processRequest(res, 0);\n         } else {\n            // text reply\n            if (res && typeof res !== \"string\") {\n               let str = \"\", u8Arr = new Uint8Array(res);\n               for (let i = 0; i < u8Arr.length; ++i)\n                  str += String.fromCharCode(u8Arr[i]);\n               res = str;\n            }\n            if (res == \"<<nope>>\")\n               this.handle.processRequest(-1111);\n            else\n               this.handle.processRequest(res);\n         }\n      }, function(/*err,status*/) {\n         // console.log(`Get request error ${err} status ${status}`);\n         this.handle.processRequest(null, \"error\");\n      }, true).then(req => {\n         req.handle = this;\n         if (!this.req)\n            this.req = req; // any request can be used for response, do not submit dummy until req is there\n         req.send(post);\n      });\n   }\n\n   /** @summary Process request */\n   processRequest(res, _offset) {\n      if (res === null) {\n         if (typeof this.onerror === 'function')\n            this.onerror(\"receive data with connid \" + (this.connid || \"---\"));\n         if ((_offset == \"error\") && (typeof this.onclose === 'function'))\n            this.onclose(\"force_close\");\n         this.connid = null;\n         return;\n      } else if (res === -1111) {\n         res = \"\";\n      }\n\n      let dummy_tmout = 5;\n\n      if (this.connid === \"connect\") {\n         if (!res) {\n            this.connid = null;\n            if (typeof this.onerror === 'function')\n               this.onerror(\"connection rejected\");\n            return;\n         }\n\n         this.connid = parseInt(res);\n         dummy_tmout = 100; // when establishing connection, wait a bit longer to submit dummy package\n         console.log('Get new longpoll connection with id ' + this.connid);\n         if (typeof this.onopen == 'function') this.onopen();\n      } else if (this.connid === \"close\") {\n         if (typeof this.onclose == 'function')\n            this.onclose();\n         return;\n      } else {\n         if ((typeof this.onmessage === 'function') && res)\n            this.onmessage({ data: res, offset: _offset });\n      }\n\n      // minimal timeout to reduce load, generate dummy only if client not submit new request immediately\n      if (!this.req)\n         setTimeout(() => { if (!this.req) this.nextRequest(\"\", \"dummy\"); }, dummy_tmout);\n   }\n\n   /** @summary Send data */\n   send(str) { this.nextRequest(str); }\n\n   /** @summary Close connection */\n   close() { this.nextRequest(\"\", \"close\"); }\n\n} // class LongPollSocket\n\n// ========================================================================================\n\n/**\n * @summary Class re-playing socket data from stored protocol\n *\n * @private\n */\n\nclass FileDumpSocket {\n\n   constructor(receiver) {\n      this.receiver = receiver;\n      this.protocol = [];\n      this.cnt = 0;\n      httpRequest(\"protocol.json\", \"text\").then(res => this.getProtocol(res));\n   }\n\n   /** @summary Get stored protocol */\n   getProtocol(res) {\n      if (!res) return;\n      this.protocol = JSON.parse(res);\n      if (typeof this.onopen == 'function') this.onopen();\n      this.nextOperation();\n   }\n\n   /** @summary Emulate send - just cound operation */\n   send(/* str */) {\n      if (this.protocol[this.cnt] == \"send\") {\n         this.cnt++;\n         setTimeout(() => this.nextOperation(), 10);\n      }\n   }\n\n   /** @summary Emulate close */\n   close() {}\n\n   /** @summary Read data for next operation */\n   nextOperation() {\n      // when file request running - just ignore\n      if (this.wait_for_file) return;\n      let fname = this.protocol[this.cnt];\n      if (!fname) return;\n      if (fname == \"send\") return; // waiting for send\n      // console.log(\"getting file\", fname, \"wait\", this.wait_for_file);\n      this.wait_for_file = true;\n      this.cnt++;\n      httpRequest(fname, (fname.indexOf(\".bin\") > 0 ? \"buf\" : \"text\")).then(res => {\n         this.wait_for_file = false;\n         if (!res) return;\n         if (this.receiver.provideData)\n            this.receiver.provideData(1, res, 0);\n         setTimeout(() => this.nextOperation(), 10);\n      });\n   }\n\n} // class FileDumpSocket\n\n\n/**\n * @summary Client communication handle for RWebWindow.\n *\n * @desc Should be created with {@link connectWebWindow} function\n */\n\nclass WebWindowHandle {\n\n   constructor(socket_kind, credits) {\n      this.kind = socket_kind;\n      this.state = 0;\n      this.credits = credits || 10;\n      this.cansend = this.credits;\n      this.ackn = this.credits;\n   }\n\n   /** @summary Returns arguments specified in the RWebWindow::SetUserArgs() method\n     * @desc Can be any valid JSON expression. Undefined by default.\n     * @param {string} [field] - if specified and user args is object, returns correspondent object member\n     * @returns user arguments object */\n   getUserArgs(field) {\n      if (field && (typeof field == 'string'))\n         return (this.user_args && (typeof this.user_args == 'object')) ? this.user_args[field] : undefined;\n\n      return this.user_args;\n   }\n\n   /** @summary Set user args\n     * @desc Normally set via RWebWindow::SetUserArgs() method */\n   setUserArgs(args) { this.user_args = args; }\n\n   /** @summary Set callbacks receiver.\n     * @param {object} obj - object with receiver functions\n     * @param {function} obj.onWebsocketMsg - called when new data receieved from RWebWindow\n     * @param {function} obj.onWebsocketOpened - called when connection established\n     * @param {function} obj.onWebsocketClosed - called when connection closed\n     * @param {function} obj.onWebsocketError - called when get error via the connection */\n   setReceiver(obj) { this.receiver = obj; }\n\n   /** @summary Cleanup and close connection. */\n   cleanup() {\n      delete this.receiver;\n      this.close(true);\n   }\n\n   /** @summary Invoke method in the receiver.\n    * @private */\n   invokeReceiver(brdcst, method, arg, arg2) {\n      if (this.receiver && (typeof this.receiver[method] == 'function'))\n         this.receiver[method](this, arg, arg2);\n\n      if (brdcst && this.channels) {\n         let ks = Object.keys(this.channels);\n         for (let n = 0; n < ks.length; ++n)\n            this.channels[ks[n]].invokeReceiver(false, method, arg, arg2);\n      }\n   }\n\n   /** @summary Provide data for receiver. When no queue - do it directly.\n    * @private */\n   provideData(chid, _msg, _len) {\n      if (this.wait_first_recv) {\n         console.log(\"FIRST MESSAGE\", chid, _msg);\n         delete this.wait_first_recv;\n         return this.invokeReceiver(false, \"onWebsocketOpened\");\n      }\n\n      if ((chid > 1) && this.channels) {\n         const channel = this.channels[chid];\n         if (channel)\n            return channel.provideData(1, _msg, _len);\n      }\n\n      const force_queue = _len && (_len < 0);\n\n      if (!force_queue && (!this.msgqueue || !this.msgqueue.length))\n         return this.invokeReceiver(false, \"onWebsocketMsg\", _msg, _len);\n\n      if (!this.msgqueue) this.msgqueue = [];\n      if (force_queue) _len = undefined;\n\n      this.msgqueue.push({ ready: true, msg: _msg, len: _len });\n   }\n\n   /** @summary Reserve entry in queue for data, which is not yet decoded.\n    * @private */\n   reserveQueueItem() {\n      if (!this.msgqueue) this.msgqueue = [];\n      let item = { ready: false, msg: null, len: 0 };\n      this.msgqueue.push(item);\n      return item;\n   }\n\n   /** @summary Provide data for item which was reserved before.\n    * @private */\n   markQueueItemDone(item, _msg, _len) {\n      item.ready = true;\n      item.msg = _msg;\n      item.len = _len;\n      this.processQueue();\n   }\n\n   /** @summary Process completed messages in the queue\n     * @private */\n   processQueue() {\n      if (this._loop_msgqueue || !this.msgqueue) return;\n      this._loop_msgqueue = true;\n      while ((this.msgqueue.length > 0) && this.msgqueue[0].ready) {\n         let front = this.msgqueue.shift();\n         this.invokeReceiver(false, \"onWebsocketMsg\", front.msg, front.len);\n      }\n      if (this.msgqueue.length == 0)\n         delete this.msgqueue;\n      delete this._loop_msgqueue;\n   }\n\n   /** @summary Close connection */\n   close(force) {\n      if (this.master) {\n         this.master.send(\"CLOSECH=\" + this.channelid, 0);\n         delete this.master.channels[this.channelid];\n         delete this.master;\n         return;\n      }\n\n      if (this.timerid) {\n         clearTimeout(this.timerid);\n         delete this.timerid;\n      }\n\n      if (this._websocket && (this.state > 0)) {\n         this.state = force ? -1 : 0; // -1 prevent socket from reopening\n         this._websocket.onclose = null; // hide normal handler\n         this._websocket.close();\n         delete this._websocket;\n      }\n   }\n\n   /** @summary Checks number of credits for send operation\n     * @param {number} [numsend = 1] - number of required send operations\n     * @returns true if one allow to send specified number of text message to server */\n   canSend(numsend) { return this.cansend >= (numsend || 1); }\n\n   /** @summary Returns number of possible send operations relative to number of credits */\n   getRelCanSend() { return !this.credits ? 1 : this.cansend / this.credits; }\n\n   /** @summary Send text message via the connection.\n     * @param {string} msg - text message to send\n     * @param {number} [chid] - channel id, 1 by default, 0 used only for internal communication */\n   send(msg, chid) {\n      if (this.master)\n         return this.master.send(msg, this.channelid);\n\n      if (!this._websocket || (this.state <= 0)) return false;\n\n      if (!Number.isInteger(chid)) chid = 1; // when not configured, channel 1 is used - main widget\n\n      if (this.cansend <= 0) console.error('should be queued before sending cansend: ' + this.cansend);\n\n      let prefix = this.ackn + \":\" + this.cansend + \":\" + chid + \":\";\n      this.ackn = 0;\n      this.cansend--; // decrease number of allowed send packets\n\n      this._websocket.send(prefix + msg);\n\n      if ((this.kind === \"websocket\") || (this.kind === \"longpoll\")) {\n         if (this.timerid) clearTimeout(this.timerid);\n         this.timerid = setTimeout(() => this.keepAlive(), 10000);\n      }\n\n      return true;\n   }\n\n   /** @summary Inject message(s) into input queue, for debug purposes only\n     * @private */\n   inject(msg, chid, immediate) {\n      // use timeout to avoid too deep call stack\n      if (!immediate)\n         return setTimeout(this.inject.bind(this, msg, chid, true), 0);\n\n      if (chid === undefined) chid = 1;\n\n      if (Array.isArray(msg)) {\n         for (let k = 0; k < msg.length; ++k)\n            this.provideData(chid, (typeof msg[k] == \"string\") ? msg[k] : JSON.stringify(msg[k]), -1);\n         this.processQueue();\n      } else if (msg) {\n         this.provideData(chid, typeof msg == \"string\" ? msg : JSON.stringify(msg));\n      }\n   }\n\n   /** @summary Send keep-alive message.\n     * @desc Only for internal use, only when used with websockets\n     * @private */\n   keepAlive() {\n      delete this.timerid;\n      this.send(\"KEEPALIVE\", 0);\n   }\n\n   /** @summary Method open channel, which will share same connection, but can be used independently from main\n     * @private */\n   createChannel() {\n      if (this.master)\n         return master.createChannel();\n\n      let channel = new WebWindowHandle(\"channel\", this.credits);\n      channel.wait_first_recv = true; // first received message via the channel is confirmation of established connection\n\n      if (!this.channels) {\n         this.channels = {};\n         this.freechannelid = 2;\n      }\n\n      channel.master = this;\n      channel.channelid = this.freechannelid++;\n\n      // register\n      this.channels[channel.channelid] = channel;\n\n      // now server-side entity should be initialized and init message send from server side!\n      return channel;\n   }\n\n   /** @summary Returns used channel ID, 1 by default */\n   getChannelId() { return this.channelid && this.master ? this.channelid : 1; }\n\n   /** @summary Assign href parameter\n     * @param {string} [path] - absolute path, when not specified window.location.url will be used\n     * @private */\n   setHRef(path) { this.href = path; }\n\n   /** @summary Return href part\n     * @param {string} [relative_path] - relative path to the handle\n     * @private */\n   getHRef(relative_path) {\n      if (!relative_path || !this.kind || !this.href) return this.href;\n\n      let addr = this.href;\n      if (relative_path.indexOf(\"../\")==0) {\n         let ddd = addr.lastIndexOf(\"/\",addr.length-2);\n         addr = addr.slice(0,ddd) + relative_path.slice(2);\n      } else {\n         addr += relative_path;\n      }\n\n      return addr;\n   }\n\n   /** @summary Create configured socket for current object.\n     * @private */\n   connect(href) {\n\n      this.close();\n      if (!href && this.href) href = this.href;\n\n      let ntry = 0, args = (this.key ? (\"key=\" + this.key) : \"\");\n      if (this.token) {\n         if (args) args += \"&\";\n         args += \"token=\" + this.token;\n      }\n\n      const retry_open = first_time => {\n\n         if (this.state != 0) return;\n\n         if (!first_time) console.log(\"try connect window again \" + new Date().toString());\n\n         if (this._websocket) {\n            this._websocket.close();\n            delete this._websocket;\n         }\n\n         if (!href) {\n            href = window.location.href;\n            if (href && href.indexOf(\"#\") > 0) href = href.slice(0, href.indexOf(\"#\"));\n            if (href && href.lastIndexOf(\"/\") > 0) href = href.slice(0, href.lastIndexOf(\"/\") + 1);\n         }\n         this.href = href;\n         ntry++;\n\n         if (first_time) console.log('Opening web socket at ' + href);\n\n         if (ntry > 2) showProgress(\"Trying to connect \" + href);\n\n         let path = href;\n\n         if (this.kind == \"file\") {\n            path += \"root.filedump\";\n            this._websocket = new FileDumpSocket(this);\n            console.log('configure protocol log ' + path);\n         } else if ((this.kind === 'websocket') && first_time) {\n            path = path.replace(\"http://\", \"ws://\").replace(\"https://\", \"wss://\") + \"root.websocket\";\n            if (args) path += \"?\" + args;\n            console.log('configure websocket ' + path);\n            this._websocket = new WebSocket(path);\n         } else {\n            path += \"root.longpoll\";\n            console.log('configure longpoll ' + path);\n            this._websocket = new LongPollSocket(path, (this.kind === 'rawlongpoll'), args);\n         }\n\n         if (!this._websocket) return;\n\n         this._websocket.onopen = () => {\n            if (ntry > 2) showProgress();\n            this.state = 1;\n\n            let key = this.key || \"\";\n\n            this.send(\"READY=\" + key, 0); // need to confirm connection\n            this.invokeReceiver(false, \"onWebsocketOpened\");\n         };\n\n         this._websocket.onmessage = e => {\n            let msg = e.data;\n\n            if (this.next_binary) {\n\n               let binchid = this.next_binary;\n               delete this.next_binary;\n\n               if (msg instanceof Blob) {\n                  // this is case of websocket\n                  // console.log('Get Blob object - convert to buffer array');\n                  let reader = new FileReader, qitem = this.reserveQueueItem();\n                  // The file's text will be printed here\n                  reader.onload = event => this.markQueueItemDone(qitem, event.target.result, 0);\n                  reader.readAsArrayBuffer(msg, e.offset || 0);\n               } else {\n                  // console.log('got array ' + (typeof msg) + ' len = ' + msg.byteLength);\n                  // this is from CEF or LongPoll handler\n                  this.provideData(binchid, msg, e.offset || 0);\n               }\n\n               return;\n            }\n\n            if (typeof msg != 'string') return console.log(\"unsupported message kind: \" + (typeof msg));\n\n            let i1 = msg.indexOf(\":\"),\n               credit = parseInt(msg.slice(0, i1)),\n               i2 = msg.indexOf(\":\", i1 + 1),\n               // cansend = parseInt(msg.slice(i1 + 1, i2)),  // TODO: take into account when sending messages\n               i3 = msg.indexOf(\":\", i2 + 1),\n               chid = parseInt(msg.slice(i2 + 1, i3));\n\n            this.ackn++;            // count number of received packets,\n            this.cansend += credit; // how many packets client can send\n\n            msg = msg.slice(i3 + 1);\n\n            if (chid == 0) {\n               console.log('GET chid=0 message', msg);\n               if (msg == \"CLOSE\") {\n                  this.close(true); // force closing of socket\n                  this.invokeReceiver(true, \"onWebsocketClosed\");\n               }\n            } else if (msg == \"$$binary$$\") {\n               this.next_binary = chid;\n            } else if (msg == \"$$nullbinary$$\") {\n               this.provideData(chid, new ArrayBuffer(0), 0);\n            } else {\n               this.provideData(chid, msg);\n            }\n\n            if (this.ackn > 7)\n               this.send('READY', 0); // send dummy message to server\n         };\n\n         this._websocket.onclose = arg => {\n            delete this._websocket;\n            if ((this.state > 0) || (arg === \"force_close\")) {\n               console.log('websocket closed');\n               this.state = 0;\n               this.invokeReceiver(true, \"onWebsocketClosed\");\n            }\n         };\n\n         this._websocket.onerror = err => {\n            console.log(`websocket error ${err} state ${this.state}`);\n            if (this.state > 0) {\n               this.invokeReceiver(true, \"onWebsocketError\", err);\n               this.state = 0;\n            }\n         };\n\n         // only in interactive mode try to reconnect\n         if (!isBatchMode())\n            setTimeout(retry_open, 3000); // after 3 seconds try again\n\n      } // retry_open\n\n      retry_open(true); // call for the first time\n   }\n\n} // class WebWindowHandle\n\n\n/** @summary Method used to initialize connection to web window.\n  * @param {object} arg - arguments\n  * @param {string} [arg.socket_kind] - kind of connection longpoll|websocket, detected automatically from URL\n  * @param {number} [arg.credits = 10] - number of packets which can be send to server without acknowledge\n  * @param {object} arg.receiver - instance of receiver for websocket events, allows to initiate connection immediately\n  * @param {string} [arg.first_recv] - required prefix in the first message from RWebWindow, remain part of message will be returned in handle.first_msg\n  * @param {string} [arg.href] - URL to RWebWindow, using window.location.href by default\n  * @returns {Promise} ready-to-use {@link WebWindowHandle} instance  */\nfunction connectWebWindow(arg) {\n\n   if (typeof arg == 'function')\n      arg = { callback: arg };\n   else if (!arg || (typeof arg != 'object'))\n      arg = {};\n\n   let d = decodeUrl();\n\n   // special holder script, prevents headless chrome browser from too early exit\n   if (d.has(\"headless\") && d.get(\"key\") && (browser.isChromeHeadless || browser.isChrome) && !arg.ignore_chrome_batch_holder)\n      loadScript(\"root_batch_holder.js?key=\" + d.get(\"key\"));\n\n   if (!arg.platform)\n      arg.platform = d.get(\"platform\");\n\n   if (arg.platform == \"qt5\")\n      browser.qt5 = true;\n   else if (arg.platform == \"cef3\")\n      browser.cef3 = true;\n\n   if (arg.batch === undefined)\n      arg.batch = d.has(\"headless\");\n\n   if (arg.batch) setBatchMode(true);\n\n   if (!arg.socket_kind)\n      arg.socket_kind = d.get(\"ws\");\n\n   if (!arg.socket_kind) {\n      if (browser.qt5)\n         arg.socket_kind = \"rawlongpoll\";\n      else if (browser.cef3)\n         arg.socket_kind = \"longpoll\";\n      else\n         arg.socket_kind = \"websocket\";\n   }\n\n   // only for debug purposes\n   // arg.socket_kind = \"longpoll\";\n\n   let main = new Promise(resolveFunc => {\n      let handle = new WebWindowHandle(arg.socket_kind, arg.credits);\n      handle.setUserArgs(arg.user_args);\n      if (arg.href) handle.setHRef(arg.href); // apply href now  while connect can be called from other place\n\n      if (window) {\n         window.onbeforeunload = () => handle.close(true);\n         if (browser.qt5) window.onqt5unload = window.onbeforeunload;\n      }\n\n      handle.key = d.get(\"key\");\n      handle.token = d.get(\"token\");\n\n      if (arg.receiver) {\n         // when receiver exists, it handles itself callbacks\n         handle.setReceiver(arg.receiver);\n         handle.connect();\n         return resolveFunc(handle);\n      }\n\n      if (!arg.first_recv)\n         return resolveFunc(handle);\n\n      handle.setReceiver({\n         onWebsocketOpened() {}, // dummy function when websocket connected\n\n         onWebsocketMsg(handle, msg) {\n            if (msg.indexOf(arg.first_recv) != 0)\n               return handle.close();\n            handle.first_msg = msg.slice(arg.first_recv.length);\n            resolveFunc(handle);\n         },\n\n         onWebsocketClosed() { closeCurrentWindow(); } // when connection closed, close panel as well\n      });\n\n      handle.connect();\n   });\n\n   if (!arg.ui5) return main;\n\n   return Promise.all([main, loadOpenui5(arg)]).then(arr => arr[0]);\n}\n\nexport { WebWindowHandle, connectWebWindow };\n","import { settings, create, parse, registerMethods, isBatchMode } from '../core.mjs';\nimport { select as d3_select, rgb as d3_rgb } from '../d3.mjs';\nimport { closeCurrentWindow, showProgress, loadOpenui5, ToolbarIcons } from '../gui/utils.mjs';\nimport { GridDisplay, getHPainter } from '../gui/display.mjs';\nimport { selectActivePad, cleanup, resize } from '../base/ObjectPainter.mjs';\nimport { RObjectPainter } from '../base/RObjectPainter.mjs';\nimport { RAxisPainter } from './RAxisPainter.mjs';\nimport { RFramePainter } from './RFramePainter.mjs';\nimport { RPadPainter } from './RPadPainter.mjs';\nimport { addDragHandler } from './TFramePainter.mjs';\nimport { WebWindowHandle } from '../webwindow.mjs';\n\n\n/**\n * @summary Painter class for RCanvas\n *\n * @private\n */\n\nclass RCanvasPainter extends RPadPainter {\n\n   /** @summary constructor */\n   constructor(dom, canvas) {\n      super(dom, canvas, true);\n      this._websocket = null;\n      this.tooltip_allowed = settings.Tooltip;\n      this.v7canvas = true;\n   }\n\n   /** @summary Cleanup canvas painter */\n   cleanup() {\n      delete this._websocket;\n      delete this._submreq;\n\n     if (this._changed_layout)\n         this.setLayoutKind('simple');\n      delete this._changed_layout;\n\n      super.cleanup();\n   }\n\n   /** @summary Returns layout kind */\n   getLayoutKind() {\n      let origin = this.selectDom('origin'),\n         layout = origin.empty() ? \"\" : origin.property('layout');\n      return layout || 'simple';\n   }\n\n   /** @summary Set canvas layout kind */\n   setLayoutKind(kind, main_selector) {\n      let origin = this.selectDom('origin');\n      if (!origin.empty()) {\n         if (!kind) kind = 'simple';\n         origin.property('layout', kind);\n         origin.property('layout_selector', (kind != 'simple') && main_selector ? main_selector : null);\n         this._changed_layout = (kind !== 'simple'); // use in cleanup\n      }\n   }\n\n   /** @summary Changes layout\n     * @returns {Promise} indicating when finished */\n   changeLayout(layout_kind, mainid) {\n      let current = this.getLayoutKind();\n      if (current == layout_kind)\n         return Promise.resolve(true);\n\n      let origin = this.selectDom('origin'),\n          sidebar = origin.select('.side_panel'),\n          main = this.selectDom(), lst = [];\n\n      while (main.node().firstChild)\n         lst.push(main.node().removeChild(main.node().firstChild));\n\n      if (!sidebar.empty()) cleanup(sidebar.node());\n\n      this.setLayoutKind(\"simple\"); // restore defaults\n      origin.html(\"\"); // cleanup origin\n\n      if (layout_kind == 'simple') {\n         main = origin;\n         for (let k = 0; k < lst.length; ++k)\n            main.node().appendChild(lst[k]);\n         this.setLayoutKind(layout_kind);\n      } else {\n         let grid = new GridDisplay(origin.node(), layout_kind);\n\n         if (mainid == undefined)\n            mainid = (layout_kind.indexOf(\"vert\") == 0) ? 0 : 1;\n\n         main = d3_select(grid.getGridFrame(mainid));\n         sidebar = d3_select(grid.getGridFrame(1 - mainid));\n\n         main.classed(\"central_panel\", true).style('position', 'relative');\n         sidebar.classed(\"side_panel\", true).style('position', 'relative');\n\n         // now append all childs to the new main\n         for (let k = 0; k < lst.length; ++k)\n            main.node().appendChild(lst[k]);\n\n         this.setLayoutKind(layout_kind, \".central_panel\");\n\n         // remove reference to MDIDisplay, solves resize problem\n         origin.property('mdi', null);\n      }\n\n      // resize main drawing and let draw extras\n      resize(main.node());\n      return Promise.resolve(true);\n   }\n\n   /** @summary Toggle projection\n     * @returns {Promise} indicating when ready\n     * @private */\n   toggleProjection(kind) {\n      delete this.proj_painter;\n\n      if (kind) this.proj_painter = 1; // just indicator that drawing can be preformed\n\n      if (this.showUI5ProjectionArea)\n         return this.showUI5ProjectionArea(kind);\n\n      let layout = 'simple', mainid;\n\n      switch(kind) {\n         case \"X\":\n         case \"bottom\": layout = 'vert2_31'; mainid = 0; break;\n         case \"Y\":\n         case \"left\": layout = 'horiz2_13'; mainid = 1; break;\n         case \"top\": layout = 'vert2_13'; mainid = 1; break;\n         case \"right\": layout = 'horiz2_31'; mainid = 0; break;\n      }\n\n      return this.changeLayout(layout, mainid);\n   }\n\n   /** @summary Draw projection for specified histogram\n     * @private */\n   drawProjection( /*kind,hist*/) {\n      // dummy for the moment\n   }\n\n   /** @summary Draw in side panel\n     * @private */\n   drawInSidePanel(canv, opt) {\n      let side = this.selectDom('origin').select(\".side_panel\");\n      if (side.empty()) return Promise.resolve(null);\n      return this.drawObject(side.node(), canv, opt);\n   }\n\n   /** @summary Checks if canvas shown inside ui5 widget\n     * @desc Function should be used only from the func which supposed to be replaced by ui5\n     * @private */\n   testUI5() {\n      if (!this.use_openui) return false;\n      console.warn(\"full ui5 should be used - not loaded yet? Please check!!\");\n      return true;\n   }\n\n   /** @summary Show message\n     * @desc Used normally with web-based canvas and handled in ui5\n     * @private */\n   showMessage(msg) {\n      if (!this.testUI5())\n         showProgress(msg, 7000);\n   }\n\n   /** @summary Function called when canvas menu item Save is called */\n   saveCanvasAsFile(fname) {\n      let pnt = fname.indexOf(\".\");\n      this.createImage(fname.slice(pnt+1))\n          .then(res => { console.log('save', fname, res.length); this.sendWebsocket(\"SAVE:\" + fname + \":\" + res); });\n   }\n\n   /** @summary Send command to server to save canvas with specified name\n     * @desc Should be only used in web-based canvas\n     * @private */\n   sendSaveCommand(fname) {\n      this.sendWebsocket(\"PRODUCE:\" + fname);\n   }\n\n   /** @summary Send message via web socket\n     * @private */\n   sendWebsocket(msg, chid) {\n      if (this._websocket)\n         this._websocket.send(msg, chid);\n   }\n\n   /** @summary Close websocket connection to canvas\n     * @private */\n   closeWebsocket(force) {\n      if (this._websocket) {\n         this._websocket.close(force);\n         this._websocket.cleanup();\n         delete this._websocket;\n      }\n   }\n\n   /** @summary Use provided connection for the web canvas\n     * @private */\n   useWebsocket(handle) {\n      this.closeWebsocket();\n\n      this._websocket = handle;\n      this._websocket.setReceiver(this);\n      this._websocket.connect();\n   }\n\n   /** @summary Hanler for websocket open event\n     * @private */\n   onWebsocketOpened(/*handle*/) {\n   }\n\n   /** @summary Hanler for websocket close event\n     * @private */\n   onWebsocketClosed(/*handle*/) {\n      if (!this.embed_canvas)\n         closeCurrentWindow();\n   }\n\n   /** @summary Hanler for websocket message\n     * @private */\n   onWebsocketMsg(handle, msg) {\n      console.log(\"GET_MSG \" + msg.slice(0,30));\n\n      if (msg == \"CLOSE\") {\n         this.onWebsocketClosed();\n         this.closeWebsocket(true);\n      } else if (msg.slice(0,5)=='SNAP:') {\n         msg = msg.slice(5);\n         let p1 = msg.indexOf(\":\"),\n             snapid = msg.slice(0,p1),\n             snap = parse(msg.slice(p1+1));\n         this.syncDraw(true)\n             .then(() => this.redrawPadSnap(snap))\n             .then(() => {\n                 handle.send(\"SNAPDONE:\" + snapid); // send ready message back when drawing completed\n                 this.confirmDraw();\n              });\n      } else if (msg.slice(0,4)=='JSON') {\n         let obj = parse(msg.slice(4));\n         // console.log(\"get JSON \", msg.length-4, obj._typename);\n         this.redrawObject(obj);\n      } else if (msg.slice(0,9)==\"REPL_REQ:\") {\n         this.processDrawableReply(msg.slice(9));\n      } else if (msg.slice(0,4)=='CMD:') {\n         msg = msg.slice(4);\n         let p1 = msg.indexOf(\":\"),\n             cmdid = msg.slice(0,p1),\n             cmd = msg.slice(p1+1),\n             reply = \"REPLY:\" + cmdid + \":\";\n         if ((cmd == \"SVG\") || (cmd == \"PNG\") || (cmd == \"JPEG\")) {\n            this.createImage(cmd.toLowerCase())\n                .then(res => handle.send(reply + res));\n         } else if (cmd.indexOf(\"ADDPANEL:\") == 0) {\n            let relative_path = cmd.slice(9);\n            if (!this.showUI5Panel) {\n               handle.send(reply + \"false\");\n            } else {\n\n               let conn = new WebWindowHandle(handle.kind);\n\n               // set interim receiver until first message arrives\n               conn.setReceiver({\n                  cpainter: this,\n\n                  onWebsocketOpened() {\n                  },\n\n                  onWebsocketMsg(panel_handle, msg) {\n                     let panel_name = (msg.indexOf(\"SHOWPANEL:\")==0) ? msg.slice(10) : \"\";\n                     this.cpainter.showUI5Panel(panel_name, panel_handle)\n                                  .then(res => handle.send(reply + (res ? \"true\" : \"false\")));\n                  },\n\n                  onWebsocketClosed() {\n                     // if connection failed,\n                     handle.send(reply + \"false\");\n                  },\n\n                  onWebsocketError() {\n                     // if connection failed,\n                     handle.send(reply + \"false\");\n                  }\n\n               });\n\n               let addr = handle.href;\n               if (relative_path.indexOf(\"../\")==0) {\n                  let ddd = addr.lastIndexOf(\"/\",addr.length-2);\n                  addr = addr.slice(0,ddd) + relative_path.slice(2);\n               } else {\n                  addr += relative_path;\n               }\n               // only when connection established, panel will be activated\n               conn.connect(addr);\n            }\n         } else {\n            console.log('Unrecognized command ' + cmd);\n            handle.send(reply);\n         }\n      } else if ((msg.slice(0,7)=='DXPROJ:') || (msg.slice(0,7)=='DYPROJ:')) {\n         let kind = msg[1],\n             hist = parse(msg.slice(7));\n         this.drawProjection(kind, hist);\n      } else if (msg.slice(0,5)=='SHOW:') {\n         let that = msg.slice(5),\n             on = that[that.length-1] == '1';\n         this.showSection(that.slice(0,that.length-2), on);\n      } else {\n         console.log(\"unrecognized msg len:\" + msg.length + \" msg:\" + msg.slice(0,20));\n      }\n   }\n\n   /** @summary Submit request to RDrawable object on server side */\n   submitDrawableRequest(kind, req, painter, method) {\n\n      if (!this._websocket || !req || !req._typename ||\n          !painter.snapid || (typeof painter.snapid != \"string\")) return null;\n\n      if (kind && method) {\n         // if kind specified - check if such request already was submitted\n         if (!painter._requests) painter._requests = {};\n\n         let prevreq = painter._requests[kind];\n\n         if (prevreq) {\n            let tm = new Date().getTime();\n            if (!prevreq._tm || (tm - prevreq._tm < 5000)) {\n               prevreq._nextreq = req; // submit when got reply\n               return false;\n            }\n            delete painter._requests[kind]; // let submit new request after timeout\n         }\n\n         painter._requests[kind] = req; // keep reference on the request\n      }\n\n      req.id = painter.snapid;\n\n      if (method) {\n         if (!this._nextreqid) this._nextreqid = 1;\n         req.reqid = this._nextreqid++;\n      } else {\n         req.reqid = 0; // request will not be replied\n      }\n\n      let msg = JSON.stringify(req);\n\n      if (req.reqid) {\n         req._kind = kind;\n         req._painter = painter;\n         req._method = method;\n         req._tm = new Date().getTime();\n\n         if (!this._submreq) this._submreq = {};\n         this._submreq[req.reqid] = req; // fast access to submitted requests\n      }\n\n      // console.log('Sending request ', msg.slice(0,60));\n\n      this.sendWebsocket(\"REQ:\" + msg);\n      return req;\n   }\n\n   /** @summary Submit menu request\n     * @private */\n   submitMenuRequest(painter, menukind, reqid) {\n      return new Promise(resolveFunc => {\n         this.submitDrawableRequest(\"\", {\n            _typename: \"ROOT::Experimental::RDrawableMenuRequest\",\n            menukind: menukind || \"\",\n            menureqid: reqid, // used to identify menu request\n         }, painter, resolveFunc);\n      });\n   }\n\n   /** @summary Submit executable command for given painter */\n   submitExec(painter, exec, subelem) {\n      // snapid is intentionally ignored - only painter.snapid has to be used\n      if (!this._websocket) return;\n\n      if (subelem && (typeof subelem == 'string')) {\n         let len = subelem.length;\n         if ((len > 2) && (subelem.indexOf(\"#x\") == len - 2)) subelem = \"x\"; else\n         if ((len > 2) && (subelem.indexOf(\"#y\") == len - 2)) subelem = \"y\"; else\n         if ((len > 2) && (subelem.indexOf(\"#z\") == len - 2)) subelem = \"z\";\n\n         if ((subelem == \"x\") || (subelem == \"y\") || (subelem == \"z\"))\n            exec = subelem + \"axis#\" + exec;\n         else\n            return console.log(`not recoginzed subelem ${subelem} in SubmitExec`);\n       }\n\n      this.submitDrawableRequest(\"\", {\n         _typename: \"ROOT::Experimental::RDrawableExecRequest\",\n         exec: exec\n      }, painter);\n   }\n\n   /** @summary Process reply from request to RDrawable */\n   processDrawableReply(msg) {\n      let reply = parse(msg);\n      if (!reply || !reply.reqid || !this._submreq) return false;\n\n      let req = this._submreq[reply.reqid];\n      if (!req) return false;\n\n      // remove reference first\n      delete this._submreq[reply.reqid];\n\n      // remove blocking reference for that kind\n      if (req._kind && req._painter?._requests)\n         if (req._painter._requests[req._kind] === req)\n            delete req._painter._requests[req._kind];\n\n      if (req._method)\n         req._method(reply, req);\n\n      // resubmit last request of that kind\n      if (req._nextreq && !req._painter._requests[req._kind])\n         this.submitDrawableRequest(req._kind, req._nextreq, req._painter, req._method);\n   }\n\n   /** @summary Show specified section in canvas */\n   showSection(that, on) {\n      switch(that) {\n         case \"Menu\": break;\n         case \"StatusBar\": break;\n         case \"Editor\": break;\n         case \"ToolBar\": break;\n         case \"ToolTips\": this.setTooltipAllowed(on); break;\n      }\n      return Promise.resolve(true);\n   }\n\n   /** @summary Method informs that something was changed in the canvas\n     * @desc used to update information on the server (when used with web6gui)\n     * @private */\n   processChanges(kind, painter, subelem) {\n      // check if we could send at least one message more - for some meaningful actions\n      if (!this._websocket || !this._websocket.canSend(2) || (typeof kind !== \"string\")) return;\n\n      let msg = \"\";\n      if (!painter) painter = this;\n      switch (kind) {\n         case \"sbits\":\n            console.log(\"Status bits in RCanvas are changed - that to do?\");\n            break;\n         case \"frame\": // when moving frame\n         case \"zoom\":  // when changing zoom inside frame\n            console.log(\"Frame moved or zoom is changed - that to do?\");\n            break;\n         case \"pave_moved\":\n            console.log('TPave is moved inside RCanvas - that to do?');\n            break;\n         default:\n            if ((kind.slice(0,5) == \"exec:\") && painter?.snapid) {\n               this.submitExec(painter, kind.slice(5), subelem);\n            } else {\n               console.log(\"UNPROCESSED CHANGES\", kind);\n            }\n      }\n\n      if (msg) {\n         console.log(\"RCanvas::processChanges want to send  \" + msg.length + \"  \" + msg.slice(0,40));\n      }\n   }\n\n   /** @summary Handle pad button click event\n     * @private */\n   clickPadButton(funcname, evnt) {\n      if (funcname == \"ToggleGed\") return this.activateGed(this, null, \"toggle\");\n      if (funcname == \"ToggleStatus\") return this.activateStatusBar(\"toggle\");\n      super.clickPadButton(funcname, evnt);\n   }\n\n   /** @summary returns true when event status area exist for the canvas */\n   hasEventStatus() {\n      if (this.testUI5()) return false;\n      if (this.brlayout)\n         return this.brlayout.hasStatus();\n      let hp = getHPainter();\n      return hp ? hp.hasStatusLine() : false;\n   }\n\n   /** @summary Show/toggle event status bar\n     * @private */\n   activateStatusBar(state) {\n      if (this.testUI5()) return;\n      if (this.brlayout)\n         this.brlayout.createStatusLine(23, state);\n      else\n         getHPainter()?.createStatusLine(23, state);\n\n      this.processChanges(\"sbits\", this);\n   }\n\n   /** @summary Returns true if GED is present on the canvas */\n   hasGed() {\n      if (this.testUI5()) return false;\n      return this.brlayout?.hasContent() ?? false;\n   }\n\n   /** @summary Function used to de-activate GED\n     * @private */\n   removeGed() {\n      if (this.testUI5()) return;\n\n      this.registerForPadEvents(null);\n\n      if (this.ged_view) {\n         this.ged_view.getController().cleanupGed();\n         this.ged_view.destroy();\n         delete this.ged_view;\n      }\n      this.brlayout?.deleteContent();\n\n      this.processChanges(\"sbits\", this);\n   }\n\n   /** @summary Function used to activate GED\n     * @returns {Promise} when GED is there\n     * @private */\n   activateGed(objpainter, kind, mode) {\n      if (this.testUI5() || !this.brlayout)\n         return Promise.resolve(false);\n\n      if (this.brlayout.hasContent()) {\n         if ((mode === \"toggle\") || (mode === false))\n            this.removeGed();\n         else\n            objpainter?.getPadPainter()?.selectObjectPainter(objpainter);\n\n         return Promise.resolve(true);\n      }\n\n      if (mode === false)\n         return Promise.resolve(false);\n\n      let btns = this.brlayout.createBrowserBtns();\n\n      ToolbarIcons.createSVG(btns, ToolbarIcons.diamand, 15, \"toggle fix-pos mode\")\n                  .style(\"margin\",\"3px\").on(\"click\", () => this.brlayout.toggleKind('fix'));\n\n      ToolbarIcons.createSVG(btns, ToolbarIcons.circle, 15, \"toggle float mode\")\n                  .style(\"margin\",\"3px\").on(\"click\", () => this.brlayout.toggleKind('float'));\n\n      ToolbarIcons.createSVG(btns, ToolbarIcons.cross, 15, \"delete GED\")\n                  .style(\"margin\",\"3px\").on(\"click\", () => this.removeGed());\n\n      // be aware, that jsroot_browser_hierarchy required for flexible layout that element use full browser area\n      this.brlayout.setBrowserContent(\"<div class='jsroot_browser_hierarchy' id='ged_placeholder'>Loading GED ...</div>\");\n      this.brlayout.setBrowserTitle(\"GED\");\n      this.brlayout.toggleBrowserKind(kind || \"float\");\n\n      return new Promise(resolveFunc => {\n\n         loadOpenui5.then(sap => {\n\n            d3_select(\"#ged_placeholder\").text(\"\");\n\n            sap.ui.define([\"sap/ui/model/json/JSONModel\", \"sap/ui/core/mvc/XMLView\"], (JSONModel,XMLView) => {\n\n               let oModel = new JSONModel({ handle: null });\n\n               XMLView.create({\n                  viewName: \"rootui5.canv.view.Ged\"\n               }).then(oGed => {\n\n                  oGed.setModel(oModel);\n\n                  oGed.placeAt(\"ged_placeholder\");\n\n                  this.ged_view = oGed;\n\n                  // TODO: should be moved into Ged controller - it must be able to detect canvas painter itself\n                  this.registerForPadEvents(oGed.getController().padEventsReceiver.bind(oGed.getController()));\n\n                  objpainter?.getPadPainter()?.selectObjectPainter(objpainter);\n\n                  this.processChanges(\"sbits\", this);\n\n                  resolveFunc(true);\n               });\n            });\n         });\n      });\n   }\n\n   /** @summary produce JSON for RCanvas, which can be used to display canvas once again\n     * @private */\n   produceJSON() {\n      console.error('RCanvasPainter.produceJSON not yet implemented');\n      return \"\";\n   }\n\n   /** @summary draw RCanvas object */\n   static draw(dom, can /*, opt */) {\n      let nocanvas = !can;\n      if (nocanvas)\n         can = create(\"ROOT::Experimental::TCanvas\");\n\n      let painter = new RCanvasPainter(dom, can);\n      painter.normal_canvas = !nocanvas;\n      painter.createCanvasSvg(0);\n\n      selectActivePad({ pp: painter, active: false });\n\n      return painter.drawPrimitives().then(() => {\n         painter.addPadButtons();\n         painter.showPadButtons();\n         return painter;\n      });\n   }\n\n} // class RCanvasPainter\n\n\n/** @summary draw RPadSnapshot object\n  * @private */\nfunction drawRPadSnapshot(dom, snap /*, opt*/) {\n   let painter = new RCanvasPainter(dom, null);\n   painter.normal_canvas = false;\n   painter.batch_mode = isBatchMode();\n   return painter.syncDraw(true).then(() => painter.redrawPadSnap(snap)).then(() => {\n      painter.confirmDraw();\n      painter.showPadButtons();\n      return painter;\n   });\n}\n\n/** @summary Ensure RCanvas and RFrame for the painter object\n  * @param {Object} painter  - painter object to process\n  * @param {string|boolean} frame_kind  - false for no frame or \"3d\" for special 3D mode\n  * @desc Assigns DOM, creates and draw RCanvas and RFrame if necessary, add painter to pad list of painters\n  * @returns {Promise} for ready */\nfunction ensureRCanvas(painter, frame_kind) {\n   if (!painter)\n      return Promise.reject(Error('Painter not provided in ensureRCanvas'));\n\n   // simple check - if canvas there, can use painter\n   let pr = painter.getCanvSvg().empty() ? RCanvasPainter.draw(painter.getDom(), null /* , noframe */) : Promise.resolve(true);\n\n   return pr.then(() => {\n      if ((frame_kind !== false) && painter.getFrameSvg().select(\".main_layer\").empty())\n         return RFramePainter.draw(painter.getDom(), null, (typeof frame_kind === \"string\") ? frame_kind : \"\");\n   }).then(() => {\n      painter.addToPadPrimitives();\n      return painter;\n   });\n}\n\n\n/** @summary Function used for direct draw of RFrameTitle\n  * @private */\nfunction drawRFrameTitle(reason, drag) {\n   let fp = this.getFramePainter();\n   if (!fp)\n      return console.log('no frame painter - no title');\n\n   let rect         = fp.getFrameRect(),\n       fx           = rect.x,\n       fy           = rect.y,\n       fw           = rect.width,\n       // fh           = rect.height,\n       ph           = this.getPadPainter().getPadHeight(),\n       title        = this.getObject(),\n       title_margin = this.v7EvalLength(\"margin\", ph, 0.02),\n       title_width  = fw,\n       title_height = this.v7EvalLength(\"height\", ph, 0.05),\n       textFont     = this.v7EvalFont(\"text\", { size: 0.07, color: \"black\", align: 22 });\n\n   if (reason == 'drag') {\n      title_height = drag.height;\n      title_margin = fy - drag.y - drag.height;\n      let changes = {};\n      this.v7AttrChange(changes, \"margin\", title_margin / ph);\n      this.v7AttrChange(changes, \"height\", title_height / ph);\n      this.v7SendAttrChanges(changes, false); // do not invoke canvas update on the server\n   }\n\n   this.createG();\n\n   this.draw_g.attr(\"transform\",`translate(${fx},${Math.round(fy-title_margin-title_height)})`);\n\n   let arg = { x: title_width/2, y: title_height/2, text: title.fText, latex: 1 };\n\n   this.startTextDrawing(textFont, 'font');\n\n   this.drawText(arg);\n\n   return this.finishTextDrawing().then(() => {\n      if (!isBatchMode())\n        addDragHandler(this, { x: fx, y: Math.round(fy-title_margin-title_height), width: title_width, height: title_height,\n                               minwidth: 20, minheight: 20, no_change_x: true, redraw: d => this.redraw('drag', d) });\n   });\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////\n\nregisterMethods(\"ROOT::Experimental::RPalette\", {\n\n   extractRColor(rcolor) {\n     return rcolor.fColor || \"black\";\n   },\n\n   getColor(indx) {\n      return this.palette[indx];\n   },\n\n   getContourIndex(zc) {\n      let cntr = this.fContour, l = 0, r = cntr.length-1, mid;\n\n      if (zc < cntr[0]) return -1;\n      if (zc >= cntr[r]) return r-1;\n\n      if (this.fCustomContour) {\n         while (l < r-1) {\n            mid = Math.round((l+r)/2);\n            if (cntr[mid] > zc) r = mid; else l = mid;\n         }\n         return l;\n      }\n\n      // last color in palette starts from level cntr[r-1]\n      return Math.floor((zc-cntr[0]) / (cntr[r-1] - cntr[0]) * (r-1));\n   },\n\n   getContourColor(zc) {\n      let zindx = this.getContourIndex(zc);\n      return (zindx < 0) ? \"\" : this.getColor(zindx);\n   },\n\n   getContour() {\n      return this.fContour && (this.fContour.length > 1) ? this.fContour : null;\n   },\n\n   deleteContour() {\n      delete this.fContour;\n   },\n\n   calcColor(value, entry1, entry2) {\n      let dist = entry2.fOrdinal - entry1.fOrdinal,\n          r1 = entry2.fOrdinal - value,\n          r2 = value - entry1.fOrdinal;\n\n      if (!this.fInterpolate || (dist <= 0))\n         return (r1 < r2) ? entry2.fColor : entry1.fColor;\n\n      // interpolate\n      let col1 = d3_rgb(this.extractRColor(entry1.fColor)),\n          col2 = d3_rgb(this.extractRColor(entry2.fColor)),\n          color = d3_rgb(Math.round((col1.r*r1 + col2.r*r2)/dist),\n                         Math.round((col1.g*r1 + col2.g*r2)/dist),\n                         Math.round((col1.b*r1 + col2.b*r2)/dist));\n\n      return color.toString();\n   },\n\n   createPaletteColors(len) {\n      let arr = [], indx = 0;\n\n      while (arr.length < len) {\n         let value = arr.length / (len-1);\n\n         let entry = this.fColors[indx];\n\n         if ((Math.abs(entry.fOrdinal - value)<0.0001) || (indx == this.fColors.length - 1)) {\n            arr.push(this.extractRColor(entry.fColor));\n            continue;\n         }\n\n         let next = this.fColors[indx+1];\n         if (next.fOrdinal <= value)\n            indx++;\n         else\n            arr.push(this.calcColor(value, entry, next));\n      }\n\n      return arr;\n   },\n\n   getColorOrdinal(value) {\n      // extract color with ordinal value between 0 and 1\n      if (!this.fColors)\n         return \"black\";\n      if ((typeof value != \"number\") || (value < 0))\n         value = 0;\n      else if (value > 1)\n         value = 1;\n\n      // TODO: implement better way to find index\n\n      let entry, next = this.fColors[0];\n      for (let indx = 0; indx < this.fColors.length-1; ++indx) {\n         entry = next;\n\n         if (Math.abs(entry.fOrdinal - value) < 0.0001)\n            return this.extractRColor(entry.fColor);\n\n         next = this.fColors[indx+1];\n         if (next.fOrdinal > value)\n            return this.calcColor(value, entry, next);\n      }\n\n      return this.extractRColor(next.fColor);\n   },\n\n   setFullRange(min, max) {\n      // set full z scale range, used in zooming\n      this.full_min = min;\n      this.full_max = max;\n   },\n\n   createContour(logz, nlevels, zmin, zmax, zminpositive) {\n      this.fContour = [];\n      delete this.fCustomContour;\n      this.colzmin = zmin;\n      this.colzmax = zmax;\n\n      if (logz) {\n         if (this.colzmax <= 0) this.colzmax = 1.;\n         if (this.colzmin <= 0)\n            if ((zminpositive===undefined) || (zminpositive <= 0))\n               this.colzmin = 0.0001*this.colzmax;\n            else\n               this.colzmin = ((zminpositive < 3) || (zminpositive>100)) ? 0.3*zminpositive : 1;\n         if (this.colzmin >= this.colzmax) this.colzmin = 0.0001*this.colzmax;\n\n         let logmin = Math.log(this.colzmin)/Math.log(10),\n             logmax = Math.log(this.colzmax)/Math.log(10),\n             dz = (logmax-logmin)/nlevels;\n         this.fContour.push(this.colzmin);\n         for (let level=1; level<nlevels; level++)\n            this.fContour.push(Math.exp((logmin + dz*level)*Math.log(10)));\n         this.fContour.push(this.colzmax);\n         this.fCustomContour = true;\n      } else {\n         if ((this.colzmin === this.colzmax) && (this.colzmin !== 0)) {\n            this.colzmax += 0.01*Math.abs(this.colzmax);\n            this.colzmin -= 0.01*Math.abs(this.colzmin);\n         }\n         let dz = (this.colzmax-this.colzmin)/nlevels;\n         for (let level=0; level<=nlevels; level++)\n            this.fContour.push(this.colzmin + dz*level);\n      }\n\n      if (!this.palette || (this.palette.length != nlevels))\n         this.palette = this.createPaletteColors(nlevels);\n   }\n\n});\n\n/** @summary draw RFont object\n  * @private */\nfunction drawRFont() {\n   let font   = this.getObject(),\n       svg    = this.getCanvSvg(),\n       defs   = svg.select('.canvas_defs'),\n       clname = \"custom_font_\" + font.fFamily+font.fWeight+font.fStyle;\n\n   if (defs.empty())\n      defs = svg.insert(\"svg:defs\", \":first-child\").attr(\"class\", \"canvas_defs\");\n\n   let entry = defs.select(\".\" + clname);\n   if (entry.empty())\n      entry = defs.append(\"style\").attr(\"type\", \"text/css\").attr(\"class\", clname);\n\n   entry.text(`@font-face { font-family: \"${font.fFamily}\"; font-weight: ${font.fWeight ? font.fWeight : \"normal\"}; font-style: ${font.fStyle ? font.fStyle : \"normal\"}; src: ${font.fSrc}; }`);\n\n   if (font.fDefault)\n      this.getPadPainter()._dfltRFont = font;\n\n   return true;\n}\n\n/** @summary draw RAxis object\n  * @private */\nfunction drawRAxis(dom, obj, opt) {\n   let painter = new RAxisPainter(dom, obj, opt);\n   painter.disable_zooming = true;\n   return ensureRCanvas(painter, false)\n           .then(() => painter.redraw())\n           .then(() => painter);\n}\n\n/** @summary draw RFrame object\n  * @private */\nfunction drawRFrame(dom, obj, opt) {\n   let p = new RFramePainter(dom, obj);\n   if (opt == \"3d\") p.mode3d = true;\n   return ensureRCanvas(p, false).then(() => p.redraw());\n}\n\nexport { ensureRCanvas, drawRPadSnapshot,\n         drawRFrameTitle, drawRFont, drawRAxis, drawRFrame,\n         RObjectPainter, RPadPainter, RCanvasPainter };\n"],"x_google_ignoreList":[0,1,2,3,4,5]}