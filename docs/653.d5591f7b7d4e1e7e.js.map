{"version":3,"file":"653.d5591f7b7d4e1e7e.js","mappings":"sRAMA,SAEeA,IAAQ,OAAAC,EAAAC,MAAAC,KAAAC,UAAA,CAoHvB,SAAAH,gBAAAI,KApHA,YACG,MAAMC,EAAOH,KAAKI,YACZC,EAAKL,KAAKM,gBACVC,EAAIF,EAAGG,cACPC,EAAIJ,EAAGK,eACPC,EAAKX,KAAKY,kBACVC,EAASV,EAAKW,MAAMC,WAAW,YAAcZ,EAAKW,MAAMC,WAAW,YACzE,IAAIC,EAAQb,EAAKc,GAAIC,EAAQf,EAAKgB,GAAIC,GAAY,EAC9CC,EAAO,EACPC,EAAQtB,KAAKuB,gBAAgBC,iBAIjC,GAFAxB,KAAKyB,cAAc,CAAEC,KAAMvB,IAEvBmB,GAASX,GAAIgB,WAAUC,UAAOjB,GAAIkB,mBAAoB,CACvD,MAAMC,EAAMnB,EAAGkB,kBAAkB1B,EAAKc,GAAId,EAAKgB,GAAIhB,EAAK4B,IACxDf,EAAQc,EAAIE,EACZd,EAAQY,EAAIG,EACZjC,KAAKkC,OAAQ,EACbZ,EAAQ,IACX,MAAWnB,EAAKgC,WAAQC,OAAI,KAEzBpC,KAAKkC,OAAQ,EACL7B,EAAGgC,YAAW,GAGtBjB,EADU,IAAIkB,KAAYtC,KAAKuC,cACjBC,MAAM,UAGpBxC,KAAKkC,OAAQ,EACblB,EAAQE,EAAQ,GAChBf,EAAKsC,WAAa,IAGrBzC,KAAK0C,QAAQtB,EAAY,eAAYuB,EAAW9B,GAEhDb,KAAK4C,OAAOlB,KAAK,YAAa,MAE9B1B,KAAKgB,MAAQhB,KAAK6C,UAAU,IAAK7B,EAAOhB,KAAKkC,OAC7ClC,KAAKkB,MAAQlB,KAAK6C,UAAU,IAAK3B,EAAOlB,KAAKkC,OAC7ClC,KAAK8C,QAAU1B,GAAaT,GAAImC,QAE5B9C,KAAK8C,WACL9C,KAAKgB,MAAOhB,KAAKkB,OAAS,CAAClB,KAAKkB,MAAOlB,KAAKgB,QAEhD,MAAM+B,EAAM/C,KAAKgD,QAAQC,UAAU,CAAEjB,EAAGhC,KAAKgB,MAAOiB,EAAGjC,KAAKkB,MAAOf,KAAMA,EAAK+C,OAAQC,MAAO,IAE7F,OAAKhD,EAAKiD,YAAcC,YAAa/B,GAClCyB,EAAII,MAAQ,EACZ9B,EAAO,IACClB,EAAKiD,YAAcE,gBAC3BP,EAAII,MAAQ,EACZ9B,EAAO,IAGNR,IACDb,KAAK4C,OAAOlB,KAAK,OAAQvB,EAAKW,OACzBd,KAAKuD,eACPvD,KAAK4C,OAAOY,OAAO,aAAarD,KAAK,WAAWA,EAAKW,UAGpDd,KAAKyD,sBAAsBzD,KAAKgD,QAAQU,KAAM1D,KAAKgD,QAAQW,QAAQpD,EAAGE,EAAGY,EAAM,MAC1EuC,KAAK,IAAM5D,KAAKH,SAASkD,IACzBa,KAAK,IAAM5D,KAAK6D,qBAChBD,KAAK,KACV5D,KAAKuD,gBAETvD,KAAK8D,OAAS9D,KAAK+D,OAAS,EAEvB/D,KAAKgE,WACPhE,KAAKgE,SAAW,SAASC,EAAIC,GAC1BlE,KAAK8D,QAAUG,EACfjE,KAAK+D,QAAUG,KACfC,MAAcnE,KAAK4C,OAAQ5C,KAAK8D,OAAQ9D,KAAK+D,OAChD,GAGE/D,KAAKoE,UACPpE,KAAKoE,QAAU,SAASC,GACrB,GAAIA,EAAa,OACjB,MAAMlE,EAAOH,KAAKI,YAClB,IAAIkE,EAAKtE,KAAKuE,UAAU,IAAKvE,KAAKgB,MAAQhB,KAAK8D,OAAQ9D,KAAKkC,OACxDsC,EAAKxE,KAAKuE,UAAU,IAAKvE,KAAKkB,MAAQlB,KAAK+D,OAAQ/D,KAAKkC,OACxDlC,KAAK8C,WACLwB,EAAIE,GAAM,CAACA,EAAIF,IAEnBnE,EAAKc,GAAKqD,EACVnE,EAAKgB,GAAKqD,EACVxE,KAAKyE,eAAe,QAAQH,YAAaE,OAC5C,GAGW,OAAVlD,GAAU,EACXoD,MAAe1E,MAAM,EAAMa,IAE3BF,EAAGgE,iBAAkB,EACrB3E,KAAK4E,eAAiB,KACnB,MAAM9C,EAAMnB,EAAGkB,kBAAkB1B,EAAKc,GAAId,EAAKgB,GAAIhB,EAAK4B,IAClD8C,EAAQ7E,KAAK6C,UAAU,IAAKf,EAAIE,GAAG,GACnC8C,EAAQ9E,KAAK6C,UAAU,IAAKf,EAAIG,GAAG,IACzCkC,QAAcnE,KAAK4C,OAAQiC,EAAQ7E,KAAKgB,MAAO8D,EAAQ9E,KAAKkB,MAAK,IACpE,EAGH6D,MAAkB/E,KAAMgF,MAExBhF,KAAKiF,qBAAuB,SAASC,GAClCA,EAAKC,IAAI,cAAe,IAAMD,EAAKE,MAAM,iBAAkBjF,EAAK+C,QAAQU,KAAKyB,IAC1ElF,EAAK+C,OAASmC,EACdrF,KAAKsF,kBAAkB,MAAO,kBAAkBD,MAAK,GAE3D,GA9C+BrF,MAkDrC,IAACD,MAAAC,KAAAC,UAAA,CAID,SAASsF,IACN,MAAMC,EAAUxF,KAAKI,YACfqF,EAAsC,IAApBD,EAAQE,SAAuC,MAApBF,EAAQG,QACrDC,EAAkC,WAAtBJ,EAAQpC,UAE1BpD,KAAK6F,cAAc,CAAEnE,KAAM8D,IAC3BxF,KAAK8F,cAAc,CAAEpE,KAAM8D,IAE3BxF,KAAK0C,UAEL,MAAMqD,EAAQ/F,KAAKgG,mBACbhE,EAAI+D,EAAM/D,EAAEwD,EAAQS,KACpBhE,EAAI8D,EAAM9D,EAAEuD,EAAQU,KACpBC,EAAKP,GAAaJ,EAAQY,KAAO,EAAML,EAAM/D,EAAEwD,EAAQS,IAAMT,EAAQa,KAAOrE,EAAM+D,EAAM/D,EAAEwD,EAAQS,IAAMT,EAAQY,KAAOpE,EACvHsE,EAAKrE,EAAI8D,EAAM9D,EAAEuD,EAAQU,IAAMV,EAAQa,KAE7C,IAAIE,EAAO,GAEX,GAAIX,GAAaJ,EAAQY,IAAM,EAAI,CAChC,MAAMI,EAAML,EAAIM,EAAMH,EAChBI,EAAMzE,EAAI8D,EAAM9D,EAAEuD,EAAQU,IAAMV,EAAQY,KACxCO,EAAMZ,EAAM/D,EAAEwD,EAAQS,IAAMT,EAAQa,KAAOrE,EAEjD,GAAIyD,EACDc,EAAO,KAAKC,OAASA,KAAOE,WAAaF,OAASA,KAAOE,YAAcF,QAC3DG,OAASA,KAAOF,WAAaE,OAASA,KAAOF,YAAcE,UACnE,CACJ,MAAMC,EAAapB,EAAQG,QAAQH,EAAQE,SAAS,IAAO,EAAI,EACzDmB,EAAKrB,EAAQE,QAAQoB,KAAKC,GAAG,IAAKC,EAAKxB,EAAQG,QAAQmB,KAAKC,GAAG,IAC/DE,EAAMH,KAAKI,MAAMV,EAAIM,KAAKK,IAAIN,IAAMO,EAAMN,KAAKI,MAAMR,EAAII,KAAKO,IAAIR,IAKxEN,EAAO,IAJKO,KAAKI,MAAMV,EAAIM,KAAKK,IAAIH,OAAYF,KAAKI,MAAMR,EAAII,KAAKO,IAAIL,OAI/CR,KAAOE,OAASE,OAAeK,KAAOG,KAHnDN,KAAKI,MAAMP,EAAIG,KAAKK,IAAIN,OAAYC,KAAKI,MAAMT,EAAIK,KAAKO,IAAIR,OAI/CF,KAAOF,OAASG,OAH7BE,KAAKI,MAAMP,EAAIG,KAAKK,IAAIH,OAAYF,KAAKI,MAAMT,EAAIK,KAAKO,IAAIL,MAI3E,CACH,SAA8B,IAAnBxB,EAAQ8B,OAEbf,EADCd,EACM,KAAKU,OAAQA,KAAMG,WAAYH,OAAQA,KAAMG,YAAaH,OAM1D,QAJIW,KAAKI,MAAMf,EAAKW,KAAKK,IAAI3B,EAAQE,QAAQoB,KAAKC,GAAG,SACjDD,KAAKI,MAAMZ,EAAKQ,KAAKO,IAAI7B,EAAQE,QAAQoB,KAAKC,GAAG,SAGjCZ,KAAMG,WAFtBQ,KAAKI,MAAMf,EAAKW,KAAKK,IAAI3B,EAAQG,QAAQmB,KAAKC,GAAG,SACjDD,KAAKI,MAAMZ,EAAKQ,KAAKO,IAAI7B,EAAQG,QAAQmB,KAAKC,GAAG,aAG3D,CACL,MAAMQ,EAAKT,KAAKK,IAAI3B,EAAQ8B,OAAOR,KAAKC,GAAG,KACrCS,EAAKV,KAAKO,IAAI7B,EAAQ8B,OAAOR,KAAKC,GAAG,KACrCU,EAAOjC,EAAQE,QAAQoB,KAAKC,GAAG,IAE/BW,EAAK,IACLC,GAFOnC,EAAQG,QAAQmB,KAAKC,GAAG,IAElBU,IAASC,GAAMjC,EAAiB,EAAI,IACvD,IAAImC,EAAQ,EAAGC,EAAQ,EAClBpC,IAAgBc,EAAO,QAC5B,QAASuB,EAAI,EAAGA,EAAIJ,IAAMI,EAAG,CACzB,MAAMC,EAAQN,EAAOK,EAAEH,EACjB1D,EAAKuB,EAAQY,IAAMU,KAAKK,IAAIY,GAC5B7D,EAAKsB,EAAQa,IAAMS,KAAKO,IAAIU,GAC5BC,EAAKjC,EAAM/D,EAAEwD,EAAQS,IAAMhC,EAAGsD,EAAKrD,EAAGsD,GAAMxF,EAC5CiG,EAAKlC,EAAM9D,EAAEuD,EAAQU,IAAMjC,EAAGuD,EAAKtD,EAAGqD,GAAMtF,EAC7CsE,EAGFA,GADMqB,IAAUI,EACR,KAAIC,EAAGJ,GACTA,IAAUI,EACR,KAAID,EAAGJ,GAEP,IAAII,EAAGJ,KAASK,EAAGJ,IAN3BtB,EAAO,IAAIyB,KAAMC,IAOpBL,EAAQI,EAAIH,EAAQI,CACxB,CACA1B,GAAQ,GACV,CAEAvG,KAAKgC,EAAIA,EACThC,KAAKiC,EAAIA,KAETkC,MAAcnE,KAAK4C,OAAOY,OAAO,YAAaxB,EAAGC,GAC7CP,KAAK,IAAK6E,GACV2B,KAAKlI,KAAKmI,QAAQC,MAClBF,KAAKlI,KAAKqI,QAAQD,OAAI,EAE1BrD,MAAkB/E,KAAMgF,OAAQ,EAEhCN,MAAe1E,MAEfA,KAAKgE,SAAW,SAASC,EAAIC,GAC1BlE,KAAKgC,GAAKiC,EACVjE,KAAKiC,GAAKiC,KACVC,MAAcnE,KAAK4C,OAAO0F,OAAO,QAAStI,KAAKgC,EAAGhC,KAAKiC,EAC1D,EAEAjC,KAAKoE,QAAU,SAASC,GACrB,GAAIA,EAAa,OACjB,MAAMmB,EAAUxF,KAAKI,YACrBoF,EAAQS,IAAMjG,KAAKuE,UAAU,IAAKvE,KAAKgC,GACvCwD,EAAQU,IAAMlG,KAAKuE,UAAU,IAAKvE,KAAKiC,GACvCjC,KAAKyE,eAAe,SAASe,EAAQS,eAAeT,EAAQU,mBAC/D,CACH,CAIA,SAASqC,IACNvI,KAAK0C,UAEL,MAAM8F,EAAMxI,KAAKI,YACXqI,EAAKD,EAAIE,WAAWC,OACpBC,EAAK5I,KAAK6C,UAAU,IAAK2F,EAAIvH,IAC7B4H,EAAK7I,KAAK6C,UAAU,IAAK2F,EAAIrH,IAC7BgF,EAAKnG,KAAK6C,UAAU,IAAK2F,EAAIvH,GAAKuH,EAAIM,SAAWF,EACjDtC,EAAKtG,KAAK6C,UAAU,IAAK2F,EAAIrH,GAAKqH,EAAIM,SAAWD,GAEvD1E,QAAcnE,KAAK4C,OAAQgG,EAAIC,GAG/B,IAAIE,EAAQ,EACRC,EAAMR,EAAIS,eAAenC,KAAKC,GAAI,IAClCmC,EAAKpC,KAAKI,MAAMf,EAAGW,KAAKK,IAAI6B,IAC5BG,EAAKrC,KAAKI,MAAMZ,EAAGQ,KAAKO,IAAI2B,IAEhC,QAASlB,EAAI,EAAGA,EAAIW,EAAIX,IACrBiB,GAASP,EAAIE,WAAWZ,GAAGsB,OAE9B,QAAStB,EAAI,EAAGA,EAAIW,EAAIX,IAAK,CAC1B,MAAMuB,EAAQb,EAAIE,WAAWZ,GAE7B9H,KAAK6F,cAAc,CAAEnE,KAAM2H,IAC3BrJ,KAAK8F,cAAc,CAAEpE,KAAM2H,IAE3BL,GAAMK,EAAMD,OAAOL,EAAM,EAAEjC,KAAKC,GAChC,MAAMuC,EAAKxC,KAAKI,MAAMf,EAAGW,KAAKK,IAAI6B,IAC5BO,EAAKzC,KAAKI,MAAMZ,EAAGQ,KAAKO,IAAI2B,IAElChJ,KAAK4C,OACAY,OAAO,YACP9B,KAAK,IAAK,QAAQwH,KAAMC,KAAMhD,KAAMG,WAAYgD,KAAMC,MACtDrB,KAAKlI,KAAKmI,QAAQC,MAClBF,KAAKlI,KAAKqI,QAAQD,MACvBc,EAAKI,EAAIH,EAAKI,CACjB,CACH,CAIA,SAASC,IACN,MAAMC,EAASzJ,KAAKI,YACdsJ,KAAatH,OAAI,IAEvBpC,KAAKkC,MAAQuH,EAAOtH,QAAQuH,GAE5B,MAAMtI,GAAYpB,KAAKkC,OAAgB,IAAII,KAAYtC,KAAKuC,cAAcC,MAAM,SAC1EM,EAAU1B,GAAapB,KAAKY,mBAAmBkC,QAErD9C,KAAK2J,gBAAgB,CAAEjI,KAAM+H,IAE7BzJ,KAAK0C,QAAQtB,EAAY,eAAYuB,GAErC,IAAIX,EAAIhC,KAAK6C,UAAU,IAAK4G,EAAOxI,GAAIjB,KAAKkC,OACxCD,EAAIjC,KAAK6C,UAAU,IAAK4G,EAAOtI,GAAInB,KAAKkC,OACxCY,KACAd,EAAGC,GAAK,CAACA,EAAGD,IAEhB,MAAMuE,EAAOvG,KAAK4J,UAAUC,OAAO7H,EAAGC,GAElCsE,GACDvG,KAAK4C,OAAOY,OAAO,YACd9B,KAAK,IAAK6E,GACV2B,KAAKlI,KAAK4J,UAAUxB,OAAI,EAGhCrD,MAAkB/E,KAAMgF,OAAQ,EAEhCN,MAAe1E,MAEfA,KAAKiE,GAAKjE,KAAKkE,GAAK,EAEpBlE,KAAKgE,SAAW,SAASC,EAAIC,GAC1BlE,KAAKiE,IAAMA,EACXjE,KAAKkE,IAAMA,KACXC,MAAcnE,KAAK4C,OAAO0F,OAAO,QAAStI,KAAKiE,GAAIjE,KAAKkE,GAC3D,EAEAlE,KAAKoE,QAAU,SAASC,GACrB,GAAIA,EAAa,OACjB,MAAMoF,EAASzJ,KAAKI,YACpB,IAAIkE,EAAKtE,KAAKuE,UAAU,IAAKvE,KAAK6C,UAAU,IAAK4G,EAAOxI,GAAIjB,KAAKkC,OAASlC,KAAKiE,GAAIjE,KAAKkC,OACpFsC,EAAKxE,KAAKuE,UAAU,IAAKvE,KAAK6C,UAAU,IAAK4G,EAAOtI,GAAInB,KAAKkC,OAASlC,KAAKkE,GAAIlE,KAAKkC,OACpFY,KACAwB,EAAIE,GAAM,CAACA,EAAIF,IACnBmF,EAAOxI,GAAKqD,EACZmF,EAAOtI,GAAKqD,EACZxE,KAAKyE,eAAe,QAAQH,YAAaE,kBACzCxE,KAAK8J,QACR,CACH,CAIA,SAASC,IACN,MAAMC,EAAOhK,KAAKI,YACZgI,EAAOpI,KAAKgG,mBAElBhG,KAAK2J,gBAAgB,CAAEjI,KAAMsI,IAE7BhK,KAAK0C,UAEL,IAAI6D,EAAO,GACX,QAASuB,EAAI,EAAGA,GAAKkC,EAAKC,aAAcnC,EACrCvB,GAAQvG,KAAK4J,UAAUC,OAAOzB,EAAKpG,EAAEgI,EAAK/I,GAAG6G,IAAKM,EAAKnG,EAAE+H,EAAK7I,GAAG2G,KAEhEvB,GACDvG,KAAK4C,OAAOY,OAAO,YACd9B,KAAK,IAAK6E,GACV2B,KAAKlI,KAAK4J,UAAUxB,OAAI,EAGhCrD,MAAkB/E,KAAMgF,OAAQ,EAEhCN,MAAe1E,MAEfA,KAAKiE,GAAKjE,KAAKkE,GAAK,EAEpBlE,KAAKgE,SAAW,SAASC,EAAIC,GAC1BlE,KAAKiE,IAAMA,EACXjE,KAAKkE,IAAMA,KACXC,MAAcnE,KAAK4C,OAAO0F,OAAO,QAAStI,KAAKiE,GAAIjE,KAAKkE,GAC3D,EAEAlE,KAAKoE,QAAU,SAASC,GACrB,GAAIA,EAAa,OACjB,MAAM2F,EAAOhK,KAAKI,YACZgI,EAAOpI,KAAKgG,mBAElB,IAAIkE,EAAO,GACX,QAASpC,EAAI,EAAGA,GAAKkC,EAAKC,aAAcnC,EAAG,CACxC,MAAM9F,EAAIhC,KAAKuE,UAAU,IAAK6D,EAAKpG,EAAEgI,EAAK/I,GAAG6G,IAAM9H,KAAKiE,IAClDhC,EAAIjC,KAAKuE,UAAU,IAAK6D,EAAKnG,EAAE+H,EAAK7I,GAAG2G,IAAM9H,KAAKkE,IACxD8F,EAAK/I,GAAG6G,GAAK9F,EACbgI,EAAK7I,GAAG2G,GAAK7F,EACbiI,GAAQ,YAAYpC,KAAK9F,KAAKC,MACjC,CACAjC,KAAKyE,eAAeyF,EAAO,cAC3BlK,KAAK8J,QACR,CACH,CAIA,SAASK,EAAYC,EAAKC,EAAKC,GAC5B,MAAMC,EAAU,IAAIC,KAAYJ,GAC1BK,EAAOF,EAAQG,YACfC,EAAMF,EAAKjH,OAAO,OAAO9B,KAAK,MAAO2I,EAAIvJ,OAAOY,KAAK,QAAS2I,EAAInH,QAAUmH,EAAIvJ,OAEtF,OAAIwJ,GAAOA,EAAIM,QAAQ,UAAY,EAChCD,EAAIE,MAAM,QAAS,QAAQA,MAAM,SAAU,QACrCP,GAAOA,EAAIM,QAAQ,WAAa,IACtCH,EAAKI,MAAM,WAAY,YACvBF,EAAIjJ,KAAK,QAAS,0FAGrB6I,EAAQO,gBAEDP,CACV","names":["drawText","_drawText","apply","this","arguments","_asyncToGenerator","text","getObject","pp","getPadPainter","w","getPadWidth","h","getPadHeight","fp","getFramePainter","is_url","fName","startsWith","pos_x","fX","pos_y","fY","use_frame","fact","annot","matchObjectType","clTAnnotation","createAttText","attr","mode3d","isFunc","convert3DtoPadNDC","pos","fZ","x","y","isndc","TestBit","BIT","getRootPad","DrawOptions","getDrawOpt","check","fTextAlign","createG","undefined","draw_g","axisToSvg","swap_xy","arg","textatt","createArg","fTitle","latex","_typename","clTLatex","clTMathText","isBatchMode","append","startTextDrawingAsync","font","getSize","then","finishTextDrawing","pos_dx","pos_dy","moveDrag","dx","dy","makeTranslate","moveEnd","not_changed","fx","svgToAxis","fy","submitCanvExec","addMoveHandler","processRender3D","handleRender3D","new_x","new_y","assignContextMenu","kToFront","fillContextMenuItems","menu","add","input","t","interactiveRedraw","drawEllipse","ellipse","closed_ellipse","fPhimin","fPhimax","is_crown","createAttLine","createAttFill","funcs","getAxisToSvgFunc","fX1","fY1","rx","fR1","fR2","ry","path","rx1","ry2","ry1","rx2","large_arc","a1","Math","PI","a2","dx1","round","cos","dy1","sin","fTheta","ct","st","phi1","np","dphi","lastx","lasty","n","angle","px","py","call","lineatt","func","fillatt","select","drawPie","pie","nb","fPieSlices","length","xc","yc","fRadius","total","af","fAngularOffset","x1","y1","fValue","slice","x2","y2","drawMarker","marker","kMarkerNDC","createAttMarker","markeratt","create","redraw","drawPolyMarker","poly","fLastPoint","exec","drawJSImage","dom","obj","opt","painter","BasePainter","main","selectDom","img","indexOf","style","setTopPainter"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["../node_modules/jsroot/modules/draw/more.mjs"],"sourcesContent":["import { BIT, isFunc, clTLatex, clTMathText, clTAnnotation } from '../core.mjs';\nimport { BasePainter, makeTranslate, DrawOptions } from '../base/BasePainter.mjs';\nimport { addMoveHandler } from '../gui/utils.mjs';\nimport { assignContextMenu, kToFront } from '../gui/menu.mjs';\n\n\n/** @summary Draw TText\n  * @private */\nasync function drawText() {\n   const text = this.getObject(),\n         pp = this.getPadPainter(),\n         w = pp.getPadWidth(),\n         h = pp.getPadHeight(),\n         fp = this.getFramePainter(),\n         is_url = text.fName.startsWith('http://') || text.fName.startsWith('https://');\n   let pos_x = text.fX, pos_y = text.fY, use_frame = false,\n       fact = 1,\n       annot = this.matchObjectType(clTAnnotation);\n\n   this.createAttText({ attr: text });\n\n   if (annot && fp?.mode3d && isFunc(fp?.convert3DtoPadNDC)) {\n      const pos = fp.convert3DtoPadNDC(text.fX, text.fY, text.fZ);\n      pos_x = pos.x;\n      pos_y = pos.y;\n      this.isndc = true;\n      annot = '3d';\n   } else if (text.TestBit(BIT(14))) {\n      // NDC coordinates\n      this.isndc = true;\n   } else if (pp.getRootPad(true)) {\n      // force pad coordinates\n      const d = new DrawOptions(this.getDrawOpt());\n      use_frame = d.check('FRAME');\n   } else {\n      // place in the middle\n      this.isndc = true;\n      pos_x = pos_y = 0.5;\n      text.fTextAlign = 22;\n   }\n\n   this.createG(use_frame ? 'frame2d' : undefined, is_url);\n\n   this.draw_g.attr('transform', null); // remove transform from interactive changes\n\n   this.pos_x = this.axisToSvg('x', pos_x, this.isndc);\n   this.pos_y = this.axisToSvg('y', pos_y, this.isndc);\n   this.swap_xy = use_frame && fp?.swap_xy;\n\n   if (this.swap_xy)\n      [this.pos_x, this.pos_y] = [this.pos_y, this.pos_x];\n\n   const arg = this.textatt.createArg({ x: this.pos_x, y: this.pos_y, text: text.fTitle, latex: 0 });\n\n   if ((text._typename === clTLatex) || annot) {\n      arg.latex = 1;\n      fact = 0.9;\n   } else if (text._typename === clTMathText) {\n      arg.latex = 2;\n      fact = 0.8;\n   }\n\n   if (is_url) {\n      this.draw_g.attr('href', text.fName);\n      if (!this.isBatchMode())\n         this.draw_g.append('svg:title').text(`link on ${text.fName}`);\n   }\n\n   return this.startTextDrawingAsync(this.textatt.font, this.textatt.getSize(w, h, fact, 0.05))\n              .then(() => this.drawText(arg))\n              .then(() => this.finishTextDrawing())\n              .then(() => {\n      if (this.isBatchMode()) return this;\n\n      this.pos_dx = this.pos_dy = 0;\n\n      if (!this.moveDrag) {\n         this.moveDrag = function(dx, dy) {\n            this.pos_dx += dx;\n            this.pos_dy += dy;\n            makeTranslate(this.draw_g, this.pos_dx, this.pos_dy);\n         };\n      }\n\n      if (!this.moveEnd) {\n         this.moveEnd = function(not_changed) {\n            if (not_changed) return;\n            const text = this.getObject();\n            let fx = this.svgToAxis('x', this.pos_x + this.pos_dx, this.isndc),\n                fy = this.svgToAxis('y', this.pos_y + this.pos_dy, this.isndc);\n            if (this.swap_xy)\n               [fx, fy] = [fy, fx];\n\n            text.fX = fx;\n            text.fY = fy;\n            this.submitCanvExec(`SetX(${fx});;SetY(${fy});;`);\n         };\n      }\n\n      if (annot !== '3d')\n         addMoveHandler(this, true, is_url);\n      else {\n         fp.processRender3D = true;\n         this.handleRender3D = () => {\n            const pos = fp.convert3DtoPadNDC(text.fX, text.fY, text.fZ),\n                  new_x = this.axisToSvg('x', pos.x, true),\n                  new_y = this.axisToSvg('y', pos.y, true);\n            makeTranslate(this.draw_g, new_x - this.pos_x, new_y - this.pos_y);\n         };\n      }\n\n      assignContextMenu(this, kToFront);\n\n      this.fillContextMenuItems = function(menu) {\n         menu.add('Change text', () => menu.input('Enter new text', text.fTitle).then(t => {\n            text.fTitle = t;\n            this.interactiveRedraw('pad', `exec:SetTitle(\"${t}\")`);\n         }));\n      };\n\n      return this;\n   });\n}\n\n/** @summary Draw TEllipse\n  * @private */\nfunction drawEllipse() {\n   const ellipse = this.getObject(),\n         closed_ellipse = (ellipse.fPhimin === 0) && (ellipse.fPhimax === 360),\n         is_crown = (ellipse._typename === 'TCrown');\n\n   this.createAttLine({ attr: ellipse });\n   this.createAttFill({ attr: ellipse });\n\n   this.createG();\n\n   const funcs = this.getAxisToSvgFunc(),\n         x = funcs.x(ellipse.fX1),\n         y = funcs.y(ellipse.fY1),\n         rx = is_crown && (ellipse.fR1 <= 0) ? (funcs.x(ellipse.fX1 + ellipse.fR2) - x) : (funcs.x(ellipse.fX1 + ellipse.fR1) - x),\n         ry = y - funcs.y(ellipse.fY1 + ellipse.fR2);\n\n   let path = '';\n\n   if (is_crown && (ellipse.fR1 > 0)) {\n      const rx1 = rx, ry2 = ry,\n            ry1 = y - funcs.y(ellipse.fY1 + ellipse.fR1),\n            rx2 = funcs.x(ellipse.fX1 + ellipse.fR2) - x;\n\n      if (closed_ellipse) {\n         path = `M${-rx1},0A${rx1},${ry1},0,1,0,${rx1},0A${rx1},${ry1},0,1,0,${-rx1},0` +\n                `M${-rx2},0A${rx2},${ry2},0,1,0,${rx2},0A${rx2},${ry2},0,1,0,${-rx2},0`;\n      } else {\n         const large_arc = (ellipse.fPhimax-ellipse.fPhimin>=180) ? 1 : 0,\n               a1 = ellipse.fPhimin*Math.PI/180, a2 = ellipse.fPhimax*Math.PI/180,\n               dx1 = Math.round(rx1*Math.cos(a1)), dy1 = Math.round(ry1*Math.sin(a1)),\n               dx2 = Math.round(rx1*Math.cos(a2)), dy2 = Math.round(ry1*Math.sin(a2)),\n               dx3 = Math.round(rx2*Math.cos(a1)), dy3 = Math.round(ry2*Math.sin(a1)),\n               dx4 = Math.round(rx2*Math.cos(a2)), dy4 = Math.round(ry2*Math.sin(a2));\n\n         path = `M${dx2},${dy2}A${rx1},${ry1},0,${large_arc},0,${dx1},${dy1}` +\n                `L${dx3},${dy3}A${rx2},${ry2},0,${large_arc},1,${dx4},${dy4}Z`;\n      }\n   } else if (ellipse.fTheta === 0) {\n      if (closed_ellipse)\n         path = `M${-rx},0A${rx},${ry},0,1,0,${rx},0A${rx},${ry},0,1,0,${-rx},0Z`;\n      else {\n         const x1 = Math.round(rx * Math.cos(ellipse.fPhimin*Math.PI/180)),\n               y1 = Math.round(ry * Math.sin(ellipse.fPhimin*Math.PI/180)),\n               x2 = Math.round(rx * Math.cos(ellipse.fPhimax*Math.PI/180)),\n               y2 = Math.round(ry * Math.sin(ellipse.fPhimax*Math.PI/180));\n         path = `M0,0L${x1},${y1}A${rx},${ry},0,1,1,${x2},${y2}Z`;\n      }\n   } else {\n     const ct = Math.cos(ellipse.fTheta*Math.PI/180),\n           st = Math.sin(ellipse.fTheta*Math.PI/180),\n           phi1 = ellipse.fPhimin*Math.PI/180,\n           phi2 = ellipse.fPhimax*Math.PI/180,\n           np = 200,\n           dphi = (phi2-phi1) / (np - (closed_ellipse ? 0 : 1));\n     let lastx = 0, lasty = 0;\n     if (!closed_ellipse) path = 'M0,0';\n     for (let n = 0; n < np; ++n) {\n         const angle = phi1 + n*dphi,\n               dx = ellipse.fR1 * Math.cos(angle),\n               dy = ellipse.fR2 * Math.sin(angle),\n               px = funcs.x(ellipse.fX1 + dx*ct - dy*st) - x,\n               py = funcs.y(ellipse.fY1 + dx*st + dy*ct) - y;\n         if (!path)\n            path = `M${px},${py}`;\n         else if (lastx === px)\n            path += `v${py-lasty}`;\n         else if (lasty === py)\n            path += `h${px-lastx}`;\n         else\n            path += `l${px-lastx},${py-lasty}`;\n         lastx = px; lasty = py;\n     }\n     path += 'Z';\n   }\n\n   this.x = x;\n   this.y = y;\n\n   makeTranslate(this.draw_g.append('svg:path'), x, y)\n      .attr('d', path)\n      .call(this.lineatt.func)\n      .call(this.fillatt.func);\n\n   assignContextMenu(this, kToFront);\n\n   addMoveHandler(this);\n\n   this.moveDrag = function(dx, dy) {\n      this.x += dx;\n      this.y += dy;\n      makeTranslate(this.draw_g.select('path'), this.x, this.y);\n   };\n\n   this.moveEnd = function(not_changed) {\n      if (not_changed) return;\n      const ellipse = this.getObject();\n      ellipse.fX1 = this.svgToAxis('x', this.x);\n      ellipse.fY1 = this.svgToAxis('y', this.y);\n      this.submitCanvExec(`SetX1(${ellipse.fX1});;SetY1(${ellipse.fY1});;Notify();;`);\n   };\n}\n\n/** @summary Draw TPie\n  * @private */\nfunction drawPie() {\n   this.createG();\n\n   const pie = this.getObject(),\n         nb = pie.fPieSlices.length,\n         xc = this.axisToSvg('x', pie.fX),\n         yc = this.axisToSvg('y', pie.fY),\n         rx = this.axisToSvg('x', pie.fX + pie.fRadius) - xc,\n         ry = this.axisToSvg('y', pie.fY + pie.fRadius) - yc;\n\n   makeTranslate(this.draw_g, xc, yc);\n\n   // Draw the slices\n   let total = 0,\n       af = (pie.fAngularOffset*Math.PI)/180,\n       x1 = Math.round(rx*Math.cos(af)),\n       y1 = Math.round(ry*Math.sin(af));\n\n   for (let n = 0; n < nb; n++)\n      total += pie.fPieSlices[n].fValue;\n\n   for (let n = 0; n < nb; n++) {\n      const slice = pie.fPieSlices[n];\n\n      this.createAttLine({ attr: slice });\n      this.createAttFill({ attr: slice });\n\n      af += slice.fValue/total*2*Math.PI;\n      const x2 = Math.round(rx*Math.cos(af)),\n            y2 = Math.round(ry*Math.sin(af));\n\n      this.draw_g\n          .append('svg:path')\n          .attr('d', `M0,0L${x1},${y1}A${rx},${ry},0,0,0,${x2},${y2}z`)\n          .call(this.lineatt.func)\n          .call(this.fillatt.func);\n      x1 = x2; y1 = y2;\n   }\n}\n\n/** @summary Draw TMarker\n  * @private */\nfunction drawMarker() {\n   const marker = this.getObject(),\n         kMarkerNDC = BIT(14);\n\n   this.isndc = marker.TestBit(kMarkerNDC);\n\n   const use_frame = this.isndc ? false : new DrawOptions(this.getDrawOpt()).check('FRAME'),\n         swap_xy = use_frame && this.getFramePainter()?.swap_xy;\n\n   this.createAttMarker({ attr: marker });\n\n   this.createG(use_frame ? 'frame2d' : undefined);\n\n   let x = this.axisToSvg('x', marker.fX, this.isndc),\n       y = this.axisToSvg('y', marker.fY, this.isndc);\n   if (swap_xy)\n      [x, y] = [y, x];\n\n   const path = this.markeratt.create(x, y);\n\n   if (path) {\n      this.draw_g.append('svg:path')\n          .attr('d', path)\n          .call(this.markeratt.func);\n   }\n\n   assignContextMenu(this, kToFront);\n\n   addMoveHandler(this);\n\n   this.dx = this.dy = 0;\n\n   this.moveDrag = function(dx, dy) {\n      this.dx += dx;\n      this.dy += dy;\n      makeTranslate(this.draw_g.select('path'), this.dx, this.dy);\n   };\n\n   this.moveEnd = function(not_changed) {\n      if (not_changed) return;\n      const marker = this.getObject();\n      let fx = this.svgToAxis('x', this.axisToSvg('x', marker.fX, this.isndc) + this.dx, this.isndc),\n          fy = this.svgToAxis('y', this.axisToSvg('y', marker.fY, this.isndc) + this.dy, this.isndc);\n      if (swap_xy)\n         [fx, fy] = [fy, fx];\n      marker.fX = fx;\n      marker.fY = fy;\n      this.submitCanvExec(`SetX(${fx});;SetY(${fy});;Notify();;`);\n      this.redraw();\n   };\n}\n\n/** @summary Draw TPolyMarker\n  * @private */\nfunction drawPolyMarker() {\n   const poly = this.getObject(),\n         func = this.getAxisToSvgFunc();\n\n   this.createAttMarker({ attr: poly });\n\n   this.createG();\n\n   let path = '';\n   for (let n = 0; n <= poly.fLastPoint; ++n)\n      path += this.markeratt.create(func.x(poly.fX[n]), func.y(poly.fY[n]));\n\n   if (path) {\n      this.draw_g.append('svg:path')\n          .attr('d', path)\n          .call(this.markeratt.func);\n   }\n\n   assignContextMenu(this, kToFront);\n\n   addMoveHandler(this);\n\n   this.dx = this.dy = 0;\n\n   this.moveDrag = function(dx, dy) {\n      this.dx += dx;\n      this.dy += dy;\n      makeTranslate(this.draw_g.select('path'), this.dx, this.dy);\n   };\n\n   this.moveEnd = function(not_changed) {\n      if (not_changed) return;\n      const poly = this.getObject(),\n            func = this.getAxisToSvgFunc();\n\n      let exec = '';\n      for (let n = 0; n <= poly.fLastPoint; ++n) {\n         const x = this.svgToAxis('x', func.x(poly.fX[n]) + this.dx),\n               y = this.svgToAxis('y', func.y(poly.fY[n]) + this.dy);\n         poly.fX[n] = x;\n         poly.fY[n] = y;\n         exec += `SetPoint(${n},${x},${y});;`;\n      }\n      this.submitCanvExec(exec + 'Notify();;');\n      this.redraw();\n   };\n}\n\n/** @summary Draw JS image\n  * @private */\nfunction drawJSImage(dom, obj, opt) {\n   const painter = new BasePainter(dom),\n         main = painter.selectDom(),\n         img = main.append('img').attr('src', obj.fName).attr('title', obj.fTitle || obj.fName);\n\n   if (opt && opt.indexOf('scale') >= 0)\n      img.style('width', '100%').style('height', '100%');\n   else if (opt && opt.indexOf('center') >= 0) {\n      main.style('position', 'relative');\n      img.attr('style', 'margin: 0; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);');\n   }\n\n   painter.setTopPainter();\n\n   return painter;\n}\n\nexport { drawText, drawEllipse, drawPie, drawMarker, drawPolyMarker, drawJSImage };\n"],"x_google_ignoreList":[0]}