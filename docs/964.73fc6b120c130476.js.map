{"version":3,"file":"964.73fc6b120c130476.js","mappings":"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","names":["RObjectPainter","ObjectPainter","constructor","dom","obj","opt","csstype","super","this","addToPadPrimitives","pp","rstyle","next_rstyle","v7EvalAttr","name","dflt","getObject","cssprefix","type_check","res","undefined","typ1","typ2","parseFloat","fAttr","m","value","v","fBlocks","blks","k","length","block","selector","fId","fCssClass","map","toLowerCase","v7SetAttr","v7EvalLength","sizepx","Math","round","norm","px","val","operand","pos","console","log","slice","Number","isFinite","v7EvalColor","isStr","getPadPainter","_auto_color_cnt","pal","getHistPalette","cnt","num","_num_primitives","getColorOrdinal","_auto_colors","error","ordinal","isNodeJs","isBatchMode","settings","ApproxTextSize","col","d3_color","opacity","toFixed","formatRgb","v7EvalFont","dflts","fontScale","size","rfont","_dfltRFont","fFamily","fStyle","fWeight","text_angle","text_align","align","text_color","color","font_family","font_style","font_weight","text_size","getPadHeight","handler","FontHandler","setNameStyleWeight","setAngle","setAlign","setColor","createv7AttFill","prefix","pattern","createAttFill","color_as_svg","createv7AttLine","width","style","split","join","createAttLine","lineatt","setBorder","createv7AttMarker","refsize","createAttMarker","v7AttrChange","req","kind","snapid","_typename","nsREX","ids","names","values","update","push","parseInt","JSON","stringify","v7SendAttrChanges","do_update","canp","getCanvPainter","v7SubmitRequest","method","isFunc","submitDrawableRequest","_pending_request","assignSnapId","id","p","v7CommMode","_websocket","v7NormalMode","v7OfflineMode","RAxisPainter","arg1","axis","Object","assign","AxisPainterMethods","initAxisPainter","embedded","cleanup","axis_g","cleanupAxisPainter","getAxisType","configureZAxis","fp","kAxisNormal","_log","logbase","abs","exp","logz","configureAxis","min","max","smin","smax","vertical","frame_range","axis_range","opts","full_min","full_max","_symlog","reverse","kAxisTime","timeoffset","toffset","fLabelsIndex","kAxisLabels","own_labels","labels","func","d3_scaleTime","domain","convertDate","symlog","d3_scaleSymlog","constant","d3_scaleLog","base","d3_scaleLinear","scale_min","scale_max","gr_range","range","axis_shift","gr","format","ndiv","nticks","nticks2","nticks3","floor","scale_range","tf2","chooseTimeFormat","tf1","tfunc1","tfunc2","d3_timeFormat","formatTime","noexp","moreloglabels","formatLog","formatLabels","order","ndig","formatNormal","getScaleMin","getScaleMax","d","indx","fNBinsNoOver","i","pair","second","first","fLabels","createTicks","only_major_as_array","optionNoexp","optionNoopt","optionInt","noticksopt","ticks","produceTicks","handle","nminor","nmiddle","nmajor","minor","middle","major","delta","unshift","reset","next","doround","tick","grpos","last_major","next_major_grpos","get_modifier","maxorder","minorder","exclorder3","maxtick","mintick","ord1","log10","ord2","bestorder","bestndig","bestlen","lbls","totallen","lbl","indexOf","warn","isCenteredLabels","isRotateLabels","processLabelsMove","arg","optionUnlab","label_g","select","box","node","getBBox","append","classed","attr","x","y","height","call","addHighlightStyle","drag_pos0","offset","property","remove","side","labelsOffset","changeAxisAttr","scalingSize","addTitleDrag","title_g","MoveResize","acc_x","acc_y","new_x","new_y","alt_pos","curr_indx","drag_rect","drag_move","d3_drag","subject","on","evnt","sourceEvent","preventDefault","stopPropagation","title_length","titlePos","off","swap","isReverseAxis","title_align","isTitleRotated","dx","dy","set_x","set_y","besti","makeTranslate","basepos","titleOffset","isInsideGrRange","delta1","delta2","getGrRange","drawMainLine","ending","endingSize","endingStyle","sz","sz7","drawTicks","main_draw","ticks_plusminus","ticksSide","h1","ticksSize","h2","startingSize","ticksColor","ticksWidth","gap0","gap","drawLabels","gaps","_this","_asyncToGenerator","center_lbls","rotate_lbls","labelsFont","angle","lbl_pos","textscale","maxtextlen","lbls_tilt","max_lbl_width","max_lbl_height","process_drawtext_ready","painter","result_width","result_height","textwidth","maxwidth","gap_before","gap_after","scale","scaleTextDrawing","fix_offset","fix_coord","lastpos","startTextDrawingAsync","then","text","latex","draw_g","post_process","drawText","axis_step","has_obstacle","formatExp","finishTextDrawing","selectAll","each","txt","d3_select","tr","tilt_height","sin","PI","cos","addZoomingRect","lgaps","Zooming","disable_zooming","titleFont","drawTitle","_this2","fTitle","rotated","title_shift_x","title_shift_y","title_basepos","titleCenter","titleOpposite","extractDrawAttributes","rect","getPadRect","roundAngle","maxTickSize","drawAxis","layer","transform","_this3","standalone","selectChild","empty","tgaps","Promise","resolve","setAfterDrawHandler","_afterDrawAgain","drawAxisAgain","drawAxisOtherPlace","only_ticks","zoomStandalone","redraw","drawable","getCoordinate","fPos","labels_len","len","getPadLength","fVertical","fLength","createG","promise","ContextMenu","createMenu","menu","header","urlClassPrefix","add","fillAxisContextMenu","show","addDragHandler","only_move","positionChanged","ZoomWheel","d3_pointer","item","analyzeWheelEvent","changed","drag","xn","yn","fHoriz","fArr","fVert","submitCanvExec","redraw_mode","changes","arguments","redrawPad","changeAxisLog","getFramePainter","unzoom","sub","addchk","input","endsub","addRColorMenu","addSizeMenu","addSelectMenu","addRAttrTextItems","noangle","noalign","change","t","flag","RFramePainter","frame","mode3d","xmin","xmax","ymin","ymax","axes_drawn","keys_handler","projection","v7_frame","is_root6","setFrameActive","enabledKeys","HandleKeys","control","enableKeys","setLastEventPos","pnt","fLastEventPnt","getLastEventPos","updateAttributes","force","fX1NDC","$modifiedNDC","gStyle","fPadLeftMargin","fY1NDC","fPadBottomMargin","fX2NDC","fPadRightMargin","fY2NDC","fPadTopMargin","fillatt","getProjectionFunc","getEarthProjectionFunc","recalculateRange","Proj","scale_ymin","scale_ymax","pnts","scale_xmin","scale_xmax","original_xmin","original_xmax","original_ymin","original_ymax","n","drawGrids","getFrameSvg","h","getFrameHeight","w","getFrameWidth","gridx","gridy","grid_style","getSvgLineStyle","fGridStyle","grid_color","fGridColor","getColor","x_handle","draw_grid","grid","swap_xy","fGridWidth","y_handle","axisAsText","toUpperCase","toPrecision","_setAxisRange","vmin","vmax","nmin","nmax","nzmin","nzmax","zoomChangedInteractive","setAxesRanges","xaxis","yaxis","zaxis","zmin","zmax","setAxes2Ranges","second_x","second_y","x2axis","y2axis","createXY","self_drawaxes","cleanXY","ndim","v6axes","reverse_x","reverse_y","logx","logy","scales_ndim","extra_y_space","zoom_xmin","zoom_xmax","zoom_ymin","zoom_ymax","clTAxis","create","TAxisPainter","symlog_y","symlog_x","logcheckmin","logminfactor","assignFrameMembers","log_min_nz","ymin_nz","hasDrawnAxes","drawAxes","ticksx","ticksy","sidex","sidey","cleanupAxes","draw_swapside","draw_ticks","z_handle","draw_horiz","draw_vertical","pr","_fast_drawing","disable_ticks","pr1","invert_side","disable_x_draw","getFrameY","pr2","disable_y_draw","_frame_x","can_adjust_frame","all","arr","drawAxes2","zoom_x2min","zoom_x2max","scale_x2min","scale_x2max","x2min","x2max","x2_handle","zoom_y2min","zoom_y2max","scale_y2min","scale_y2max","y2min","y2max","y2_handle","getGrFuncs","use_x2","grx2","use_y2","gry2","grx","gry","revertAxis","sizeChanged","clean","grname","cleanFrameDrawings","create3DScene","window","removeEventListener","_click_handler","_dblclick_handler","frame_painter_ref","lm","tm","trans","rotate","fixpos","options","RotateFrame","FixFrame","_frame_y","_frame_width","_frame_height","_frame_rotate","_frame_fixpos","_frame_trans","createFrameG","top_rect","main_svg","getLayerSvg","rx","ry","addInteractivity","getFrameX","getFrameRect","hint_delta_x","hint_delta_y","configureUserClickHandler","configureUserDblclickHandler","zoom","interactive","zoom_x","zoom_y","zoom_z","unzoom_x","unzoom_y","unzoom_z","r_x","r_y","r_z","is_any_check","flags","checkZooming","canZoomInside","zoom_zmin","zoom_zmax","forEachPainter","ranges","interactiveRedraw","zoomSingle","zoom_v","unzoom_v","unzoomSingle","_this4","isAxisZoomed","dox","doy","doz","_this5","resetZoom","forEach","zoom_changed_x","zoom_changed_y","zoom_changed_z","fld","fillObjectOfflineMenu","changeFrameAttr","fillContextMenu","faxis","TestBit","main","getMainPainter","addTAxisMenu","EAxisBits","alone","separator","isTooltipAllowed","setTooltipAllowed","addAttributesMenu","fmts","internals","makePDF","fmt","saveAs","revertPoint","showAxisStatus","axis_name","hint_name","axis_value","showObjectStatus","addKeysHandler","FrameInteractive","addFrameKeysHandler","for_second_axes","addBasicInteractivity","addFrameInteractivity","setRootPadRange","toggleAxisLog","RPadPainter","pad","iscan","this_pad_name","fObjectID","id_counter","painters","has_canvas","forEachPainterInPad","selectDom","batch_mode","isRoot6","isEditable","svg_this_pad","getPadSvg","main_painter_ref","setMainPainter","_doing_draw","svg_p","pads_cache","_pad_x","_pad_y","_pad_width","_pad_height","draw_object","pad_frame","selectActivePad","active","getPadWidth","getPadLog","szx","szy","getRootPad","cleanPrimitives","splice","divide","removePrimitive","clean_only_secondary","prim","isInteger","resindx","len0","isSecondary","findInPrimitives","objname","objtype","findPainterFor","selobj","selname","seltype","find","pobj","fName","fDfltPalette","fColors","fOrdinal","fColor","fInterpolate","fNormalized","addMethods","getNumPainters","userfunc","registerForPadEvents","receiver","pad_events_receiver","producePadEvent","what","padpainter","position","selectObjectPainter","istoppad","getAbsPosInCanvas","setFastDrawing","was_fast","SmallPad","showPadButtons","isGrayscale","setGrayscale","createCanvasSvg","check_resize","new_size","btns","frect","factor","svg","_fixed_size","getCanvSvg","testMainResize","render_to","setTopPainter","online_canvas","enlargePad","padContextMenu","ToolBarSide","ToolBarVert","fWinSize","getElementRect","lmt","DarkMode","alignButtons","drawItemNameOnCanvas","is_dblclick","is_escape","enlargeMain","svg_can","pad_enlarged","hasObjectsToDraw","checkResize","createPadSvg","only_resize","svg_parent","pad_name","pad_visible","svg_pad","svg_rect","fSize","addPadInteractive","color0","fBorderMode","constants","Embed3D","Overlay","$userInteractive","fPrimitives","syncDraw","entry","findIndex","e","resolveFunc","confirmDraw","shift","drawObject","drawPrimitives","_start_tm","Date","getTime","op","isObject","_primitive","spenttm","processPadTooltipEvent","hints","processTooltipEvent","nproc","hint","user_info","changeDarkMode","mode","clname","addSettingsMenu","hasMenuBar","actiavteMenuBar","hasEventStatus","activateStatusBar","canStatusBar","fname","fillObjectExecMenu","redrawLegend","reason","sync_promise","showsubitems","redrawNext","isPromise","getActivePad","needRedrawByResize","elem","checkCanvasResize","_ignore_resize","getPromise","embed_canvas","_resize_tmout","clearTimeout","setTimeout","cw","ch","sendWebsocket","updateObject","addObjectPainter","objpainter","lst","extractTObjectProp","snap","fColIndex","fColValue","colors","root_colors","getRootColors","convertColor","pattr","fObject","assignObject","fCssType","fOption","extract_color","member_name","attr_name","addColor","fLineColor","fLineWidth","fLineStyle","fFillColor","fFillStyle","fMarkerColor","fMarkerStyle","fMarkerSize","fTextColor","fTextAlign","fTextAngle","fTextSize","drawNextSnap","_snaps_map","fDummy","redrawPadSnap","ppainter","fDrawable","decodeOptions","addPadButtons","webSnapIds","kNone","kObject","kColors","kStyle","kPalette","fKind","ListOfColors","fString","palette","custom_palette","ColorPalette","clTFrame","$dummy","findSnap","onlyid","check","checkid","document","title","mainid","use_openui","brlayout","BrowserLayout","setDom","drawing_divid","registerForResize","onCanvasUpdated","isanyfound","isanyremove","removePadButtons","createImage","_this6","produceImage","separ","itemContextMenu","rrr","getBoundingClientRect","clientX","left","clientY","top","postponePromise","selkind","selp","full_canvas","filename","imgdata","browser","qt5","qt6","cef3","saveFile","prSVG","encodeURIComponent","findActivePad","file_format","args","_this7","use_frame","items","defs","prnt","insertBefore","firstChild","btns_node","btns_prnt","parentNode","btns_next","nextSibling","access3dKind","can3d","Embed","canvas","render3D","renderer","domElement","_renderer","sz2","getSizeFor3d","dataUrl","toDataURL","foreign","svg_frame","frame_node","frame_next","img","insert","reset_tranform","compressSVG","nsSVG","innerHTML","svgToImage","clickPadButton","funcname","closeMenu","getDimension","shown","getClassName","getObjectName","done","prs","clickButton","addPadButton","btn","tooltip","keyname","ToolBar","_buttons","cp","is_online","PadButtonsHandler","frame_painter","sign","getV","getRect","user","DrawOptions","GlobalColors","LocalColors","IgnorePalette","fLogx","fLogy","fLogz","fGridx","fGridy","fTickx","fTicky","draw","matchObjectType","clTPad","RCanvasPainter","tooltip_allowed","Tooltip","v7canvas","_submreq","_changed_layout","setLayoutKind","getCanvasName","replace","getLayoutKind","origin","main_selector","changeLayout","layout_kind","sidebar2","sidebar","removeChild","html","appendChild","GridDisplay","getGridFrame","resize","toggleProjection","proj_painter","X","Y","showUI5ProjectionArea","layout","drawProjection","drawInSidePanel","canv","sel","testUI5","showMessage","msg","showProgress","saveCanvasAsFile","sendSaveCommand","canSendWebSocket","canSend","send","closeWebsocket","close","useWebsocket","setReceiver","connect","websocketTimeout","_tmouts","onWebsocketOpened","onWebsocketClosed","closeCurrentWindow","onWebsocketMsg","p1","parse","resizeBrowser","catch","err","showConsoleError","redrawObject","processDrawableReply","cmdid","cmd","reply","showUI5Panel","window_path","conn","createNewInstance","cpainter","panel_handle","panel_name","onWebsocketError","hist","that","showSection","_requests","prevreq","_tm","_nextreq","_nextreqid","reqid","_kind","_painter","_method","submitMenuRequest","menukind","menureqid","submitExec","exec","subelem","processChanges","activateGed","hasStatus","hp","getHPainter","hasStatusLine","state","createStatusLine","showCanvasStatus","msgs","showStatus","hasGed","hasContent","removeGed","ged_view","getController","cleanupGed","destroy","deleteContent","getUi5PanelData","jsroot","core","toJSON","loadScript","rb","getColorExec","createBrowserBtns","ToolbarIcons","createSVG","diamand","toggleKind","circle","cross","setBrowserContent","setBrowserTitle","toggleBrowserKind","loadOpenui5","sap","ui","require","JSONModel","XMLView","oModel","viewName","viewData","oGed","setModel","placeAt","padEventsReceiver","bind","produceJSON","fullW","fullH","resizeWindow","can","nocanvas","normal_canvas","drawRPadSnapshot","ensureRCanvas","_x","_x2","_ensureRCanvas","apply","frame_kind","getDom","reject","Error","drawRFrameTitle","fx","fy","fw","ph","title_width","textFont","title_margin","title_height","fText","minwidth","minheight","no_change_x","drawRFont","font","fSrc","p2","lastIndexOf","base64","fDefault","drawRAxis","drawRFrame","registerMethods","extractRColor","rcolor","getContourIndex","zc","cntr","fContour","mid","l","r","fCustomContour","getContourColor","zindx","getContour","deleteContour","calcColor","entry1","entry2","dist","r1","r2","col1","d3_rgb","col2","g","b","createPaletteColors","setFullRange","createContour","nlevels","zminpositive","colzmin","colzmax","logmin","dz","level"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["../node_modules/jsroot/modules/base/RObjectPainter.mjs","../node_modules/jsroot/modules/gpad/RAxisPainter.mjs","../node_modules/jsroot/modules/gpad/RFramePainter.mjs","../node_modules/jsroot/modules/gpad/RPadPainter.mjs","../node_modules/jsroot/modules/gpad/RCanvasPainter.mjs"],"sourcesContent":["import { isStr, isFunc, nsREX, settings, isNodeJs, isBatchMode } from '../core.mjs';\nimport { FontHandler } from './FontHandler.mjs';\nimport { ObjectPainter } from './ObjectPainter.mjs';\nimport { color as d3_color } from '../d3.mjs';\n\n\nconst kNormal = 1, /* kLessTraffic = 2, */ kOffline = 3;\n\nclass RObjectPainter extends ObjectPainter {\n\n   constructor(dom, obj, opt, csstype) {\n      super(dom, obj, opt);\n      this.csstype = csstype;\n   }\n\n   /** @summary Add painter to pad list of painters\n    * @desc For RCanvas also handles common style\n    * @protected */\n   addToPadPrimitives() {\n      const pp = super.addToPadPrimitives();\n\n      if (pp && !this.rstyle && pp.next_rstyle)\n         this.rstyle = pp.next_rstyle;\n\n      return pp;\n   }\n\n   /** @summary Evaluate v7 attributes using fAttr storage and configured RStyle */\n   v7EvalAttr(name, dflt) {\n      const obj = this.getObject();\n      if (!obj) return dflt;\n      if (this.cssprefix) name = this.cssprefix + name;\n\n      const type_check = res => {\n         if (dflt === undefined) return res;\n         const typ1 = typeof dflt, typ2 = typeof res;\n         if (typ1 === typ2) return res;\n         if (typ1 === 'boolean') {\n            if (typ2 === 'string') return (res !== '') && (res !== '0') && (res !== 'no') && (res !== 'off');\n            return !!res;\n         }\n         if ((typ1 === 'number') && (typ2 === 'string'))\n            return parseFloat(res);\n         return res;\n      };\n\n      if (obj.fAttr?.m) {\n         const value = obj.fAttr.m[name];\n         if (value) return type_check(value.v); // found value direct in attributes\n      }\n\n      if (this.rstyle?.fBlocks) {\n         const blks = this.rstyle.fBlocks;\n         for (let k = 0; k < blks.length; ++k) {\n            const block = blks[k],\n                  match = (this.csstype && (block.selector === this.csstype)) ||\n                          (obj.fId && (block.selector === ('#' + obj.fId))) ||\n                          (obj.fCssClass && (block.selector === ('.' + obj.fCssClass)));\n\n            if (match && block.map?.m) {\n               const value = block.map.m[name.toLowerCase()];\n               if (value) return type_check(value.v);\n            }\n         }\n      }\n\n      return dflt;\n   }\n\n   /** @summary Set v7 attributes value */\n   v7SetAttr(name, value) {\n      const obj = this.getObject();\n      if (this.cssprefix) name = this.cssprefix + name;\n\n      if (obj?.fAttr?.m)\n         obj.fAttr.m[name] = { v: value };\n   }\n\n   /** @summary Decode pad length from string, return pixel value */\n   v7EvalLength(name, sizepx, dflt) {\n      if (sizepx <= 0) sizepx = 1;\n\n      const value = this.v7EvalAttr(name);\n\n      if (value === undefined)\n         return Math.round(dflt*sizepx);\n\n      if (typeof value === 'number')\n         return Math.round(value*sizepx);\n\n      if (value === null)\n         return 0;\n\n      let norm = 0, px = 0, val = value, operand = 0, pos = 0;\n\n      while (val) {\n         // skip empty spaces\n         while ((pos < val.length) && ((val[pos] === ' ') || (val[pos] === '\\t')))\n            ++pos;\n\n         if (pos >= val.length)\n            break;\n\n         if ((val[pos] === '-') || (val[pos] === '+')) {\n            if (operand) {\n               console.log('Fail to parse RPadLength ' + value);\n               return dflt;\n            }\n            operand = (val[pos] === '-') ? -1 : 1;\n            pos++;\n            continue;\n         }\n\n         if (pos > 0) { val = val.slice(pos); pos = 0; }\n\n         while ((pos < val.length) && (((val[pos] >= '0') && (val[pos] <= '9')) || (val[pos] === '.'))) pos++;\n\n         const v = parseFloat(val.slice(0, pos));\n         if (!Number.isFinite(v)) {\n            console.log(`Fail to parse RPadLength ${value}`);\n            return Math.round(dflt*sizepx);\n         }\n\n         val = val.slice(pos);\n         pos = 0;\n         if (!operand) operand = 1;\n         if (val && (val[0] === '%')) {\n            val = val.slice(1);\n            norm += operand*v*0.01;\n         } else if ((val.length > 1) && (val[0] === 'p') && (val[1] === 'x')) {\n            val = val.slice(2);\n            px += operand*v;\n         } else\n            norm += operand*v;\n\n         operand = 0;\n      }\n\n      return Math.round(norm*sizepx + px);\n   }\n\n   /** @summary Evaluate RColor using attribute storage and configured RStyle */\n   v7EvalColor(name, dflt) {\n      let val = this.v7EvalAttr(name, '');\n      if (!val || !isStr(val)) return dflt;\n\n      if (val === 'auto') {\n         const pp = this.getPadPainter();\n         if (pp?._auto_color_cnt !== undefined) {\n            const pal = pp.getHistPalette(),\n                  cnt = pp._auto_color_cnt++;\n            let num = pp._num_primitives - 1;\n            if (num < 2) num = 2;\n            val = pal ? pal.getColorOrdinal((cnt % num) / num) : 'blue';\n            if (!this._auto_colors) this._auto_colors = {};\n            this._auto_colors[name] = val;\n         } else if (this._auto_colors && this._auto_colors[name])\n            val = this._auto_colors[name];\n         else {\n            console.error(`Autocolor ${name} not defined yet - please check code`);\n            val = '';\n         }\n      } else if (val[0] === '[') {\n         const ordinal = parseFloat(val.slice(1, val.length-1));\n         val = 'black';\n         if (Number.isFinite(ordinal)) {\n             const pal = this.getPadPainter()?.getHistPalette();\n             if (pal) val = pal.getColorOrdinal(ordinal);\n         }\n      }\n\n      // to make colors similar in node and in pupperteer\n      if ((val[0] === '#') && (isNodeJs() || (isBatchMode() && settings.ApproxTextSize))) {\n         const col = d3_color(val);\n         if (col.opacity !== 1)\n            col.opacity = col.opacity.toFixed(2);\n         return col.formatRgb();\n      }\n\n      return val;\n   }\n\n   /** @summary Evaluate RAttrText properties\n     * @return {Object} FontHandler, can be used directly for the text drawing */\n   v7EvalFont(name, dflts, fontScale) {\n      if (!dflts)\n         dflts = {};\n      else if (typeof dflts === 'number')\n         dflts = { size: dflts };\n\n      const pp = this.getPadPainter(),\n            rfont = pp?._dfltRFont || { fFamily: 'Arial', fStyle: '', fWeight: '' },\n            text_angle = this.v7EvalAttr(name + '_angle', 0),\n            text_align = this.v7EvalAttr(name + '_align', dflts.align || 'none'),\n            text_color = this.v7EvalColor(name + '_color', dflts.color || 'none'),\n            font_family = this.v7EvalAttr(name + '_font_family', rfont.fFamily || 'Arial'),\n            font_style = this.v7EvalAttr(name + '_font_style', rfont.fStyle || ''),\n            font_weight = this.v7EvalAttr(name + '_font_weight', rfont.fWeight || '');\n       let text_size = this.v7EvalAttr(name + '_size', dflts.size || 12);\n\n       if (isStr(text_size)) text_size = parseFloat(text_size);\n       if (!Number.isFinite(text_size) || (text_size <= 0)) text_size = 12;\n       if (!fontScale) fontScale = pp?.getPadHeight() || 100;\n\n       const handler = new FontHandler(null, text_size, fontScale);\n       handler.setNameStyleWeight(font_family, font_style, font_weight);\n\n       if (text_angle) handler.setAngle(360 - text_angle);\n       if (text_align !== 'none') handler.setAlign(text_align);\n       if (text_color !== 'none') handler.setColor(text_color);\n\n       return handler;\n    }\n\n   /** @summary Create this.fillatt object based on v7 fill attributes */\n   createv7AttFill(prefix) {\n      if (!prefix || !isStr(prefix)) prefix = 'fill_';\n\n      const color = this.v7EvalColor(prefix + 'color', ''),\n            pattern = this.v7EvalAttr(prefix + 'style', 0);\n\n      this.createAttFill({ pattern, color, color_as_svg: true });\n   }\n\n   /** @summary Create this.lineatt object based on v7 line attributes */\n   createv7AttLine(prefix) {\n      if (!prefix || !isStr(prefix)) prefix = 'line_';\n\n      const color = this.v7EvalColor(prefix + 'color', 'black'),\n            width = this.v7EvalAttr(prefix + 'width', 1),\n            style = this.v7EvalAttr(prefix + 'style', 1);\n      let pattern = this.v7EvalAttr(prefix + 'pattern');\n      if (pattern && isNodeJs())\n         pattern = pattern.split(',').join(', ');\n\n      this.createAttLine({ color, width, style, pattern });\n\n      if (prefix === 'border_')\n         this.lineatt.setBorder(this.v7EvalAttr(prefix + 'rx', 0), this.v7EvalAttr(prefix + 'ry', 0));\n   }\n\n    /** @summary Create this.markeratt object based on v7 attributes */\n   createv7AttMarker(prefix) {\n      if (!prefix || !isStr(prefix)) prefix = 'marker_';\n\n      const color = this.v7EvalColor(prefix + 'color', 'black'),\n            size = this.v7EvalAttr(prefix + 'size', 0.01),\n            style = this.v7EvalAttr(prefix + 'style', 1),\n            refsize = (size >= 1) ? 1 : (this.getPadPainter()?.getPadHeight() || 100);\n\n      this.createAttMarker({ color, size, style, refsize });\n   }\n\n   /** @summary Create RChangeAttr, which can be applied on the server side\n     * @private */\n   v7AttrChange(req, name, value, kind) {\n      if (!this.snapid)\n         return false;\n\n      if (!req._typename) {\n         req._typename = `${nsREX}RChangeAttrRequest`;\n         req.ids = [];\n         req.names = [];\n         req.values = [];\n         req.update = true;\n      }\n\n      if (this.cssprefix) name = this.cssprefix + name;\n      req.ids.push(this.snapid);\n      req.names.push(name);\n      let obj = null;\n\n      if ((value === null) || (value === undefined)) {\n        if (!kind) kind = 'none';\n        if (kind !== 'none') console.error(`Trying to set ${kind} for none value`);\n      }\n\n      if (!kind) {\n         switch (typeof value) {\n            case 'number': kind = 'double'; break;\n            case 'boolean': kind = 'boolean'; break;\n         }\n      }\n\n      obj = { _typename: `${nsREX}RAttrMap::` };\n      switch (kind) {\n         case 'none': obj._typename += 'NoValue_t'; break;\n         case 'boolean': obj._typename += 'BoolValue_t'; obj.v = !!value; break;\n         case 'int': obj._typename += 'IntValue_t'; obj.v = parseInt(value); break;\n         case 'double': obj._typename += 'DoubleValue_t'; obj.v = parseFloat(value); break;\n         default: obj._typename += 'StringValue_t'; obj.v = isStr(value) ? value : JSON.stringify(value); break;\n      }\n\n      req.values.push(obj);\n      return true;\n   }\n\n   /** @summary Sends accumulated attribute changes to server */\n   v7SendAttrChanges(req, do_update) {\n      const canp = this.getCanvPainter();\n      if (canp && req?._typename) {\n         if (do_update !== undefined)\n            req.update = !!do_update;\n         canp.v7SubmitRequest('', req);\n      }\n   }\n\n   /** @summary Submit request to server-side drawable\n    * @param kind defines request kind, only single request a time can be submitted\n    * @param req is object derived from DrawableRequest, including correct _typename\n    * @param method is method of painter object which will be called when getting reply */\n   v7SubmitRequest(kind, req, method) {\n      const canp = this.getCanvPainter();\n      if (!isFunc(canp?.submitDrawableRequest)) return null;\n\n      // special situation when snapid not yet assigned - just keep ref until snapid is there\n      // maybe keep full list - for now not clear if really needed\n      if (!this.snapid) {\n         this._pending_request = { kind, req, method };\n         return req;\n      }\n\n      return canp.submitDrawableRequest(kind, req, this, method);\n   }\n\n   /** @summary Assign snapid to the painter\n     * @desc Overwrite default method */\n   assignSnapId(id) {\n      this.snapid = id;\n      if (this.snapid && this._pending_request) {\n         const p = this._pending_request;\n         this.v7SubmitRequest(p.kind, p.req, p.method);\n         delete this._pending_request;\n      }\n   }\n\n   /** @summary Return communication mode with the server\n     * @desc\n     * kOffline means no server there,\n     * kLessTraffic advise not to send commands if offline functionality available\n     * kNormal is standard functionality with RCanvas on server side */\n   v7CommMode() {\n      const canp = this.getCanvPainter();\n      if (!canp || !canp.submitDrawableRequest || !canp._websocket)\n         return kOffline;\n\n      return kNormal;\n   }\n\n   v7NormalMode() { return this.v7CommMode() === kNormal; }\n\n   v7OfflineMode() { return this.v7CommMode() === kOffline; }\n\n} // class RObjectPainter\n\nexport { RObjectPainter };\n","import { select as d3_select, pointer as d3_pointer,\n         drag as d3_drag, timeFormat as d3_timeFormat,\n         scaleTime as d3_scaleTime, scaleSymlog as d3_scaleSymlog,\n         scaleLog as d3_scaleLog, scaleLinear as d3_scaleLinear } from '../d3.mjs';\nimport { settings, isFunc, urlClassPrefix } from '../core.mjs';\nimport { makeTranslate, addHighlightStyle } from '../base/BasePainter.mjs';\nimport { AxisPainterMethods, chooseTimeFormat } from './TAxisPainter.mjs';\nimport { createMenu } from '../gui/menu.mjs';\nimport { addDragHandler } from './TFramePainter.mjs';\nimport { kAxisLabels, kAxisNormal, kAxisTime } from '../base/ObjectPainter.mjs';\nimport { RObjectPainter } from '../base/RObjectPainter.mjs';\n\n\n/**\n * @summary Axis painter for v7\n *\n * @private\n */\n\nclass RAxisPainter extends RObjectPainter {\n\n   /** @summary constructor */\n   constructor(dom, arg1, axis, cssprefix) {\n      const drawable = cssprefix ? arg1.getObject() : arg1;\n      super(dom, drawable, '', cssprefix ? arg1.csstype : 'axis');\n      Object.assign(this, AxisPainterMethods);\n      this.initAxisPainter();\n\n      this.axis = axis;\n      if (cssprefix) { // drawing from the frame\n         this.embedded = true; // indicate that painter embedded into the histo painter\n         // this.csstype = arg1.csstype; // for the moment only via frame one can set axis attributes\n         this.cssprefix = cssprefix;\n         this.rstyle = arg1.rstyle;\n      } else {\n         // this.csstype = 'axis';\n         this.cssprefix = 'axis_';\n      }\n   }\n\n   /** @summary cleanup painter */\n   cleanup() {\n      delete this.axis;\n      delete this.axis_g;\n      this.cleanupAxisPainter();\n      super.cleanup();\n   }\n\n   /** @summary Use in GED to identify kind of axis */\n   getAxisType() { return 'RAttrAxis'; }\n\n   /** @summary Configure only base parameters, later same handle will be used for drawing  */\n   configureZAxis(name, fp) {\n      this.name = name;\n      this.kind = kAxisNormal;\n      this.log = false;\n      const _log = this.v7EvalAttr('log', 0);\n      if (_log) {\n         this.log = true;\n         this.logbase = 10;\n         if (Math.abs(_log - Math.exp(1)) < 0.1)\n            this.logbase = Math.exp(1);\n         else if (_log > 1.9)\n            this.logbase = Math.round(_log);\n      }\n      fp.logz = this.log;\n   }\n\n   /** @summary Configure axis painter\n     * @desc Axis can be drawn inside frame <g> group with offset to 0 point for the frame\n     * Therefore one should distinguish when calculated coordinates used for axis drawing itself or for calculation of frame coordinates\n     * @private */\n   configureAxis(name, min, max, smin, smax, vertical, frame_range, axis_range, opts) {\n      if (!opts) opts = {};\n      this.name = name;\n      this.full_min = min;\n      this.full_max = max;\n      this.kind = kAxisNormal;\n      this.vertical = vertical;\n      this.log = false;\n      const _log = this.v7EvalAttr('log', 0),\n            _symlog = this.v7EvalAttr('symlog', 0);\n      this.reverse = opts.reverse || false;\n\n      if (this.v7EvalAttr('time')) {\n         this.kind = kAxisTime;\n         this.timeoffset = 0;\n         let toffset = this.v7EvalAttr('timeOffset');\n         if (toffset !== undefined) {\n            toffset = parseFloat(toffset);\n            if (Number.isFinite(toffset)) this.timeoffset = toffset*1000;\n         }\n      } else if (this.axis?.fLabelsIndex) {\n         this.kind = kAxisLabels;\n         delete this.own_labels;\n      } else if (opts.labels)\n         this.kind = kAxisLabels;\n       else\n         this.kind = kAxisNormal;\n\n      if (this.kind === kAxisTime)\n         this.func = d3_scaleTime().domain([this.convertDate(smin), this.convertDate(smax)]);\n      else if (_symlog && (_symlog > 0)) {\n         this.symlog = _symlog;\n         this.func = d3_scaleSymlog().constant(_symlog).domain([smin, smax]);\n      } else if (_log) {\n         if (smax <= 0) smax = 1;\n         if ((smin <= 0) || (smin >= smax))\n            smin = smax * 0.0001;\n         this.log = true;\n         this.logbase = 10;\n         if (Math.abs(_log - Math.exp(1)) < 0.1)\n            this.logbase = Math.exp(1);\n         else if (_log > 1.9)\n            this.logbase = Math.round(_log);\n         this.func = d3_scaleLog().base(this.logbase).domain([smin, smax]);\n      } else\n         this.func = d3_scaleLinear().domain([smin, smax]);\n\n      this.scale_min = smin;\n      this.scale_max = smax;\n\n      this.gr_range = axis_range || 1000; // when not specified, one can ignore it\n\n      const range = frame_range ?? [0, this.gr_range];\n\n      this.axis_shift = range[1] - this.gr_range;\n\n      if (this.reverse)\n         this.func.range([range[1], range[0]]);\n      else\n         this.func.range(range);\n\n      if (this.kind === kAxisTime)\n         this.gr = val => this.func(this.convertDate(val));\n      else if (this.log)\n         this.gr = val => (val < this.scale_min) ? (this.vertical ? this.func.range()[0]+5 : -5) : this.func(val);\n      else\n         this.gr = this.func;\n\n      delete this.format;// remove formatting func\n\n      const ndiv = this.v7EvalAttr('ndiv', 508);\n\n      this.nticks = ndiv % 100;\n      this.nticks2 = (ndiv % 10000 - this.nticks) / 100;\n      this.nticks3 = Math.floor(ndiv/10000);\n\n      if (this.nticks > 20) this.nticks = 20;\n\n      const gr_range = Math.abs(this.gr_range) || 100;\n\n      if (this.kind === kAxisTime) {\n         if (this.nticks > 8) this.nticks = 8;\n\n         const scale_range = this.scale_max - this.scale_min,\n               tf2 = chooseTimeFormat(scale_range / gr_range, false);\n         let tf1 = this.v7EvalAttr('timeFormat', '');\n\n         if (!tf1 || (scale_range < 0.1 * (this.full_max - this.full_min)))\n            tf1 = chooseTimeFormat(scale_range / this.nticks, true);\n\n         this.tfunc1 = this.tfunc2 = d3_timeFormat(tf1);\n         if (tf2 !== tf1)\n            this.tfunc2 = d3_timeFormat(tf2);\n\n         this.format = this.formatTime;\n      } else if (this.log) {\n         if (this.nticks2 > 1) {\n            this.nticks *= this.nticks2; // all log ticks (major or minor) created centrally\n            this.nticks2 = 1;\n         }\n         this.noexp = this.v7EvalAttr('noexp', false);\n         if ((this.scale_max < 300) && (this.scale_min > 0.3) && (this.logbase === 10)) this.noexp = true;\n         this.moreloglabels = this.v7EvalAttr('moreloglbls', false);\n\n         this.format = this.formatLog;\n      } else if (this.kind === kAxisLabels) {\n         this.nticks = 50; // for text output allow max 50 names\n         const scale_range = this.scale_max - this.scale_min;\n         if (this.nticks > scale_range)\n            this.nticks = Math.round(scale_range);\n         this.nticks2 = 1;\n\n         this.format = this.formatLabels;\n      } else {\n         this.order = 0;\n         this.ndig = 0;\n         this.format = this.formatNormal;\n      }\n   }\n\n   /** @summary Return scale min */\n   getScaleMin() {\n      return this.func ? this.func.domain()[0] : 0;\n   }\n\n   /** @summary Return scale max */\n   getScaleMax() {\n      return this.func ? this.func.domain()[1] : 0;\n   }\n\n   /** @summary Provide label for axis value */\n   formatLabels(d) {\n      const indx = Math.round(d);\n      if (this.axis?.fLabelsIndex) {\n         if ((indx < 0) || (indx >= this.axis.fNBinsNoOver)) return null;\n         for (let i = 0; i < this.axis.fLabelsIndex.length; ++i) {\n            const pair = this.axis.fLabelsIndex[i];\n            if (pair.second === indx) return pair.first;\n         }\n      } else {\n         const labels = this.getObject().fLabels;\n         if (labels && (indx >= 0) && (indx < labels.length))\n            return labels[indx];\n      }\n      return null;\n   }\n\n   /** @summary Creates array with minor/middle/major ticks */\n   createTicks(only_major_as_array, optionNoexp, optionNoopt, optionInt) {\n      if (optionNoopt && this.nticks && (this.kind === kAxisNormal)) this.noticksopt = true;\n\n      const ticks = this.produceTicks(this.nticks),\n            handle = { nminor: 0, nmiddle: 0, nmajor: 0, func: this.func, minor: ticks, middle: ticks, major: ticks };\n\n      if (only_major_as_array) {\n         const res = handle.major, delta = (this.scale_max - this.scale_min)*1e-5;\n         if (res[0] > this.scale_min + delta) res.unshift(this.scale_min);\n         if (res[res.length-1] < this.scale_max - delta) res.push(this.scale_max);\n         return res;\n      }\n\n      if ((this.nticks2 > 1) && (!this.log || (this.logbase === 10))) {\n         handle.minor = handle.middle = this.produceTicks(handle.major.length, this.nticks2);\n\n         const gr_range = Math.abs(this.func.range()[1] - this.func.range()[0]);\n\n         // avoid black filling by middle-size\n         if ((handle.middle.length <= handle.major.length) || (handle.middle.length > gr_range/3.5))\n            handle.minor = handle.middle = handle.major;\n          else if ((this.nticks3 > 1) && !this.log) {\n            handle.minor = this.produceTicks(handle.middle.length, this.nticks3);\n            if ((handle.minor.length <= handle.middle.length) || (handle.minor.length > gr_range/1.7)) handle.minor = handle.middle;\n         }\n      }\n\n      handle.reset = function() {\n         this.nminor = this.nmiddle = this.nmajor = 0;\n      };\n\n      handle.next = function(doround) {\n         if (this.nminor >= this.minor.length) return false;\n\n         this.tick = this.minor[this.nminor++];\n         this.grpos = this.func(this.tick);\n         if (doround) this.grpos = Math.round(this.grpos);\n         this.kind = 3;\n\n         if ((this.nmiddle < this.middle.length) && (Math.abs(this.grpos - this.func(this.middle[this.nmiddle])) < 1)) {\n            this.nmiddle++;\n            this.kind = 2;\n         }\n\n         if ((this.nmajor < this.major.length) && (Math.abs(this.grpos - this.func(this.major[this.nmajor])) < 1)) {\n            this.nmajor++;\n            this.kind = 1;\n         }\n         return true;\n      };\n\n      handle.last_major = function() {\n         return (this.kind !== 1) ? false : this.nmajor === this.major.length;\n      };\n\n      handle.next_major_grpos = function() {\n         if (this.nmajor >= this.major.length) return null;\n         return this.func(this.major[this.nmajor]);\n      };\n\n      handle.get_modifier = function() { return null; };\n\n      this.order = 0;\n      this.ndig = 0;\n\n      // at the moment when drawing labels, we can try to find most optimal text representation for them\n\n      if ((this.kind === kAxisNormal) && !this.log && (handle.major.length > 0)) {\n         let maxorder = 0, minorder = 0, exclorder3 = false;\n\n         if (!optionNoexp) {\n            const maxtick = Math.max(Math.abs(handle.major[0]), Math.abs(handle.major[handle.major.length-1])),\n                mintick = Math.min(Math.abs(handle.major[0]), Math.abs(handle.major[handle.major.length-1])),\n                ord1 = (maxtick > 0) ? Math.round(Math.log10(maxtick)/3)*3 : 0,\n                ord2 = (mintick > 0) ? Math.round(Math.log10(mintick)/3)*3 : 0;\n\n             exclorder3 = (maxtick < 2e4); // do not show 10^3 for values below 20000\n\n             if (maxtick || mintick) {\n                maxorder = Math.max(ord1, ord2) + 3;\n                minorder = Math.min(ord1, ord2) - 3;\n             }\n         }\n\n         // now try to find best combination of order and ndig for labels\n\n         let bestorder = 0, bestndig = this.ndig, bestlen = 1e10;\n\n         for (let order = minorder; order <= maxorder; order+=3) {\n            if (exclorder3 && (order===3)) continue;\n            this.order = order;\n            this.ndig = 0;\n            let lbls = [], indx = 0, totallen = 0;\n            while (indx<handle.major.length) {\n               const lbl = this.format(handle.major[indx], true);\n               if (lbls.indexOf(lbl) < 0) {\n                  lbls.push(lbl);\n                  totallen += lbl.length;\n                  indx++;\n                  continue;\n               }\n               if (++this.ndig > 11) break; // not too many digits, anyway it will be exponential\n               lbls = []; indx = 0; totallen = 0;\n            }\n\n            // for order === 0 we should virtually remove '0.' and extra label on top\n            if (!order && (this.ndig < 4))\n               totallen -= (handle.major.length * 2 + 3);\n\n            if (totallen < bestlen) {\n               bestlen = totallen;\n               bestorder = this.order;\n               bestndig = this.ndig;\n            }\n         }\n\n         this.order = bestorder;\n         this.ndig = bestndig;\n\n         if (optionInt) {\n            if (this.order) console.warn(`Axis painter - integer labels are configured, but axis order ${this.order} is preferable`);\n            if (this.ndig) console.warn(`Axis painter - integer labels are configured, but ${this.ndig} decimal digits are required`);\n            this.ndig = 0;\n            this.order = 0;\n         }\n      }\n\n      return handle;\n   }\n\n   /** @summary Is labels should be centered */\n   isCenteredLabels() {\n      if (this.kind === kAxisLabels) return true;\n      if (this.kind === 'log') return false;\n      return this.v7EvalAttr('labels_center', false);\n   }\n\n   /** @summary Is labels should be rotated */\n   isRotateLabels() { return false; }\n\n   /** @summary Used to move axis labels instead of zooming\n     * @private */\n   processLabelsMove(arg, pos) {\n      if (this.optionUnlab || !this.axis_g) return false;\n\n      const label_g = this.axis_g.select('.axis_labels');\n      if (!label_g || (label_g.size() !== 1)) return false;\n\n      if (arg === 'start') {\n         // no moving without labels\n         const box = label_g.node().getBBox();\n\n         label_g.append('rect')\n                 .classed('drag', true)\n                 .attr('x', box.x)\n                 .attr('y', box.y)\n                 .attr('width', box.width)\n                 .attr('height', box.height)\n                 .style('cursor', 'move')\n                 .call(addHighlightStyle, true);\n         if (this.vertical)\n            this.drag_pos0 = pos[0];\n          else\n            this.drag_pos0 = pos[1];\n\n\n         return true;\n      }\n\n      let offset = label_g.property('fix_offset');\n\n      if (this.vertical) {\n         offset += Math.round(pos[0] - this.drag_pos0);\n         label_g.attr('transform', `translate(${offset})`);\n      } else {\n         offset += Math.round(pos[1] - this.drag_pos0);\n         label_g.attr('transform', `translate(0,${offset})`);\n      }\n      if (!offset) label_g.attr('transform', null);\n\n      if (arg === 'stop') {\n         label_g.select('rect.drag').remove();\n         delete this.drag_pos0;\n         if (offset !== label_g.property('fix_offset')) {\n            label_g.property('fix_offset', offset);\n            const side = label_g.property('side') || 1;\n            this.labelsOffset = offset / (this.vertical ? -side : side);\n            this.changeAxisAttr(1, 'labels_offset', this.labelsOffset / this.scalingSize);\n         }\n      }\n\n      return true;\n   }\n\n   /** @summary Add interactive elements to draw axes title */\n   addTitleDrag(title_g, side) {\n      if (!settings.MoveResize || this.isBatchMode()) return;\n\n      let drag_rect = null,\n          acc_x, acc_y, new_x, new_y, alt_pos, curr_indx;\n\n      const drag_move = d3_drag().subject(Object);\n\n      drag_move\n         .on('start', evnt => {\n            evnt.sourceEvent.preventDefault();\n            evnt.sourceEvent.stopPropagation();\n\n            const box = title_g.node().getBBox(), // check that elements visible, request precise value\n                title_length = this.vertical ? box.height : box.width;\n\n            new_x = acc_x = title_g.property('shift_x');\n            new_y = acc_y = title_g.property('shift_y');\n\n            if (this.titlePos === 'center')\n               curr_indx = 1;\n            else\n               curr_indx = (this.titlePos === 'left') ? 0 : 2;\n\n            // let d = ((this.gr_range > 0) && this.vertical) ? title_length : 0;\n            alt_pos = [0, this.gr_range/2, this.gr_range]; // possible positions\n            const off = this.vertical ? -title_length : title_length,\n                swap = this.isReverseAxis() ? 2 : 0;\n            if (this.title_align === 'middle') {\n               alt_pos[swap] += off/2;\n               alt_pos[2-swap] -= off/2;\n            } else if ((this.title_align === 'begin') ^ this.isTitleRotated()) {\n               alt_pos[1] -= off/2;\n               alt_pos[2-swap] -= off;\n            } else { // end\n               alt_pos[swap] += off;\n               alt_pos[1] += off/2;\n            }\n\n            alt_pos[curr_indx] = this.vertical ? acc_y : acc_x;\n\n            drag_rect = title_g.append('rect')\n                 .attr('x', box.x)\n                 .attr('y', box.y)\n                 .attr('width', box.width)\n                 .attr('height', box.height)\n                 .style('cursor', 'move')\n                 .call(addHighlightStyle, true);\n              // .style('pointer-events','none'); // let forward double click to underlying elements\n          }).on('drag', evnt => {\n               if (!drag_rect) return;\n\n               evnt.sourceEvent.preventDefault();\n               evnt.sourceEvent.stopPropagation();\n\n               acc_x += evnt.dx;\n               acc_y += evnt.dy;\n\n               const p = this.vertical ? acc_y : acc_x;\n               let set_x, set_y, besti = 0;\n\n               for (let i = 1; i < 3; ++i)\n                  if (Math.abs(p - alt_pos[i]) < Math.abs(p - alt_pos[besti])) besti = i;\n\n               if (this.vertical) {\n                  set_x = acc_x;\n                  set_y = alt_pos[besti];\n               } else {\n                  set_x = alt_pos[besti];\n                  set_y = acc_y;\n               }\n\n               new_x = set_x; new_y = set_y; curr_indx = besti;\n               makeTranslate(title_g, new_x, new_y);\n          }).on('end', evnt => {\n               if (!drag_rect) return;\n\n               evnt.sourceEvent.preventDefault();\n               evnt.sourceEvent.stopPropagation();\n\n               const basepos = title_g.property('basepos') || 0;\n\n               title_g.property('shift_x', new_x)\n                      .property('shift_y', new_y);\n\n               this.titleOffset = (this.vertical ? basepos - new_x : new_y - basepos) * side;\n\n               if (curr_indx === 1)\n                  this.titlePos = 'center';\n                else if (curr_indx === 0)\n                  this.titlePos = 'left';\n                else\n                  this.titlePos = 'right';\n\n               this.changeAxisAttr(0, 'title_position', this.titlePos, 'title_offset', this.titleOffset / this.scalingSize);\n\n               drag_rect.remove();\n               drag_rect = null;\n            });\n\n      title_g.style('cursor', 'move').call(drag_move);\n   }\n\n   /** @summary checks if value inside graphical range, taking into account delta */\n   isInsideGrRange(pos, delta1, delta2) {\n      if (!delta1) delta1 = 0;\n      if (delta2 === undefined) delta2 = delta1;\n      if (this.gr_range < 0)\n         return (pos >= this.gr_range - delta2) && (pos <= delta1);\n      return (pos >= -delta1) && (pos <= this.gr_range + delta2);\n   }\n\n   /** @summary returns graphical range */\n   getGrRange(delta) {\n      if (!delta) delta = 0;\n      if (this.gr_range < 0)\n         return this.gr_range - delta;\n      return this.gr_range + delta;\n   }\n\n   /** @summary If axis direction is negative coordinates direction */\n   isReverseAxis() {\n      return !this.vertical !== (this.getGrRange() > 0);\n   }\n\n   /** @summary Draw axis ticks\n     * @private */\n   drawMainLine(axis_g) {\n      let ending = '';\n\n      if (this.endingSize && this.endingStyle) {\n         let sz = (this.gr_range > 0) ? -this.endingSize : this.endingSize;\n         const sz7 = Math.round(sz*0.7);\n         sz = Math.round(sz);\n         if (this.vertical)\n            ending = `l${sz7},${sz}M0,${this.gr_range}l${-sz7},${sz}`;\n         else\n            ending = `l${sz},${sz7}M${this.gr_range},0l${sz},${-sz7}`;\n      }\n\n      axis_g.append('svg:path')\n            .attr('d', 'M0,0' + (this.vertical ? 'v' : 'h') + this.gr_range + ending)\n            .call(this.lineatt.func)\n            .style('fill', ending ? 'none' : null);\n   }\n\n   /** @summary Draw axis ticks\n     * @return {Object} with gaps on left and right side\n     * @private */\n   drawTicks(axis_g, side, main_draw) {\n      if (main_draw) this.ticks = [];\n\n      this.handle.reset();\n\n      let res = '', ticks_plusminus = 0;\n      if (this.ticksSide === 'both') {\n         side = 1;\n         ticks_plusminus = 1;\n      }\n\n      while (this.handle.next(true)) {\n         let h1 = Math.round(this.ticksSize/4), h2 = 0;\n\n         if (this.handle.kind < 3)\n            h1 = Math.round(this.ticksSize/2);\n\n         const grpos = this.handle.grpos - this.axis_shift;\n\n         if ((this.startingSize || this.endingSize) && !this.isInsideGrRange(grpos, -Math.abs(this.startingSize), -Math.abs(this.endingSize))) continue;\n\n         if (this.handle.kind === 1) {\n            // if not showing labels, not show large tick\n            if ((this.kind === kAxisLabels) || (this.format(this.handle.tick, true) !== null)) h1 = this.ticksSize;\n\n            if (main_draw) this.ticks.push(grpos); // keep graphical positions of major ticks\n         }\n\n         if (ticks_plusminus > 0)\n            h2 = -h1;\n         else if (side < 0) {\n            h2 = -h1; h1 = 0;\n         } else\n            h2 = 0;\n\n         res += this.vertical ? `M${h1},${grpos}H${h2}` : `M${grpos},${-h1}V${-h2}`;\n      }\n\n      if (res) {\n         axis_g.append('svg:path')\n               .attr('d', res)\n               .style('stroke', this.ticksColor || this.lineatt.color)\n               .style('stroke-width', !this.ticksWidth || (this.ticksWidth === 1) ? null : this.ticksWidth);\n       }\n\n       const gap0 = Math.round(0.25*this.ticksSize), gap = Math.round(1.25*this.ticksSize);\n       return { '-1': (side > 0) || ticks_plusminus ? gap : gap0,\n                  1: (side < 0) || ticks_plusminus ? gap : gap0 };\n   }\n\n   /** @summary Performs labels drawing\n     * @return {Promise} with gaps in both direction */\n   async drawLabels(axis_g, side, gaps) {\n      const center_lbls = this.isCenteredLabels(),\n            rotate_lbls = this.labelsFont.angle !== 0,\n            label_g = axis_g.append('svg:g').attr('class', 'axis_labels').property('side', side),\n            lbl_pos = this.handle.lbl_pos || this.handle.major;\n      let textscale = 1, maxtextlen = 0, lbls_tilt = false,\n          max_lbl_width = 0, max_lbl_height = 0;\n\n      // function called when text is drawn to analyze width, required to correctly scale all labels\n      function process_drawtext_ready(painter) {\n         max_lbl_width = Math.max(max_lbl_width, this.result_width);\n         max_lbl_height = Math.max(max_lbl_height, this.result_height);\n\n         const textwidth = this.result_width;\n\n         if (textwidth && ((!painter.vertical && !rotate_lbls) || (painter.vertical && rotate_lbls)) && !painter.log) {\n            let maxwidth = this.gap_before*0.45 + this.gap_after*0.45;\n            if (!this.gap_before) maxwidth = 0.9*this.gap_after; else\n            if (!this.gap_after) maxwidth = 0.9*this.gap_before;\n            textscale = Math.min(textscale, maxwidth / textwidth);\n         }\n\n         if ((textscale > 0.0001) && (textscale < 0.8) && !painter.vertical && !rotate_lbls && (maxtextlen > 5) && (side > 0))\n            lbls_tilt = true;\n\n         const scale = textscale * (lbls_tilt ? 3 : 1);\n         if ((scale > 0.0001) && (scale < 1))\n            painter.scaleTextDrawing(1/scale, label_g);\n      }\n\n      const fix_offset = Math.round((this.vertical ? -side : side) * this.labelsOffset),\n            fix_coord = Math.round((this.vertical ? -side : side) * gaps[side]);\n      let lastpos = 0;\n\n      if (fix_offset)\n         label_g.attr('transform', this.vertical ? `translate(${fix_offset})` : `translate(0,${fix_offset})`);\n\n      label_g.property('fix_offset', fix_offset);\n\n      return this.startTextDrawingAsync(this.labelsFont, 'font', label_g).then(() => {\n         for (let nmajor = 0; nmajor < lbl_pos.length; ++nmajor) {\n            const lbl = this.format(lbl_pos[nmajor], true);\n            if (lbl === null) continue;\n\n            const arg = { text: lbl, latex: 1, draw_g: label_g };\n            let pos = Math.round(this.func(lbl_pos[nmajor]));\n\n            arg.gap_before = (nmajor > 0) ? Math.abs(Math.round(pos - this.func(lbl_pos[nmajor-1]))) : 0;\n            arg.gap_after = (nmajor < lbl_pos.length-1) ? Math.abs(Math.round(this.func(lbl_pos[nmajor+1])-pos)) : 0;\n\n            if (center_lbls) {\n               const gap = arg.gap_after || arg.gap_before;\n               pos = Math.round(pos - (this.vertical ? 0.5*gap : -0.5*gap));\n               if (!this.isInsideGrRange(pos, 5)) continue;\n            }\n\n            maxtextlen = Math.max(maxtextlen, lbl.length);\n\n            pos -= this.axis_shift;\n\n            if ((this.startingSize || this.endingSize) && !this.isInsideGrRange(pos, -Math.abs(this.startingSize), -Math.abs(this.endingSize))) continue;\n\n            if (this.vertical) {\n               arg.x = fix_coord;\n               arg.y = pos;\n               arg.align = rotate_lbls ? ((side < 0) ? 23 : 20) : ((side < 0) ? 12 : 32);\n            } else {\n               arg.x = pos;\n               arg.y = fix_coord;\n               arg.align = rotate_lbls ? ((side < 0) ? 12 : 32) : ((side < 0) ? 20 : 23);\n               if (this.log && !this.noexp && !this.vertical && arg.align === 23) {\n                  arg.align = 21;\n                  arg.y += this.labelsFont.size;\n               }\n            }\n\n            arg.post_process = process_drawtext_ready;\n\n            this.drawText(arg);\n\n            if (lastpos && (pos !== lastpos) && ((this.vertical && !rotate_lbls) || (!this.vertical && rotate_lbls))) {\n               const axis_step = Math.abs(pos-lastpos);\n               textscale = Math.min(textscale, 0.9*axis_step/this.labelsFont.size);\n            }\n\n            lastpos = pos;\n         }\n\n         if (this.order) {\n            this.drawText({ x: this.vertical ? side*5 : this.getGrRange(5),\n                           y: this.has_obstacle ? fix_coord : (this.vertical ? this.getGrRange(3) : -3*side),\n                           align: this.vertical ? ((side < 0) ? 30 : 10) : ((this.has_obstacle ^ (side < 0)) ? 13 : 10),\n                           latex: 1,\n                           text: '#times' + this.formatExp(10, this.order),\n                           draw_g: label_g });\n         }\n\n         return this.finishTextDrawing(label_g);\n      }).then(() => {\n         if (lbls_tilt) {\n           label_g.selectAll('text').each(function() {\n               const txt = d3_select(this), tr = txt.attr('transform');\n               txt.attr('transform', tr + ' rotate(25)').style('text-anchor', 'start');\n           });\n         }\n\n         if (this.vertical)\n            gaps[side] += Math.round(rotate_lbls ? 1.2*max_lbl_height : max_lbl_width + 0.4*this.labelsFont.size) - side*fix_offset;\n         else {\n            const tilt_height = lbls_tilt ? max_lbl_width * Math.sin(25/180*Math.PI) + max_lbl_height * (Math.cos(25/180*Math.PI) + 0.2) : 0;\n\n            gaps[side] += Math.round(Math.max(rotate_lbls ? max_lbl_width + 0.4*this.labelsFont.size : 1.2*max_lbl_height, 1.2*this.labelsFont.size, tilt_height)) + fix_offset;\n         }\n\n         return gaps;\n      });\n   }\n\n   /** @summary Add zooming rect to axis drawing */\n   addZoomingRect(axis_g, side, lgaps) {\n      if (settings.Zooming && !this.disable_zooming && !this.isBatchMode()) {\n         const sz = Math.max(lgaps[side], 10),\n               d = this.vertical ? `v${this.gr_range}h${-side*sz}v${-this.gr_range}` : `h${this.gr_range}v${side*sz}h${-this.gr_range}`;\n         axis_g.append('svg:path')\n               .attr('d', `M0,0${d}z`)\n               .attr('class', 'axis_zoom')\n               .style('opacity', '0')\n               .style('cursor', 'crosshair');\n      }\n   }\n\n   /** @summary Returns true if axis title is rotated */\n   isTitleRotated() {\n      return this.titleFont && (this.titleFont.angle !== (this.vertical ? 270 : 0));\n   }\n\n   /** @summary Draw axis title */\n   async drawTitle(axis_g, side, lgaps) {\n      if (!this.fTitle)\n         return this;\n\n      const title_g = axis_g.append('svg:g').attr('class', 'axis_title'),\n            rotated = this.isTitleRotated();\n\n      return this.startTextDrawingAsync(this.titleFont, 'font', title_g).then(() => {\n         let title_shift_x = 0, title_shift_y = 0, title_basepos = 0;\n\n         this.title_align = this.titleCenter ? 'middle' : (this.titleOpposite ^ (this.isReverseAxis() || rotated) ? 'begin' : 'end');\n\n         if (this.vertical) {\n            title_basepos = Math.round(-side*(lgaps[side]));\n            title_shift_x = title_basepos + Math.round(-side*this.titleOffset);\n            title_shift_y = Math.round(this.titleCenter ? this.gr_range/2 : (this.titleOpposite ? 0 : this.gr_range));\n            this.drawText({ align: [this.title_align, ((side < 0) ^ rotated ? 'top' : 'bottom')],\n                           text: this.fTitle, draw_g: title_g });\n         } else {\n            title_shift_x = Math.round(this.titleCenter ? this.gr_range/2 : (this.titleOpposite ? 0 : this.gr_range));\n            title_basepos = Math.round(side*lgaps[side]);\n            title_shift_y = title_basepos + Math.round(side*this.titleOffset);\n            this.drawText({ align: [this.title_align, ((side > 0) ^ rotated ? 'top' : 'bottom')],\n                           text: this.fTitle, draw_g: title_g });\n         }\n\n         makeTranslate(title_g, title_shift_x, title_shift_y)\n                     .property('basepos', title_basepos)\n                     .property('shift_x', title_shift_x)\n                     .property('shift_y', title_shift_y);\n\n         this.addTitleDrag(title_g, side);\n\n         return this.finishTextDrawing(title_g);\n      });\n   }\n\n   /** @summary Extract major draw attributes, which are also used in interactive operations\n     * @private  */\n   extractDrawAttributes(scalingSize) {\n      const pp = this.getPadPainter(),\n          rect = pp?.getPadRect() || { width: 10, height: 10 };\n\n      this.scalingSize = scalingSize || (this.vertical ? rect.width : rect.height);\n\n      this.createv7AttLine('line_');\n\n      this.optionUnlab = this.v7EvalAttr('labels_hide', false);\n\n      this.endingStyle = this.v7EvalAttr('ending_style', '');\n      this.endingSize = Math.round(this.v7EvalLength('ending_size', this.scalingSize, this.endingStyle ? 0.02 : 0));\n      this.startingSize = Math.round(this.v7EvalLength('starting_size', this.scalingSize, 0));\n      this.ticksSize = this.v7EvalLength('ticks_size', this.scalingSize, 0.02);\n      this.ticksSide = this.v7EvalAttr('ticks_side', 'normal');\n      this.ticksColor = this.v7EvalColor('ticks_color', '');\n      this.ticksWidth = this.v7EvalAttr('ticks_width', 1);\n      if (scalingSize && (this.ticksSize < 0))\n         this.ticksSize = -this.ticksSize;\n\n      this.fTitle = this.v7EvalAttr('title_value', '');\n\n      if (this.fTitle) {\n         this.titleFont = this.v7EvalFont('title', { size: 0.03 }, scalingSize || pp?.getPadHeight() || 10);\n         this.titleFont.roundAngle(180, this.vertical ? 270 : 0);\n\n         this.titleOffset = this.v7EvalLength('title_offset', this.scalingSize, 0);\n         this.titlePos = this.v7EvalAttr('title_position', 'right');\n         this.titleCenter = (this.titlePos === 'center');\n         this.titleOpposite = (this.titlePos === 'left');\n      } else {\n         delete this.titleFont;\n         delete this.titleOffset;\n         delete this.titlePos;\n      }\n\n      // TODO: remove old scaling factors for labels and ticks\n      this.labelsFont = this.v7EvalFont('labels', { size: scalingSize ? 0.05 : 0.03 });\n      this.labelsFont.roundAngle(180);\n      if (this.labelsFont.angle) this.labelsFont.angle = 270;\n      this.labelsOffset = this.v7EvalLength('labels_offset', this.scalingSize, 0);\n\n      if (scalingSize) this.ticksSize = this.labelsFont.size*0.5; // old lego scaling factor\n\n      if (this.maxTickSize && (this.ticksSize > this.maxTickSize))\n         this.ticksSize = this.maxTickSize;\n   }\n\n   /** @summary Performs axis drawing\n     * @return {Promise} which resolved when drawing is completed */\n   async drawAxis(layer, transform, side) {\n      let axis_g = layer;\n\n      if (side === undefined) side = 1;\n\n      if (!this.standalone) {\n         axis_g = layer.selectChild(`.${this.name}_container`);\n         if (axis_g.empty())\n            axis_g = layer.append('svg:g').attr('class', `${this.name}_container`);\n         else\n            axis_g.selectAll('*').remove();\n      }\n\n      axis_g.attr('transform', transform);\n\n      this.extractDrawAttributes();\n      this.axis_g = axis_g;\n      this.side = side;\n\n      if (this.ticksSide === 'invert') side = -side;\n\n      if (this.standalone)\n         this.drawMainLine(axis_g);\n\n      const optionNoopt = false,  // no ticks position optimization\n            optionInt = false,    // integer labels\n            optionNoexp = false;  // do not create exp\n\n      this.handle = this.createTicks(false, optionNoexp, optionNoopt, optionInt);\n\n      // first draw ticks\n      const tgaps = this.drawTicks(axis_g, side, true),\n             // draw labels\n            labelsPromise = this.optionUnlab ? Promise.resolve(tgaps) : this.drawLabels(axis_g, side, tgaps);\n\n      return labelsPromise.then(lgaps => {\n         // when drawing axis on frame, zoom rect should be always outside\n         this.addZoomingRect(axis_g, this.standalone ? side : this.side, lgaps);\n\n         return this.drawTitle(axis_g, side, lgaps);\n      });\n   }\n\n   /** @summary Assign handler, which is called when axis redraw by interactive changes\n     * @desc Used by palette painter to reassign interactive handlers\n     * @private */\n   setAfterDrawHandler(handler) {\n      this._afterDrawAgain = handler;\n   }\n\n   /** @summary Draw axis with the same settings, used by interactive changes */\n   drawAxisAgain() {\n      if (!this.axis_g || !this.side) return;\n\n      this.axis_g.selectAll('*').remove();\n\n      this.extractDrawAttributes();\n\n      let side = this.side;\n      if (this.ticksSide === 'invert') side = -side;\n\n      if (this.standalone)\n         this.drawMainLine(this.axis_g);\n\n      // first draw ticks\n      const tgaps = this.drawTicks(this.axis_g, side, false),\n            labelsPromise = this.optionUnlab ? Promise.resolve(tgaps) : this.drawLabels(this.axis_g, side, tgaps);\n\n      return labelsPromise.then(lgaps => {\n         // when drawing axis on frame, zoom rect should be always outside\n         this.addZoomingRect(this.axis_g, this.standalone ? side : this.side, lgaps);\n\n         return this.drawTitle(this.axis_g, side, lgaps);\n      }).then(() => {\n         if (isFunc(this._afterDrawAgain))\n            this._afterDrawAgain();\n      });\n   }\n\n   /** @summary Draw axis again on opposite frame size */\n   drawAxisOtherPlace(layer, transform, side, only_ticks) {\n      let axis_g = layer.selectChild(`.${this.name}_container2`);\n      if (axis_g.empty())\n         axis_g = layer.append('svg:g').attr('class', `${this.name}_container2`);\n      else\n         axis_g.selectAll('*').remove();\n\n      axis_g.attr('transform', transform);\n\n      if (this.ticksSide === 'invert') side = -side;\n\n      // draw ticks again\n      const tgaps = this.drawTicks(axis_g, side, false),\n\n           // draw labels again\n           promise = this.optionUnlab || only_ticks ? Promise.resolve(tgaps) : this.drawLabels(axis_g, side, tgaps);\n\n      return promise.then(lgaps => {\n         this.addZoomingRect(axis_g, side, lgaps);\n         return true;\n      });\n   }\n\n   /** @summary Change zooming in standalone mode */\n   zoomStandalone(min, max) {\n      this.changeAxisAttr(1, 'zoomMin', min, 'zoomMax', max);\n   }\n\n   /** @summary Redraw axis, used in standalone mode for RAxisDrawable */\n   redraw() {\n      const drawable = this.getObject(),\n            pp = this.getPadPainter(),\n            pos = pp.getCoordinate(drawable.fPos),\n            reverse = this.v7EvalAttr('reverse', false),\n            labels_len = drawable.fLabels.length,\n            min = (labels_len > 0) ? 0 : this.v7EvalAttr('min', 0),\n            max = (labels_len > 0) ? labels_len : this.v7EvalAttr('max', 100);\n      let len = pp.getPadLength(drawable.fVertical, drawable.fLength);\n\n      // in vertical direction axis drawn in negative direction\n      if (drawable.fVertical) len -= pp.getPadHeight();\n\n      let smin = this.v7EvalAttr('zoomMin'),\n          smax = this.v7EvalAttr('zoomMax');\n      if (smin === smax) {\n         smin = min; smax = max;\n      }\n\n      this.configureAxis('axis', min, max, smin, smax, drawable.fVertical, undefined, len, { reverse, labels: labels_len > 0 });\n\n      this.createG();\n\n      this.standalone = true;  // no need to clean axis container\n\n      const promise = this.drawAxis(this.draw_g, makeTranslate(pos.x, pos.y));\n\n      if (this.isBatchMode()) return promise;\n\n      return promise.then(() => {\n         if (settings.ContextMenu) {\n            this.draw_g.on('contextmenu', evnt => {\n               evnt.stopPropagation(); // disable main context menu\n               evnt.preventDefault();  // disable browser context menu\n               createMenu(evnt, this).then(menu => {\n                 menu.header('RAxisDrawable', `${urlClassPrefix}ROOT_1_1Experimental_1_1RAxisBase.html`);\n                 menu.add('Unzoom', () => this.zoomStandalone());\n                 this.fillAxisContextMenu(menu, '');\n                 menu.show();\n               });\n            });\n         }\n\n         addDragHandler(this, { x: pos.x, y: pos.y, width: this.vertical ? 10 : len, height: this.vertical ? len : 10,\n                                only_move: true, redraw: d => this.positionChanged(d) });\n\n         this.draw_g.on('dblclick', () => this.zoomStandalone());\n\n         if (settings.ZoomWheel) {\n            this.draw_g.on('wheel', evnt => {\n               evnt.stopPropagation();\n               evnt.preventDefault();\n\n               const pos = d3_pointer(evnt, this.draw_g.node()),\n                   coord = this.vertical ? (1 - pos[1] / len) : pos[0] / len,\n                   item = this.analyzeWheelEvent(evnt, coord);\n\n               if (item.changed) this.zoomStandalone(item.min, item.max);\n            });\n         }\n      });\n   }\n\n   /** @summary Process interactive moving of the axis drawing */\n   positionChanged(drag) {\n      const drawable = this.getObject(),\n          rect = this.getPadPainter().getPadRect(),\n          xn = drag.x / rect.width,\n          yn = 1 - drag.y / rect.height;\n\n      drawable.fPos.fHoriz.fArr = [xn];\n      drawable.fPos.fVert.fArr = [yn];\n\n      this.submitCanvExec(`SetPos({${xn.toFixed(4)},${yn.toFixed(4)}})`);\n   }\n\n   /** @summary Change axis attribute, submit changes to server and redraw axis when specified\n     * @desc Arguments as redraw_mode, name1, value1, name2, value2, ... */\n   changeAxisAttr(redraw_mode) {\n      const changes = {};\n      let indx = 1;\n      while (indx < arguments.length - 1) {\n         this.v7AttrChange(changes, arguments[indx], arguments[indx+1]);\n         this.v7SetAttr(arguments[indx], arguments[indx+1]);\n         indx += 2;\n      }\n      this.v7SendAttrChanges(changes, false); // do not invoke canvas update on the server\n      if (redraw_mode === 1) {\n         if (this.standalone)\n            this.redraw();\n         else\n            this.drawAxisAgain();\n      } else if (redraw_mode)\n         this.redrawPad();\n   }\n\n   /** @summary Change axis log scale kind */\n   changeAxisLog(arg) {\n      if ((this.kind === kAxisLabels) || (this.kind === kAxisTime)) return;\n      if (arg === 'toggle') arg = this.log ? 0 : 10;\n\n      arg = parseFloat(arg);\n      if (Number.isFinite(arg)) this.changeAxisAttr(2, 'log', arg, 'symlog', 0);\n   }\n\n   /** @summary Provide context menu for axis */\n   fillAxisContextMenu(menu, kind) {\n      if (kind) menu.add('Unzoom', () => this.getFramePainter().unzoom(kind));\n\n      menu.sub('Log scale', () => this.changeAxisLog('toggle'));\n      menu.addchk(!this.log && !this.symlog, 'linear', 0, arg => this.changeAxisLog(arg));\n      menu.addchk(this.log && !this.symlog && (this.logbase === 10), 'log10', () => this.changeAxisLog(10));\n      menu.addchk(this.log && !this.symlog && (this.logbase === 2), 'log2', () => this.changeAxisLog(2));\n      menu.addchk(this.log && !this.symlog && Math.abs(this.logbase - Math.exp(1)) < 0.1, 'ln', () => this.changeAxisLog(Math.exp(1)));\n      menu.addchk(!this.log && this.symlog, 'symlog', 0, () =>\n         menu.input('set symlog constant', this.symlog || 10, 'float').then(v => this.changeAxisAttr(2, 'symlog', v)));\n      menu.endsub();\n\n      menu.add('Divisions', () => menu.input('Set axis devisions', this.v7EvalAttr('ndiv', 508), 'int').then(val => this.changeAxisAttr(2, 'ndiv', val)));\n\n      menu.sub('Ticks');\n      menu.addRColorMenu('color', this.ticksColor, col => this.changeAxisAttr(1, 'ticks_color', col));\n      menu.addSizeMenu('size', 0, 0.05, 0.01, this.ticksSize/this.scalingSize, sz => this.changeAxisAttr(1, 'ticks_size', sz));\n      menu.addSelectMenu('side', ['normal', 'invert', 'both'], this.ticksSide, side => this.changeAxisAttr(1, 'ticks_side', side));\n      menu.endsub();\n\n      if (!this.optionUnlab && this.labelsFont) {\n         menu.sub('Labels');\n         menu.addSizeMenu('offset', -0.05, 0.05, 0.01, this.labelsOffset/this.scalingSize,\n                         offset => this.changeAxisAttr(1, 'labels_offset', offset));\n         menu.addRAttrTextItems(this.labelsFont, { noangle: 1, noalign: 1 },\n               change => this.changeAxisAttr(1, 'labels_' + change.name, change.value));\n         menu.addchk(this.labelsFont.angle, 'rotate', res => this.changeAxisAttr(1, 'labels_angle', res ? 180 : 0));\n         menu.endsub();\n      }\n\n      menu.sub('Title', () => menu.input('Enter axis title', this.fTitle).then(t => this.changeAxisAttr(1, 'title_value', t)));\n\n      if (this.fTitle) {\n         menu.addSizeMenu('offset', -0.05, 0.05, 0.01, this.titleOffset/this.scalingSize,\n                           offset => this.changeAxisAttr(1, 'title_offset', offset));\n\n         menu.addSelectMenu('position', ['left', 'center', 'right'], this.titlePos,\n                            pos => this.changeAxisAttr(1, 'title_position', pos));\n\n         menu.addchk(this.isTitleRotated(), 'rotate', flag => this.changeAxisAttr(1, 'title_angle', flag ? 180 : 0));\n\n         menu.addRAttrTextItems(this.titleFont, { noangle: 1, noalign: 1 }, change => this.changeAxisAttr(1, 'title_' + change.name, change.value));\n      }\n\n      menu.endsub();\n      return true;\n   }\n\n} // class RAxisPainter\n\nexport { RAxisPainter };\n","import { gStyle, settings, internals, create, isFunc, isStr, clTAxis, nsREX, urlClassPrefix } from '../core.mjs';\nimport { pointer as d3_pointer } from '../d3.mjs';\nimport { getSvgLineStyle } from '../base/TAttLineHandler.mjs';\nimport { makeTranslate } from '../base/BasePainter.mjs';\nimport { EAxisBits, TAxisPainter } from './TAxisPainter.mjs';\nimport { RAxisPainter } from './RAxisPainter.mjs';\nimport { FrameInteractive, getEarthProjectionFunc } from './TFramePainter.mjs';\nimport { RObjectPainter } from '../base/RObjectPainter.mjs';\n\n\n/**\n * @summary Painter class for RFrame, main handler for interactivity\n *\n * @private\n */\n\nclass RFramePainter extends RObjectPainter {\n\n   /** @summary constructor\n     * @param {object|string} dom - DOM element for drawing or element id\n     * @param {object} frame - RFrame object */\n   constructor(dom, frame) {\n      super(dom, frame, '', 'frame');\n      this.mode3d = false;\n      this.xmin = this.xmax = 0; // no scale specified, wait for objects drawing\n      this.ymin = this.ymax = 0; // no scale specified, wait for objects drawing\n      this.axes_drawn = false;\n      this.keys_handler = null;\n      this.projection = 0; // different projections\n      this.v7_frame = true; // indicator of v7, used in interactive part\n   }\n\n   /** @summary Returns frame painter - object itself */\n   getFramePainter() { return this; }\n\n   /** @summary Returns true if it is ROOT6 frame\n    * @private */\n   is_root6() { return false; }\n\n   /** @summary Set active flag for frame - can block some events\n    * @private */\n   setFrameActive(on) {\n      this.enabledKeys = on && settings.HandleKeys;\n      // used only in 3D mode\n      if (this.control)\n         this.control.enableKeys = this.enabledKeys;\n   }\n\n   setLastEventPos(pnt) {\n      // set position of last context menu event, can be\n      this.fLastEventPnt = pnt;\n   }\n\n   getLastEventPos() {\n      // return position of last event\n      return this.fLastEventPnt;\n   }\n\n   /** @summary Update graphical attributes */\n   updateAttributes(force) {\n      if ((this.fX1NDC === undefined) || (force && !this.$modifiedNDC)) {\n         const rect = this.getPadPainter().getPadRect();\n         this.fX1NDC = this.v7EvalLength('margins_left', rect.width, gStyle.fPadLeftMargin) / rect.width;\n         this.fY1NDC = this.v7EvalLength('margins_bottom', rect.height, gStyle.fPadBottomMargin) / rect.height;\n         this.fX2NDC = 1 - this.v7EvalLength('margins_right', rect.width, gStyle.fPadRightMargin) / rect.width;\n         this.fY2NDC = 1 - this.v7EvalLength('margins_top', rect.height, gStyle.fPadTopMargin) / rect.height;\n      }\n\n      if (!this.fillatt)\n         this.createv7AttFill();\n\n      this.createv7AttLine('border_');\n   }\n\n   /** @summary Returns coordinates transformation func */\n   getProjectionFunc() { return getEarthProjectionFunc(this.projection); }\n\n   /** @summary Recalculate frame ranges using specified projection functions\n     * @desc Not yet used in v7 */\n   recalculateRange(Proj) {\n      this.projection = Proj || 0;\n\n      if ((this.projection === 2) && ((this.scale_ymin <= -90) || (this.scale_ymax >=90))) {\n         console.warn(`Mercator Projection: latitude out of range ${this.scale_ymin} ${this.scale_ymax}`);\n         this.projection = 0;\n      }\n\n      const func = this.getProjectionFunc();\n      if (!func) return;\n\n      const pnts = [func(this.scale_xmin, this.scale_ymin),\n                   func(this.scale_xmin, this.scale_ymax),\n                   func(this.scale_xmax, this.scale_ymax),\n                   func(this.scale_xmax, this.scale_ymin)];\n      if (this.scale_xmin < 0 && this.scale_xmax > 0) {\n         pnts.push(func(0, this.scale_ymin));\n         pnts.push(func(0, this.scale_ymax));\n      }\n      if (this.scale_ymin < 0 && this.scale_ymax > 0) {\n         pnts.push(func(this.scale_xmin, 0));\n         pnts.push(func(this.scale_xmax, 0));\n      }\n\n      this.original_xmin = this.scale_xmin;\n      this.original_xmax = this.scale_xmax;\n      this.original_ymin = this.scale_ymin;\n      this.original_ymax = this.scale_ymax;\n\n      this.scale_xmin = this.scale_xmax = pnts[0].x;\n      this.scale_ymin = this.scale_ymax = pnts[0].y;\n\n      for (let n = 1; n < pnts.length; ++n) {\n         this.scale_xmin = Math.min(this.scale_xmin, pnts[n].x);\n         this.scale_xmax = Math.max(this.scale_xmax, pnts[n].x);\n         this.scale_ymin = Math.min(this.scale_ymin, pnts[n].y);\n         this.scale_ymax = Math.max(this.scale_ymax, pnts[n].y);\n      }\n   }\n\n   /** @summary Draw axes grids\n     * @desc Called immediately after axes drawing */\n   drawGrids() {\n      const layer = this.getFrameSvg().selectChild('.axis_layer');\n\n      layer.selectAll('.xgrid').remove();\n      layer.selectAll('.ygrid').remove();\n\n      const h = this.getFrameHeight(),\n            w = this.getFrameWidth(),\n            gridx = this.v7EvalAttr('gridX', false),\n            gridy = this.v7EvalAttr('gridY', false),\n            grid_style = getSvgLineStyle(gStyle.fGridStyle),\n            grid_color = (gStyle.fGridColor > 0) ? this.getColor(gStyle.fGridColor) : 'black';\n\n      if (this.x_handle)\n         this.x_handle.draw_grid = gridx;\n\n      // add a grid on x axis, if the option is set\n      if (this.x_handle?.draw_grid) {\n         let grid = '';\n         for (let n = 0; n < this.x_handle.ticks.length; ++n) {\n            grid += this.swap_xy\n                  ? `M0,${h+this.x_handle.ticks[n]}h${w}`\n                  : `M${this.x_handle.ticks[n]},0v${h}`;\n         }\n\n         if (grid) {\n            layer.append('svg:path')\n                 .attr('class', 'xgrid')\n                 .attr('d', grid)\n                 .style('stroke', grid_color)\n                 .style('stroke-width', gStyle.fGridWidth)\n                 .style('stroke-dasharray', grid_style);\n         }\n      }\n\n      if (this.y_handle)\n         this.y_handle.draw_grid = gridy;\n\n      // add a grid on y axis, if the option is set\n      if (this.y_handle?.draw_grid) {\n         let grid = '';\n         for (let n = 0; n < this.y_handle.ticks.length; ++n) {\n            grid += this.swap_xy\n                     ? `M${this.y_handle.ticks[n]},0v${h}`\n                     : `M0,${h+this.y_handle.ticks[n]}h${w}`;\n         }\n\n         if (grid) {\n            layer.append('svg:path')\n               .attr('class', 'ygrid')\n               .attr('d', grid)\n               .style('stroke', grid_color)\n               .style('stroke-width', gStyle.fGridWidth)\n               .style('stroke-dasharray', grid_style);\n         }\n      }\n   }\n\n   /** @summary Converts 'raw' axis value into text */\n   axisAsText(axis, value) {\n      const handle = this[`${axis}_handle`];\n\n      return handle ? handle.axisAsText(value, settings[axis.toUpperCase() + 'ValuesFormat']) : value.toPrecision(4);\n   }\n\n   /** @summary Set axis range */\n   _setAxisRange(prefix, vmin, vmax) {\n      const nmin = `${prefix}min`, nmax = `${prefix}max`;\n      if (this[nmin] !== this[nmax]) return;\n      let min = this.v7EvalAttr(`${prefix}_min`),\n          max = this.v7EvalAttr(`${prefix}_max`);\n\n      if (min !== undefined) vmin = min;\n      if (max !== undefined) vmax = max;\n\n      if (vmin < vmax) {\n         this[nmin] = vmin;\n         this[nmax] = vmax;\n      }\n\n      const nzmin = `zoom_${prefix}min`, nzmax = `zoom_${prefix}max`;\n\n      if ((this[nzmin] === this[nzmax]) && !this.zoomChangedInteractive(prefix)) {\n         min = this.v7EvalAttr(`${prefix}_zoomMin`);\n         max = this.v7EvalAttr(`${prefix}_zoomMax`);\n\n         if ((min !== undefined) || (max !== undefined)) {\n            this[nzmin] = (min === undefined) ? this[nmin] : min;\n            this[nzmax] = (max === undefined) ? this[nmax] : max;\n         }\n      }\n   }\n\n   /** @summary Set axes ranges for drawing, check configured attributes if range already specified */\n   setAxesRanges(xaxis, xmin, xmax, yaxis, ymin, ymax, zaxis, zmin, zmax) {\n      if (this.axes_drawn) return;\n      this.xaxis = xaxis;\n      this._setAxisRange('x', xmin, xmax);\n      this.yaxis = yaxis;\n      this._setAxisRange('y', ymin, ymax);\n      this.zaxis = zaxis;\n      this._setAxisRange('z', zmin, zmax);\n   }\n\n   /** @summary Set secondary axes ranges */\n   setAxes2Ranges(second_x, xaxis, xmin, xmax, second_y, yaxis, ymin, ymax) {\n      if (second_x) {\n         this.x2axis = xaxis;\n         this._setAxisRange('x2', xmin, xmax);\n      }\n      if (second_y) {\n         this.y2axis = yaxis;\n         this._setAxisRange('y2', ymin, ymax);\n      }\n   }\n\n   /** @summary Create x,y objects which maps user coordinates into pixels\n     * @desc Must be used only for v6 objects, see TFramePainter for more details\n     * @private */\n   createXY(opts) {\n      if (this.self_drawaxes) return;\n\n      this.cleanXY(); // remove all previous configurations\n\n      if (!opts) opts = { ndim: 1 };\n\n      this.v6axes = true;\n      this.swap_xy = opts.swap_xy || false;\n      this.reverse_x = opts.reverse_x || false;\n      this.reverse_y = opts.reverse_y || false;\n\n      this.logx = this.v7EvalAttr('x_log', 0);\n      this.logy = this.v7EvalAttr('y_log', 0);\n\n      const w = this.getFrameWidth(), h = this.getFrameHeight(), pp = this.getPadPainter();\n\n      this.scales_ndim = opts.ndim;\n\n      this.scale_xmin = this.xmin;\n      this.scale_xmax = this.xmax;\n\n      this.scale_ymin = this.ymin;\n      this.scale_ymax = this.ymax;\n\n      if (opts.extra_y_space) {\n         const log_scale = this.swap_xy ? this.logx : this.logy;\n         if (log_scale && (this.scale_ymax > 0))\n            this.scale_ymax = Math.exp(Math.log(this.scale_ymax)*1.1);\n         else\n            this.scale_ymax += (this.scale_ymax - this.scale_ymin)*0.1;\n      }\n\n      if ((opts.zoom_xmin !== opts.zoom_xmax) && ((this.zoom_xmin === this.zoom_xmax) || !this.zoomChangedInteractive('x'))) {\n         this.zoom_xmin = opts.zoom_xmin;\n         this.zoom_xmax = opts.zoom_xmax;\n      }\n\n      if ((opts.zoom_ymin !== opts.zoom_ymax) && ((this.zoom_ymin === this.zoom_ymax) || !this.zoomChangedInteractive('y'))) {\n         this.zoom_ymin = opts.zoom_ymin;\n         this.zoom_ymax = opts.zoom_ymax;\n      }\n\n      if (this.zoom_xmin !== this.zoom_xmax) {\n         this.scale_xmin = this.zoom_xmin;\n         this.scale_xmax = this.zoom_xmax;\n      }\n\n      if (this.zoom_ymin !== this.zoom_ymax) {\n         this.scale_ymin = this.zoom_ymin;\n         this.scale_ymax = this.zoom_ymax;\n      }\n\n      let xaxis = this.xaxis, yaxis = this.yaxis;\n      if (xaxis?._typename !== clTAxis) xaxis = create(clTAxis);\n      if (yaxis?._typename !== clTAxis) yaxis = create(clTAxis);\n\n      this.x_handle = new TAxisPainter(pp, xaxis, true);\n      this.x_handle.optionUnlab = this.v7EvalAttr('x_labels_hide', false);\n\n      this.x_handle.configureAxis('xaxis', this.xmin, this.xmax, this.scale_xmin, this.scale_xmax, this.swap_xy, this.swap_xy ? [0, h] : [0, w],\n                                      { reverse: this.reverse_x,\n                                        log: this.swap_xy ? this.logy : this.logx,\n                                        symlog: this.swap_xy ? opts.symlog_y : opts.symlog_x,\n                                        logcheckmin: (opts.ndim > 1) || !this.swap_xy,\n                                        logminfactor: 0.0001 });\n\n      this.x_handle.assignFrameMembers(this, 'x');\n\n      this.y_handle = new TAxisPainter(pp, yaxis, true);\n      this.y_handle.optionUnlab = this.v7EvalAttr('y_labels_hide', false);\n\n      this.y_handle.configureAxis('yaxis', this.ymin, this.ymax, this.scale_ymin, this.scale_ymax, !this.swap_xy, this.swap_xy ? [0, w] : [0, h],\n                                      { reverse: this.reverse_y,\n                                        log: this.swap_xy ? this.logx : this.logy,\n                                        symlog: this.swap_xy ? opts.symlog_x : opts.symlog_y,\n                                        logcheckmin: (opts.ndim > 1) || this.swap_xy,\n                                        log_min_nz: opts.ymin_nz && (opts.ymin_nz < this.ymax) ? 0.5 * opts.ymin_nz : 0,\n                                        logminfactor: 3e-4 });\n\n      this.y_handle.assignFrameMembers(this, 'y');\n   }\n\n   /** @summary Identify if requested axes are drawn\n     * @desc Checks if x/y axes are drawn. Also if second side is already there */\n   hasDrawnAxes(second_x, second_y) {\n      return !second_x && !second_y ? this.axes_drawn : false;\n   }\n\n   /** @summary Draw configured axes on the frame\n     * @desc axes can be drawn only for main histogram  */\n   async drawAxes() {\n      if (this.axes_drawn || (this.xmin === this.xmax) || (this.ymin === this.ymax))\n         return this.axes_drawn;\n\n      const ticksx = this.v7EvalAttr('ticksX', 1),\n            ticksy = this.v7EvalAttr('ticksY', 1);\n      let sidex = 1, sidey = 1;\n\n      if (this.v7EvalAttr('swapX', false)) sidex = -1;\n      if (this.v7EvalAttr('swapY', false)) sidey = -1;\n\n      const w = this.getFrameWidth(), h = this.getFrameHeight(), pp = this.getPadPainter();\n\n      if (!this.v6axes) {\n         // this is partially same as v6 createXY method\n\n         this.cleanupAxes();\n\n         this.swap_xy = false;\n\n         if (this.zoom_xmin !== this.zoom_xmax) {\n            this.scale_xmin = this.zoom_xmin;\n            this.scale_xmax = this.zoom_xmax;\n         } else {\n            this.scale_xmin = this.xmin;\n            this.scale_xmax = this.xmax;\n         }\n\n         if (this.zoom_ymin !== this.zoom_ymax) {\n            this.scale_ymin = this.zoom_ymin;\n            this.scale_ymax = this.zoom_ymax;\n         } else {\n            this.scale_ymin = this.ymin;\n            this.scale_ymax = this.ymax;\n         }\n\n         this.recalculateRange(0);\n\n         this.x_handle = new RAxisPainter(pp, this, this.xaxis, 'x_');\n         this.x_handle.snapid = this.snapid;\n         this.x_handle.draw_swapside = (sidex < 0);\n         this.x_handle.draw_ticks = ticksx;\n\n         this.y_handle = new RAxisPainter(pp, this, this.yaxis, 'y_');\n         this.y_handle.snapid = this.snapid;\n         this.y_handle.draw_swapside = (sidey < 0);\n         this.y_handle.draw_ticks = ticksy;\n\n         this.z_handle = new RAxisPainter(pp, this, this.zaxis, 'z_');\n         this.z_handle.snapid = this.snapid;\n\n         this.x_handle.configureAxis('xaxis', this.xmin, this.xmax, this.scale_xmin, this.scale_xmax, false, [0, w], w, { reverse: false });\n         this.x_handle.assignFrameMembers(this, 'x');\n\n         this.y_handle.configureAxis('yaxis', this.ymin, this.ymax, this.scale_ymin, this.scale_ymax, true, [h, 0], -h, { reverse: false });\n         this.y_handle.assignFrameMembers(this, 'y');\n\n         // only get basic properties like log scale\n         this.z_handle.configureZAxis('zaxis', this);\n      }\n\n      const layer = this.getFrameSvg().selectChild('.axis_layer');\n\n      this.x_handle.has_obstacle = false;\n\n      const draw_horiz = this.swap_xy ? this.y_handle : this.x_handle,\n            draw_vertical = this.swap_xy ? this.x_handle : this.y_handle;\n      let pr;\n\n      if (this.getPadPainter()?._fast_drawing)\n         pr = Promise.resolve(true); // do nothing\n       else if (this.v6axes) {\n         // in v7 ticksx/y values shifted by 1 relative to v6\n         // In v7 ticksx === 0 means no ticks, ticksx === 1 equivalent to === 0 in v6\n\n         const can_adjust_frame = false, disable_x_draw = false, disable_y_draw = false;\n\n         draw_horiz.disable_ticks = (ticksx <= 0);\n         draw_vertical.disable_ticks = (ticksy <= 0);\n\n         const pr1 = draw_horiz.drawAxis(layer, w, h,\n                                   draw_horiz.invert_side ? null : `translate(0,${h})`,\n                                   (ticksx > 1) ? -h : 0, disable_x_draw,\n                                   undefined, false, this.getPadPainter().getPadHeight() - h - this.getFrameY()),\n\n          pr2 = draw_vertical.drawAxis(layer, w, h,\n                                   draw_vertical.invert_side ? `translate(${w})` : null,\n                                   (ticksy > 1) ? w : 0, disable_y_draw,\n                                   draw_vertical.invert_side ? 0 : this._frame_x, can_adjust_frame);\n\n         pr = Promise.all([pr1, pr2]).then(() => this.drawGrids());\n      } else {\n         let arr = [];\n\n         if (ticksx > 0)\n            arr.push(draw_horiz.drawAxis(layer, makeTranslate(0, sidex > 0 ? h : 0), sidex));\n\n         if (ticksy > 0)\n            arr.push(draw_vertical.drawAxis(layer, makeTranslate(sidey > 0 ? 0 : w, h), sidey));\n\n         pr = Promise.all(arr).then(() => {\n            arr = [];\n            if (ticksx > 1)\n               arr.push(draw_horiz.drawAxisOtherPlace(layer, makeTranslate(0, sidex < 0 ? h : 0), -sidex, ticksx === 2));\n\n            if (ticksy > 1)\n               arr.push(draw_vertical.drawAxisOtherPlace(layer, makeTranslate(sidey < 0 ? 0 : w, h), -sidey, ticksy === 2));\n            return Promise.all(arr);\n         }).then(() => this.drawGrids());\n      }\n\n      return pr.then(() => {\n         this.axes_drawn = true;\n         return true;\n      });\n   }\n\n   /** @summary Draw secondary configured axes */\n   drawAxes2(second_x, second_y) {\n      const w = this.getFrameWidth(), h = this.getFrameHeight(),\n            pp = this.getPadPainter(),\n            layer = this.getFrameSvg().selectChild('.axis_layer');\n      let pr1, pr2;\n\n      if (second_x) {\n         if (this.zoom_x2min !== this.zoom_x2max) {\n            this.scale_x2min = this.zoom_x2min;\n            this.scale_x2max = this.zoom_x2max;\n         } else {\n           this.scale_x2min = this.x2min;\n           this.scale_x2max = this.x2max;\n         }\n         this.x2_handle = new RAxisPainter(pp, this, this.x2axis, 'x2_');\n         this.x2_handle.snapid = this.snapid;\n\n         this.x2_handle.configureAxis('x2axis', this.x2min, this.x2max, this.scale_x2min, this.scale_x2max, false, [0, w], w, { reverse: false });\n         this.x2_handle.assignFrameMembers(this, 'x2');\n\n         pr1 = this.x2_handle.drawAxis(layer, null, -1);\n      }\n\n      if (second_y) {\n         if (this.zoom_y2min !== this.zoom_y2max) {\n            this.scale_y2min = this.zoom_y2min;\n            this.scale_y2max = this.zoom_y2max;\n         } else {\n            this.scale_y2min = this.y2min;\n            this.scale_y2max = this.y2max;\n         }\n\n         this.y2_handle = new RAxisPainter(pp, this, this.y2axis, 'y2_');\n         this.y2_handle.snapid = this.snapid;\n\n         this.y2_handle.configureAxis('y2axis', this.y2min, this.y2max, this.scale_y2min, this.scale_y2max, true, [h, 0], -h, { reverse: false });\n         this.y2_handle.assignFrameMembers(this, 'y2');\n\n         pr2 = this.y2_handle.drawAxis(layer, makeTranslate(w, h), -1);\n      }\n\n      return Promise.all([pr1, pr2]);\n   }\n\n   /** @summary Return functions to create x/y points based on coordinates\n     * @desc In default case returns frame painter itself\n     * @private */\n   getGrFuncs(second_x, second_y) {\n      const use_x2 = second_x && this.grx2,\n          use_y2 = second_y && this.gry2;\n      if (!use_x2 && !use_y2) return this;\n\n      return {\n         use_x2,\n         grx: use_x2 ? this.grx2 : this.grx,\n         x_handle: use_x2 ? this.x2_handle : this.x_handle,\n         logx: use_x2 ? this.x2_handle.log : this.x_handle.log,\n         scale_xmin: use_x2 ? this.scale_x2min : this.scale_xmin,\n         scale_xmax: use_x2 ? this.scale_x2max : this.scale_xmax,\n         use_y2,\n         gry: use_y2 ? this.gry2 : this.gry,\n         y_handle: use_y2 ? this.y2_handle : this.y_handle,\n         logy: use_y2 ? this.y2_handle.log : this.y_handle.log,\n         scale_ymin: use_y2 ? this.scale_y2min : this.scale_ymin,\n         scale_ymax: use_y2 ? this.scale_y2max : this.scale_ymax,\n         swap_xy: this.swap_xy,\n         fp: this,\n         revertAxis(name, v) {\n            if ((name === 'x') && this.use_x2) name = 'x2';\n            if ((name === 'y') && this.use_y2) name = 'y2';\n            return this.fp.revertAxis(name, v);\n         },\n         axisAsText(name, v) {\n            if ((name === 'x') && this.use_x2) name = 'x2';\n            if ((name === 'y') && this.use_y2) name = 'y2';\n            return this.fp.axisAsText(name, v);\n         }\n      };\n   }\n\n   /** @summary function called at the end of resize of frame\n     * @desc Used to update attributes on the server\n     * @private */\n   sizeChanged() {\n      const changes = {};\n      this.v7AttrChange(changes, 'margins_left', this.fX1NDC);\n      this.v7AttrChange(changes, 'margins_bottom', this.fY1NDC);\n      this.v7AttrChange(changes, 'margins_right', 1 - this.fX2NDC);\n      this.v7AttrChange(changes, 'margins_top', 1 - this.fY2NDC);\n      this.v7SendAttrChanges(changes, false); // do not invoke canvas update on the server\n\n      this.redrawPad();\n   }\n\n   /** @summary Remove all x/y functions\n     * @private */\n   cleanXY() {\n      // remove all axes drawings\n      const clean = (name, grname) => {\n         this[name]?.cleanup();\n         delete this[name];\n         delete this[grname];\n      };\n\n      clean('x_handle', 'grx');\n      clean('y_handle', 'gry');\n      clean('z_handle', 'grz');\n      clean('x2_handle', 'grx2');\n      clean('y2_handle', 'gry2');\n\n      delete this.v6axes; // marker that v6 axes are used\n   }\n\n   /** @summary Remove all axes drawings\n     * @private */\n   cleanupAxes() {\n      this.cleanXY();\n\n      this.draw_g?.selectChild('.axis_layer').selectAll('*').remove();\n      this.axes_drawn = false;\n   }\n\n   /** @summary Removes all drawn elements of the frame\n     * @private */\n   cleanFrameDrawings() {\n      // cleanup all 3D drawings if any\n      if (isFunc(this.create3DScene))\n         this.create3DScene(-1);\n\n      this.cleanupAxes();\n\n      const clean = (name) => {\n         this[name+'min'] = this[name+'max'] = 0;\n         this[`zoom_${name}min`] = this[`zoom_${name}max`] = 0;\n         this[`scale_${name}min`] = this[`scale_${name}max`] = 0;\n      };\n\n      clean('x');\n      clean('y');\n      clean('z');\n      clean('x2');\n      clean('y2');\n\n      this.draw_g?.selectChild('.main_layer').selectAll('*').remove();\n      this.draw_g?.selectChild('.upper_layer').selectAll('*').remove();\n   }\n\n   /** @summary Fully cleanup frame\n     * @private */\n   cleanup() {\n      this.cleanFrameDrawings();\n\n      if (this.draw_g) {\n         this.draw_g.selectAll('*').remove();\n         this.draw_g.on('mousedown', null)\n                    .on('dblclick', null)\n                    .on('wheel', null)\n                    .on('contextmenu', null)\n                    .property('interactive_set', null);\n      }\n\n      if (this.keys_handler) {\n         window.removeEventListener('keydown', this.keys_handler, false);\n         this.keys_handler = null;\n      }\n      delete this.enabledKeys;\n      delete this.self_drawaxes;\n\n      delete this.xaxis;\n      delete this.yaxis;\n      delete this.zaxis;\n      delete this.x2axis;\n      delete this.y2axis;\n\n      delete this.draw_g; // frame <g> element managed by the pad\n\n      delete this._click_handler;\n      delete this._dblclick_handler;\n\n      const pp = this.getPadPainter();\n      if (pp?.frame_painter_ref === this)\n         delete pp.frame_painter_ref;\n\n      super.cleanup();\n   }\n\n   /** @summary Redraw frame\n     * @private */\n   redraw() {\n      const pp = this.getPadPainter();\n      if (pp) pp.frame_painter_ref = this;\n\n      // first update all attributes from objects\n      this.updateAttributes();\n\n      const rect = pp?.getPadRect() ?? { width: 10, height: 10 },\n            lm = Math.round(rect.width * this.fX1NDC),\n            tm = Math.round(rect.height * (1 - this.fY2NDC));\n      let w = Math.round(rect.width * (this.fX2NDC - this.fX1NDC)),\n          h = Math.round(rect.height * (this.fY2NDC - this.fY1NDC)),\n          rotate = false, fixpos = false, trans;\n\n      if (pp?.options) {\n         if (pp.options.RotateFrame) rotate = true;\n         if (pp.options.FixFrame) fixpos = true;\n      }\n\n      if (rotate) {\n         trans = `rotate(-90,${lm},${tm}) translate(${lm-h},${tm})`;\n         [w, h] = [h, w];\n      } else\n         trans = makeTranslate(lm, tm);\n\n\n      // update values here to let access even when frame is not really updated\n      this._frame_x = lm;\n      this._frame_y = tm;\n      this._frame_width = w;\n      this._frame_height = h;\n      this._frame_rotate = rotate;\n      this._frame_fixpos = fixpos;\n      this._frame_trans = trans;\n\n      return this.mode3d ? this : this.createFrameG();\n   }\n\n   /** @summary Create frame element and update all attributes\n     * @private */\n   createFrameG() {\n      // this is svg:g object - container for every other items belonging to frame\n      this.draw_g = this.getFrameSvg();\n\n      let top_rect, main_svg;\n\n      if (this.draw_g.empty()) {\n         this.draw_g = this.getLayerSvg('primitives_layer').append('svg:g').attr('class', 'root_frame');\n\n         if (!this.isBatchMode())\n            this.draw_g.append('svg:title').text('');\n\n         top_rect = this.draw_g.append('svg:rect');\n\n         main_svg = this.draw_g.append('svg:svg')\n                           .attr('class', 'main_layer')\n                           .attr('x', 0)\n                           .attr('y', 0)\n                           .attr('overflow', 'hidden');\n\n         this.draw_g.append('svg:g').attr('class', 'axis_layer');\n         this.draw_g.append('svg:g').attr('class', 'upper_layer');\n      } else {\n         top_rect = this.draw_g.selectChild('rect');\n         main_svg = this.draw_g.selectChild('.main_layer');\n      }\n\n      this.axes_drawn = false;\n\n      this.draw_g.attr('transform', this._frame_trans);\n\n      top_rect.attr('x', 0)\n              .attr('y', 0)\n              .attr('width', this._frame_width)\n              .attr('height', this._frame_height)\n              .attr('rx', this.lineatt.rx || null)\n              .attr('ry', this.lineatt.ry || null)\n              .call(this.fillatt.func)\n              .call(this.lineatt.func);\n\n      main_svg.attr('width', this._frame_width)\n              .attr('height', this._frame_height)\n              .attr('viewBox', `0 0 ${this._frame_width} ${this._frame_height}`);\n\n      let pr = Promise.resolve(true);\n\n      if (this.v7EvalAttr('drawAxes')) {\n         this.self_drawaxes = true;\n         this.setAxesRanges();\n         pr = this.drawAxes().then(() => this.addInteractivity());\n      }\n\n      return pr.then(() => { return this; });\n   }\n\n   /** @summary Returns frame X position */\n   getFrameX() { return this._frame_x || 0; }\n\n   /** @summary Returns frame Y position */\n   getFrameY() { return this._frame_y || 0; }\n\n   /** @summary Returns frame width */\n   getFrameWidth() { return this._frame_width || 0; }\n\n   /** @summary Returns frame height */\n   getFrameHeight() { return this._frame_height || 0; }\n\n   /** @summary Returns frame rectangle plus extra info for hint display */\n   getFrameRect() {\n      return {\n         x: this._frame_x || 0,\n         y: this._frame_y || 0,\n         width: this.getFrameWidth(),\n         height: this.getFrameHeight(),\n         transform: this.draw_g?.attr('transform') || '',\n         hint_delta_x: 0,\n         hint_delta_y: 0\n      };\n   }\n\n   /** @summary Returns palette associated with frame */\n   getHistPalette() {\n      return this.getPadPainter().getHistPalette();\n   }\n\n   /** @summary Configure user-defined click handler\n     * @desc Function will be called every time when frame click was performed\n     * As argument, tooltip object with selected bins will be provided\n     * If handler function returns true, default handling of click will be disabled */\n   configureUserClickHandler(handler) {\n      this._click_handler = isFunc(handler) ? handler : null;\n   }\n\n   /** @summary Configure user-defined dblclick handler\n     * @desc Function will be called every time when double click was called\n     * As argument, tooltip object with selected bins will be provided\n     * If handler function returns true, default handling of dblclick (unzoom) will be disabled */\n   configureUserDblclickHandler(handler) {\n      this._dblclick_handler = isFunc(handler) ? handler : null;\n   }\n\n   /** @summary function can be used for zooming into specified range\n     * @desc if both limits for each axis 0 (like xmin === xmax === 0), axis will be unzoomed\n     * @return {Promise} with boolean flag if zoom operation was performed */\n   async zoom(xmin, xmax, ymin, ymax, zmin, zmax, interactive) {\n      // disable zooming when axis conversion is enabled\n      if (this.projection)\n         return false;\n\n      if (xmin === 'x') {\n         xmin = xmax; xmax = ymin; interactive = ymax; ymin = ymax = undefined;\n      } else if (xmin === 'y') {\n         interactive = ymax; ymax = ymin; ymin = xmax; xmin = xmax = undefined;\n      } else if (xmin === 'z') {\n         interactive = ymax; zmin = xmax; zmax = ymin; xmin = xmax = ymin = ymax = undefined;\n      }\n\n      let zoom_x = (xmin !== xmax), zoom_y = (ymin !== ymax), zoom_z = (zmin !== zmax),\n          unzoom_x = false, unzoom_y = false, unzoom_z = false;\n\n      if (zoom_x) {\n         let cnt = 0;\n         if (xmin <= this.xmin) { xmin = this.xmin; cnt++; }\n         if (xmax >= this.xmax) { xmax = this.xmax; cnt++; }\n         if (cnt === 2) { zoom_x = false; unzoom_x = true; }\n      } else\n         unzoom_x = (xmin === xmax) && (xmin === 0);\n\n      if (zoom_y) {\n         let cnt = 0;\n         if (ymin <= this.ymin) { ymin = this.ymin; cnt++; }\n         if (ymax >= this.ymax) { ymax = this.ymax; cnt++; }\n         if (cnt === 2) { zoom_y = false; unzoom_y = true; }\n      } else\n         unzoom_y = (ymin === ymax) && (ymin === 0);\n\n      if (zoom_z) {\n         let cnt = 0;\n         if (zmin <= this.zmin) { zmin = this.zmin; cnt++; }\n         if (zmax >= this.zmax) { zmax = this.zmax; cnt++; }\n         if (cnt === 2) { zoom_z = false; unzoom_z = true; }\n      } else\n         unzoom_z = (zmin === zmax) && (zmin === 0);\n\n      let changed = false, r_x = '', r_y = '', r_z = '', is_any_check = false;\n      const req = {\n         _typename: `${nsREX}RFrame::RUserRanges`,\n         values: [0, 0, 0, 0, 0, 0],\n         flags: [false, false, false, false, false, false]\n      }, checkZooming = (painter, force) => {\n         if (!force && !isFunc(painter.canZoomInside)) return;\n\n         is_any_check = true;\n\n         if (zoom_x && (force || painter.canZoomInside('x', xmin, xmax))) {\n            this.zoom_xmin = xmin;\n            this.zoom_xmax = xmax;\n            changed = true; r_x = '0';\n            zoom_x = false;\n            req.values[0] = xmin; req.values[1] = xmax;\n            req.flags[0] = req.flags[1] = true;\n            if (interactive)\n               this.zoomChangedInteractive('x', interactive);\n         }\n         if (zoom_y && (force || painter.canZoomInside('y', ymin, ymax))) {\n            this.zoom_ymin = ymin;\n            this.zoom_ymax = ymax;\n            changed = true; r_y = '1';\n            zoom_y = false;\n            req.values[2] = ymin; req.values[3] = ymax;\n            req.flags[2] = req.flags[3] = true;\n            if (interactive)\n               this.zoomChangedInteractive('y', interactive);\n         }\n         if (zoom_z && (force || painter.canZoomInside('z', zmin, zmax))) {\n            this.zoom_zmin = zmin;\n            this.zoom_zmax = zmax;\n            changed = true; r_z = '2';\n            zoom_z = false;\n            req.values[4] = zmin; req.values[5] = zmax;\n            req.flags[4] = req.flags[5] = true;\n            if (interactive)\n               this.zoomChangedInteractive('z', interactive);\n         }\n      };\n\n      // first process zooming (if any)\n      if (zoom_x || zoom_y || zoom_z)\n         this.forEachPainter(painter => checkZooming(painter));\n\n      // force zooming when no any other painter can verify zoom range\n      if (!is_any_check && this.self_drawaxes)\n         checkZooming(null, true);\n\n      // and process unzoom, if any\n      if (unzoom_x || unzoom_y || unzoom_z) {\n         if (unzoom_x) {\n            if (this.zoom_xmin !== this.zoom_xmax) { changed = true; r_x = '0'; }\n            this.zoom_xmin = this.zoom_xmax = 0;\n            req.values[0] = req.values[1] = -1;\n            if (interactive)\n               this.zoomChangedInteractive('x', interactive);\n         }\n         if (unzoom_y) {\n            if (this.zoom_ymin !== this.zoom_ymax) { changed = true; r_y = '1'; }\n            this.zoom_ymin = this.zoom_ymax = 0;\n            req.values[2] = req.values[3] = -1;\n            if (interactive)\n               this.zoomChangedInteractive('y', interactive);\n         }\n         if (unzoom_z) {\n            if (this.zoom_zmin !== this.zoom_zmax) { changed = true; r_z = '2'; }\n            this.zoom_zmin = this.zoom_zmax = 0;\n            req.values[4] = req.values[5] = -1;\n            if (interactive)\n               this.zoomChangedInteractive('z', interactive);\n         }\n      }\n\n      if (!changed)\n         return false;\n\n      if (this.v7NormalMode())\n         this.v7SubmitRequest('zoom', { _typename: `${nsREX}RFrame::RZoomRequest`, ranges: req });\n\n      return this.interactiveRedraw('pad', 'zoom' + r_x + r_y + r_z).then(() => true);\n   }\n\n   /** @summary Zooming of single axis\n     * @param {String} name - axis name like x/y/z but also second axis x2 or y2\n     * @param {Number} vmin - axis minimal value, 0 for unzoom\n     * @param {Number} vmax - axis maximal value, 0 for unzoom\n     * @param {Boolean} [interactive] - if change was performed interactively\n     * @protected */\n   async zoomSingle(name, vmin, vmax, interactive) {\n      const names = ['x', 'y', 'z', 'x2', 'y2'], indx = names.indexOf(name);\n\n      // disable zooming when axis conversion is enabled\n      if (this.projection || (!this[`${name}_handle`] && (name !== 'z')) || (indx < 0))\n         return false;\n\n      let zoom_v = (vmin !== vmax), unzoom_v = false;\n\n      if (zoom_v) {\n         let cnt = 0;\n         if (vmin <= this[name+'min']) { vmin = this[name+'min']; cnt++; }\n         if (vmax >= this[name+'max']) { vmax = this[name+'max']; cnt++; }\n         if (cnt === 2) { zoom_v = false; unzoom_v = true; }\n      } else\n         unzoom_v = (vmin === vmax) && (vmin === 0);\n\n\n      let changed = false, is_any_check = false;\n      const req = {\n             _typename: `${nsREX}RFrame::RUserRanges`,\n             values: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n             flags: [false, false, false, false, false, false, false, false, false, false]\n       },\n\n       checkZooming = (painter, force) => {\n         if (!force && !isFunc(painter?.canZoomInside)) return;\n\n         is_any_check = true;\n\n         if (zoom_v && (force || painter.canZoomInside(name[0], vmin, vmax))) {\n            this[`zoom_${name}min`] = vmin;\n            this[`zoom_${name}max`] = vmax;\n            changed = true;\n            zoom_v = false;\n            req.values[indx*2] = vmin; req.values[indx*2+1] = vmax;\n            req.flags[indx*2] = req.flags[indx*2+1] = true;\n         }\n      };\n\n      // first process zooming (if any)\n      if (zoom_v)\n         this.forEachPainter(painter => checkZooming(painter));\n\n      // force zooming when no any other painter can verify zoom range\n      if (!is_any_check && this.self_drawaxes)\n         checkZooming(null, true);\n\n      if (unzoom_v) {\n         if (this[`zoom_${name}min`] !== this[`zoom_${name}max`]) changed = true;\n         this[`zoom_${name}min`] = this[`zoom_${name}max`] = 0;\n         req.values[indx*2] = req.values[indx*2+1] = -1;\n      }\n\n      if (!changed) return false;\n\n      if (interactive)\n         this.zoomChangedInteractive(name, interactive);\n\n      if (this.v7NormalMode())\n         this.v7SubmitRequest('zoom', { _typename: `${nsREX}RFrame::RZoomRequest`, ranges: req });\n\n      return this.interactiveRedraw('pad', `zoom${indx}`).then(() => true);\n   }\n\n   /** @summary Unzoom single axis */\n   async unzoomSingle(name, interactive) {\n      return this.zoomSingle(name, 0, 0, typeof interactive === 'undefined' ? 'unzoom' : interactive);\n   }\n\n   /** @summary Checks if specified axis zoomed */\n   isAxisZoomed(axis) {\n      return this[`zoom_${axis}min`] !== this[`zoom_${axis}max`];\n   }\n\n   /** @summary Unzoom specified axes\n     * @return {Promise} with boolean flag if zoom is changed */\n   async unzoom(dox, doy, doz) {\n      if (dox === 'all')\n         return this.unzoom('x2').then(() => this.unzoom('y2')).then(() => this.unzoom('xyz'));\n\n      if ((dox === 'x2') || (dox === 'y2'))\n         return this.unzoomSingle(dox);\n\n      if (typeof dox === 'undefined')\n         dox = doy = doz = true;\n      else if (isStr(dox)) {\n         doz = dox.indexOf('z') >= 0;\n         doy = dox.indexOf('y') >= 0;\n         dox = dox.indexOf('x') >= 0;\n      }\n\n      return this.zoom(dox ? 0 : undefined, dox ? 0 : undefined,\n                       doy ? 0 : undefined, doy ? 0 : undefined,\n                       doz ? 0 : undefined, doz ? 0 : undefined,\n                       'unzoom');\n   }\n\n   /** @summary Reset all zoom attributes\n    * @private */\n   resetZoom() {\n      ['x', 'y', 'z', 'x2', 'y2'].forEach(n => {\n         this[`zoom_${n}min`] = undefined;\n         this[`zoom_${n}max`] = undefined;\n         this[`zoom_changed_${n}`] = undefined;\n      });\n   }\n\n   /** @summary Mark/check if zoom for specific axis was changed interactively\n     * @private */\n   zoomChangedInteractive(axis, value) {\n      if (axis === 'reset') {\n         this.zoom_changed_x = this.zoom_changed_y = this.zoom_changed_z = undefined;\n         return;\n      }\n      if (!axis || axis === 'any')\n         return this.zoom_changed_x || this.zoom_changed_y || this.zoom_changed_z;\n\n      if ((axis !== 'x') && (axis !== 'y') && (axis !== 'z')) return;\n\n      const fld = 'zoom_changed_' + axis;\n      if (value === undefined) return this[fld];\n\n      if (value === 'unzoom') {\n         // special handling of unzoom, only if was never changed before flag set to true\n         this[fld] = (this[fld] === undefined);\n         return;\n      }\n\n      if (value) this[fld] = true;\n   }\n\n   /** @summary Fill menu for frame when server is not there */\n   fillObjectOfflineMenu(menu, kind) {\n      if ((kind !== 'x') && (kind !== 'y')) return;\n\n      menu.add('Unzoom', () => this.unzoom(kind));\n\n      // here should be all axes attributes in offline\n   }\n\n   /** @summary Set grid drawing for specified axis */\n   changeFrameAttr(attr, value) {\n      const changes = {};\n      this.v7AttrChange(changes, attr, value);\n      this.v7SetAttr(attr, value);\n      this.v7SendAttrChanges(changes, false); // do not invoke canvas update on the server\n      this.redrawPad();\n   }\n\n   /** @summary Fill context menu */\n   fillContextMenu(menu, kind, obj) {\n      if (kind === 'pal') kind = 'z';\n\n      if ((kind === 'x') || (kind === 'y') || (kind === 'x2') || (kind === 'y2')) {\n         const handle = this[kind+'_handle'],\n               faxis = obj || this[kind+'axis'];\n         if (!handle) return false;\n         menu.header(`${kind.toUpperCase()} axis`, `${urlClassPrefix}ROOT_1_1Experimental_1_1RAxisBase.html`);\n\n         if (isFunc(faxis?.TestBit)) {\n            const main = this.getMainPainter(true);\n            menu.addTAxisMenu(EAxisBits, main || this, faxis, kind);\n            return true;\n         }\n\n         return handle.fillAxisContextMenu(menu, kind);\n      }\n\n      const alone = menu.size() === 0;\n\n      if (alone)\n         menu.header('Frame', `${urlClassPrefix}ROOT_1_1Experimental_1_1RFrame.html`);\n      else\n         menu.separator();\n\n      if (this.zoom_xmin !== this.zoom_xmax)\n         menu.add('Unzoom X', () => this.unzoom('x'));\n      if (this.zoom_ymin !== this.zoom_ymax)\n         menu.add('Unzoom Y', () => this.unzoom('y'));\n      if (this.zoom_zmin !== this.zoom_zmax)\n         menu.add('Unzoom Z', () => this.unzoom('z'));\n      if (this.zoom_x2min !== this.zoom_x2max)\n         menu.add('Unzoom X2', () => this.unzoom('x2'));\n      if (this.zoom_y2min !== this.zoom_y2max)\n         menu.add('Unzoom Y2', () => this.unzoom('y2'));\n      menu.add('Unzoom all', () => this.unzoom('all'));\n\n      menu.separator();\n\n      menu.addchk(this.isTooltipAllowed(), 'Show tooltips', () => this.setTooltipAllowed('toggle'));\n\n      if (this.x_handle)\n         menu.addchk(this.x_handle.draw_grid, 'Grid x', flag => this.changeFrameAttr('gridX', flag));\n      if (this.y_handle)\n         menu.addchk(this.y_handle.draw_grid, 'Grid y', flag => this.changeFrameAttr('gridY', flag));\n      if (this.x_handle && !this.x2_handle)\n         menu.addchk(this.x_handle.draw_swapside, 'Swap x', flag => this.changeFrameAttr('swapX', flag));\n      if (this.y_handle && !this.y2_handle)\n         menu.addchk(this.y_handle.draw_swapside, 'Swap y', flag => this.changeFrameAttr('swapY', flag));\n      if (this.x_handle && !this.x2_handle) {\n         menu.sub('Ticks x');\n         menu.addchk(this.x_handle.draw_ticks === 0, 'off', () => this.changeFrameAttr('ticksX', 0));\n         menu.addchk(this.x_handle.draw_ticks === 1, 'normal', () => this.changeFrameAttr('ticksX', 1));\n         menu.addchk(this.x_handle.draw_ticks === 2, 'ticks on both sides', () => this.changeFrameAttr('ticksX', 2));\n         menu.addchk(this.x_handle.draw_ticks === 3, 'labels on both sides', () => this.changeFrameAttr('ticksX', 3));\n         menu.endsub();\n       }\n      if (this.y_handle && !this.y2_handle) {\n         menu.sub('Ticks y');\n         menu.addchk(this.y_handle.draw_ticks === 0, 'off', () => this.changeFrameAttr('ticksY', 0));\n         menu.addchk(this.y_handle.draw_ticks === 1, 'normal', () => this.changeFrameAttr('ticksY', 1));\n         menu.addchk(this.y_handle.draw_ticks === 2, 'ticks on both sides', () => this.changeFrameAttr('ticksY', 2));\n         menu.addchk(this.y_handle.draw_ticks === 3, 'labels on both sides', () => this.changeFrameAttr('ticksY', 3));\n         menu.endsub();\n       }\n\n      menu.addAttributesMenu(this, alone ? '' : 'Frame ');\n      menu.separator();\n\n      menu.sub('Save as');\n      const fmts = ['svg', 'png', 'jpeg', 'webp'];\n      if (internals.makePDF) fmts.push('pdf');\n      fmts.forEach(fmt => menu.add(`frame.${fmt}`, () => this.getPadPainter().saveAs(fmt, 'frame', `frame.${fmt}`)));\n      menu.endsub();\n\n      return true;\n   }\n\n   /** @summary Convert graphical coordinate into axis value */\n   revertAxis(axis, pnt) { return this[`${axis}_handle`]?.revertPoint(pnt) ?? 0; }\n\n   /** @summary Show axis status message\n     * @desc method called normally when mouse enter main object element\n     * @private */\n   showAxisStatus(axis_name, evnt) {\n      const hint_name = axis_name, hint_title = 'axis',\n            m = d3_pointer(evnt, this.getFrameSvg().node());\n      let id = (axis_name === 'x') ? 0 : 1;\n\n      if (this.swap_xy) id = 1 - id;\n\n      const axis_value = this.revertAxis(axis_name, m[id]);\n\n      this.showObjectStatus(hint_name, hint_title, `${axis_name} : ${this.axisAsText(axis_name, axis_value)}`, `${Math.round(m[0])},${Math.round(m[1])}`);\n   }\n\n   /** @summary Add interactive keys handlers\n    * @private */\n   addKeysHandler() {\n      if (this.isBatchMode()) return;\n      FrameInteractive.assign(this);\n      this.addFrameKeysHandler();\n   }\n\n   /** @summary Add interactive functionality to the frame\n    * @private */\n   addInteractivity(for_second_axes) {\n      if (this.isBatchMode() || (!settings.Zooming && !settings.ContextMenu))\n         return true;\n\n      FrameInteractive.assign(this);\n      if (!for_second_axes)\n         this.addBasicInteractivity();\n      return this.addFrameInteractivity(for_second_axes);\n   }\n\n   /** @summary Set selected range back to pad object - to be implemented\n     * @private */\n   setRootPadRange(/* pad, is3d */) {\n      // TODO: change of pad range and send back to root application\n   }\n\n   /** @summary Toggle log scale on the specified axes */\n   toggleAxisLog(axis) {\n      const handle = this[axis+'_handle'];\n      return handle?.changeAxisLog('toggle');\n   }\n\n} // class RFramePainter\n\nexport { RFramePainter };\n","import { gStyle, settings, browser, constants, internals, addMethods, isPromise, getPromise, postponePromise,\n         isBatchMode, isObject, isFunc, isStr, clTPad, clTFrame, nsREX, nsSVG, urlClassPrefix } from '../core.mjs';\nimport { ColorPalette, addColor, getRootColors, convertColor } from '../base/colors.mjs';\nimport { RObjectPainter } from '../base/RObjectPainter.mjs';\nimport { prSVG, getElementRect, getAbsPosInCanvas, DrawOptions, compressSVG, makeTranslate, svgToImage } from '../base/BasePainter.mjs';\nimport { selectActivePad, getActivePad } from '../base/ObjectPainter.mjs';\nimport { registerForResize, saveFile } from '../gui/utils.mjs';\nimport { BrowserLayout } from '../gui/display.mjs';\nimport { createMenu, closeMenu } from '../gui/menu.mjs';\nimport { PadButtonsHandler } from './TPadPainter.mjs';\n\n\n/**\n * @summary Painter class for RPad\n *\n * @private\n */\n\nclass RPadPainter extends RObjectPainter {\n\n   /** @summary constructor */\n   constructor(dom, pad, iscan) {\n      super(dom, pad, '', 'pad');\n      this.pad = pad;\n      this.iscan = iscan; // indicate if working with canvas\n      this.this_pad_name = '';\n      if (!this.iscan && (pad !== null)) {\n         if (pad.fObjectID)\n            this.this_pad_name = 'pad' + pad.fObjectID; // use objectid as pad name\n         else\n            this.this_pad_name = 'ppp' + internals.id_counter++; // artificial name\n      }\n      this.painters = []; // complete list of all painters in the pad\n      this.has_canvas = true;\n      this.forEachPainter = this.forEachPainterInPad;\n\n      const d = this.selectDom();\n      if (!d.empty() && d.property('_batch_mode'))\n         this.batch_mode = true;\n   }\n\n   /** @summary Indicates that drawing runs in batch mode\n     * @private */\n   isBatchMode() {\n      if (this.batch_mode !== undefined)\n         return this.batch_mode;\n\n      if (isBatchMode())\n         return true;\n\n      if (!this.iscan && this.has_canvas)\n         return this.getCanvPainter()?.isBatchMode();\n\n      return false;\n   }\n\n   /** @summary Indicates that is not Root6 pad painter\n    * @private */\n   isRoot6() { return false; }\n\n   /** @summary Returns true if pad is editable */\n   isEditable() {\n      return true;\n   }\n\n  /** @summary Returns SVG element for the pad itself\n    * @private */\n   svg_this_pad() {\n      return this.getPadSvg(this.this_pad_name);\n   }\n\n   /** @summary Returns main painter on the pad\n     * @desc Typically main painter is TH1/TH2 object which is drawing axes\n    * @private */\n   getMainPainter() {\n      return this.main_painter_ref || null;\n   }\n\n   /** @summary Assign main painter on the pad\n    * @private */\n   setMainPainter(painter, force) {\n      if (!this.main_painter_ref || force)\n         this.main_painter_ref = painter;\n   }\n\n   /** @summary cleanup pad and all primitives inside */\n   cleanup() {\n      if (this._doing_draw)\n         console.error('pad drawing is not completed when cleanup is called');\n\n      this.painters.forEach(p => p.cleanup());\n\n      const svg_p = this.svg_this_pad();\n      if (!svg_p.empty()) {\n         svg_p.property('pad_painter', null);\n         if (!this.iscan) svg_p.remove();\n      }\n\n      delete this.main_painter_ref;\n      delete this.frame_painter_ref;\n      delete this.pads_cache;\n      delete this._pad_x;\n      delete this._pad_y;\n      delete this._pad_width;\n      delete this._pad_height;\n      delete this._doing_draw;\n      delete this._dfltRFont;\n\n      this.painters = [];\n      this.pad = null;\n      this.draw_object = null;\n      this.pad_frame = null;\n      this.this_pad_name = undefined;\n      this.has_canvas = false;\n\n      selectActivePad({ pp: this, active: false });\n\n      super.cleanup();\n   }\n\n   /** @summary Returns frame painter inside the pad\n    * @private */\n   getFramePainter() { return this.frame_painter_ref; }\n\n   /** @summary get pad width */\n   getPadWidth() { return this._pad_width || 0; }\n\n   /** @summary get pad height */\n   getPadHeight() { return this._pad_height || 0; }\n\n   /** @summary return pad log state x or y are allowed */\n   getPadLog(name) { return false; }\n\n   /** @summary get pad rect */\n   getPadRect() {\n      return {\n         x: this._pad_x || 0,\n         y: this._pad_y || 0,\n         width: this.getPadWidth(),\n         height: this.getPadHeight()\n      };\n   }\n\n   /** @summary Returns frame coordinates - also when frame is not drawn */\n   getFrameRect() {\n      const fp = this.getFramePainter();\n      if (fp) return fp.getFrameRect();\n\n      const w = this.getPadWidth(),\n            h = this.getPadHeight(),\n            rect = {};\n\n      rect.szx = Math.round(0.5*w);\n      rect.szy = Math.round(0.5*h);\n      rect.width = 2*rect.szx;\n      rect.height = 2*rect.szy;\n      rect.x = Math.round(w/2 - rect.szx);\n      rect.y = Math.round(h/2 - rect.szy);\n      rect.hint_delta_x = rect.szx;\n      rect.hint_delta_y = rect.szy;\n      rect.transform = makeTranslate(rect.x, rect.y) || '';\n      return rect;\n   }\n\n   /** @summary return RPad object */\n   getRootPad(is_root6) {\n      return (is_root6 === undefined) || !is_root6 ? this.pad : null;\n   }\n\n   /** @summary Cleanup primitives from pad - selector lets define which painters to remove\n    * @private */\n   cleanPrimitives(selector) {\n      // remove all primitives\n      if (selector === true)\n         selector = () => true;\n\n      if (!isFunc(selector))\n         return;\n\n      for (let k = this.painters.length-1; k >= 0; --k) {\n         if (selector(this.painters[k])) {\n            this.painters[k].cleanup();\n            this.painters.splice(k, 1);\n         }\n      }\n   }\n\n   /** @summary Divide pad on sub-pads */\n   async divide(/* nx, ny, use_existing */) {\n      console.warn('RPadPainter.divide not implemented');\n      return this;\n   }\n\n   /** @summary Removes and cleanup specified primitive\n     * @desc also secondary primitives will be removed\n     * @return new index to continue loop or -111 if main painter removed\n     * @private */\n   removePrimitive(arg, clean_only_secondary) {\n      let indx = -1, prim = null;\n      if (Number.isInteger(arg)) {\n         indx = arg; prim = this.painters[indx];\n      } else {\n         indx = this.painters.indexOf(arg); prim = arg;\n      }\n      if (indx < 0)\n         return indx;\n\n      const arr = [];\n      let resindx = indx - 1; // object removed itself\n      arr.push(prim);\n      this.painters.splice(indx, 1);\n\n      let len0 = 0;\n      while (len0 < arr.length) {\n         for (let k = this.painters.length-1; k >= 0; --k) {\n            if (this.painters[k].isSecondary(arr[len0])) {\n               arr.push(this.painters[k]);\n               this.painters.splice(k, 1);\n               if (k <= indx) resindx--;\n            }\n         }\n         len0++;\n      }\n\n      arr.forEach(painter => {\n         if ((painter !== prim) || !clean_only_secondary)\n            painter.cleanup();\n         if (this.main_painter_ref === painter) {\n            delete this.main_painter_ref;\n            resindx = -111;\n         }\n      });\n\n      return resindx;\n   }\n\n   /** @summary try to find object by name in list of pad primitives\n     * @desc used to find title drawing\n     * @private */\n   findInPrimitives(objname, objtype) {\n      console.warn('findInPrimitives not implemented for RPad');\n      return null;\n   }\n\n   /** @summary Try to find painter for specified object\n     * @desc can be used to find painter for some special objects, registered as\n     * histogram functions\n     * @private */\n   findPainterFor(selobj, selname, seltype) {\n      return this.painters.find(p => {\n         const pobj = p.getObject();\n         if (!pobj) return false;\n\n         if (selobj && (pobj === selobj)) return true;\n         if (!selname && !seltype) return false;\n         if (selname && (pobj.fName !== selname)) return false;\n         if (seltype && (pobj._typename !== seltype)) return false;\n         return true;\n      });\n   }\n\n   /** @summary Returns palette associated with pad.\n     * @desc Either from existing palette painter or just default palette */\n   getHistPalette() {\n      const pp = this.findPainterFor(undefined, undefined, `${nsREX}RPaletteDrawable`);\n\n      if (pp) return pp.getHistPalette();\n\n      if (!this.fDfltPalette) {\n         this.fDfltPalette = {\n            _typename: `${nsREX}RPalette`,\n            fColors: [{ fOrdinal: 0, fColor: { fColor: 'rgb(53, 42, 135)' } },\n                      { fOrdinal: 0.125, fColor: { fColor: 'rgb(15, 92, 221)' } },\n                      { fOrdinal: 0.25, fColor: { fColor: 'rgb(20, 129, 214)' } },\n                      { fOrdinal: 0.375, fColor: { fColor: 'rgb(6, 164, 202)' } },\n                      { fOrdinal: 0.5, fColor: { fColor: 'rgb(46, 183, 164)' } },\n                      { fOrdinal: 0.625, fColor: { fColor: 'rgb(135, 191, 119)' } },\n                      { fOrdinal: 0.75, fColor: { fColor: 'rgb(209, 187, 89)' } },\n                      { fOrdinal: 0.875, fColor: { fColor: 'rgb(254, 200, 50)' } },\n                      { fOrdinal: 1, fColor: { fColor: 'rgb(249, 251, 14)' } }],\n             fInterpolate: true,\n             fNormalized: true\n         };\n         addMethods(this.fDfltPalette, `${nsREX}RPalette`);\n      }\n\n      return this.fDfltPalette;\n   }\n\n   /** @summary Returns number of painters\n     * @private */\n   getNumPainters() { return this.painters.length; }\n\n   /** @summary Call function for each painter in pad\n     * @param {function} userfunc - function to call\n     * @param {string} kind - 'all' for all objects (default), 'pads' only pads and sub-pads, 'objects' only for object in current pad\n     * @private */\n   forEachPainterInPad(userfunc, kind) {\n      if (!kind) kind = 'all';\n      if (kind !== 'objects') userfunc(this);\n      for (let k = 0; k < this.painters.length; ++k) {\n         const sub = this.painters[k];\n         if (isFunc(sub.forEachPainterInPad)) {\n            if (kind !== 'objects') sub.forEachPainterInPad(userfunc, kind);\n         } else if (kind !== 'pads') userfunc(sub);\n      }\n   }\n\n   /** @summary register for pad events receiver\n     * @desc in pad painter, while pad may be drawn without canvas\n     * @private */\n   registerForPadEvents(receiver) {\n      this.pad_events_receiver = receiver;\n   }\n\n   /** @summary Generate pad events, normally handled by GED\n     * @desc in pad painter, while pad may be drawn without canvas\n     * @private */\n   producePadEvent(what, padpainter, painter, position) {\n      if ((what === 'select') && isFunc(this.selectActivePad))\n         this.selectActivePad(padpainter, painter, position);\n\n      if (isFunc(this.pad_events_receiver))\n         this.pad_events_receiver({ what, padpainter, painter, position });\n   }\n\n   /** @summary method redirect call to pad events receiver */\n   selectObjectPainter(painter, pos) {\n      const istoppad = (this.iscan || !this.has_canvas),\n          canp = istoppad ? this : this.getCanvPainter();\n\n      if (painter === undefined) painter = this;\n\n      if (pos && !istoppad)\n         pos = getAbsPosInCanvas(this.svg_this_pad(), pos);\n\n      selectActivePad({ pp: this, active: true });\n\n      canp.producePadEvent('select', this, painter, pos);\n   }\n\n   /** @summary Set fast drawing property depending on the size\n     * @private */\n   setFastDrawing(w, h) {\n      const was_fast = this._fast_drawing;\n      this._fast_drawing = settings.SmallPad && ((w < settings.SmallPad.width) || (h < settings.SmallPad.height));\n      if (was_fast !== this._fast_drawing)\n         this.showPadButtons();\n   }\n\n   /** @summary Returns true if canvas configured with grayscale\n     * @private */\n   isGrayscale() {\n      return false;\n   }\n\n   /** @summary Set grayscale mode for the canvas\n     * @private */\n   setGrayscale(/* flag */) {\n      console.error('grayscale mode not implemented for RCanvas');\n   }\n\n   /** @summary Create SVG element for the canvas */\n   createCanvasSvg(check_resize, new_size) {\n      const lmt = 5;\n      let factor = null, svg = null, rect = null, btns, frect;\n\n      if (check_resize > 0) {\n         if (this._fixed_size)\n            return check_resize > 1; // flag used to force re-drawing of all sub-pads\n\n         svg = this.getCanvSvg();\n         if (svg.empty())\n            return false;\n\n         factor = svg.property('height_factor');\n\n         rect = this.testMainResize(check_resize, null, factor);\n\n         if (!rect.changed && (check_resize === 1))\n            return false;\n\n         if (!this.isBatchMode())\n            btns = this.getLayerSvg('btns_layer', this.this_pad_name);\n\n         frect = svg.selectChild('.canvas_fillrect');\n      } else {\n         const render_to = this.selectDom();\n\n         if (render_to.style('position') === 'static')\n            render_to.style('position', 'relative');\n\n         svg = render_to.append('svg')\n             .attr('class', 'jsroot root_canvas')\n             .property('pad_painter', this) // this is custom property\n             .property('redraw_by_resize', false); // could be enabled to force redraw by each resize\n\n         this.setTopPainter(); // assign canvas as top painter of that element\n\n         if (!this.isBatchMode() && !this.online_canvas)\n            svg.append('svg:title').text('ROOT canvas');\n\n         frect = svg.append('svg:path').attr('class', 'canvas_fillrect');\n         if (!this.isBatchMode()) {\n            frect.style('pointer-events', 'visibleFill')\n                 .on('dblclick', evnt => this.enlargePad(evnt, true))\n                 .on('click', () => this.selectObjectPainter(this, null))\n                 .on('mouseenter', () => this.showObjectStatus())\n                 .on('contextmenu', settings.ContextMenu ? evnt => this.padContextMenu(evnt) : null);\n         }\n\n         svg.append('svg:g').attr('class', 'primitives_layer');\n         svg.append('svg:g').attr('class', 'info_layer');\n         if (!this.isBatchMode()) {\n            btns = svg.append('svg:g')\n                      .attr('class', 'btns_layer')\n                      .property('leftside', settings.ToolBarSide === 'left')\n                      .property('vertical', settings.ToolBarVert);\n         }\n\n         factor = 0.66;\n         if (this.pad && this.pad.fWinSize[0] && this.pad.fWinSize[1]) {\n            factor = this.pad.fWinSize[1] / this.pad.fWinSize[0];\n            if ((factor < 0.1) || (factor > 10)) factor = 0.66;\n         }\n\n         if (this._fixed_size) {\n            render_to.style('overflow', 'auto');\n            rect = { width: this.pad.fWinSize[0], height: this.pad.fWinSize[1] };\n            if (!rect.width || !rect.height)\n               rect = getElementRect(render_to);\n         } else\n            rect = this.testMainResize(2, new_size, factor);\n      }\n\n      this.createAttFill({ pattern: 1001, color: 0 });\n\n      if ((rect.width <= lmt) || (rect.height <= lmt)) {\n         svg.style('display', 'none');\n         console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);\n         rect.width = 200; rect.height = 100; // just to complete drawing\n      } else\n         svg.style('display', null);\n\n      if (this._fixed_size) {\n         svg.attr('x', 0)\n            .attr('y', 0)\n            .attr('width', rect.width)\n            .attr('height', rect.height)\n            .style('position', 'absolute');\n      } else {\n        svg.attr('x', 0)\n           .attr('y', 0)\n           .style('width', '100%')\n           .style('height', '100%')\n           .style('position', 'absolute')\n           .style('left', 0).style('top', 0).style('bottom', 0).style('right', 0);\n      }\n\n      svg.style('filter', settings.DarkMode ? 'invert(100%)' : null);\n\n      svg.attr('viewBox', `0 0 ${rect.width} ${rect.height}`)\n         .attr('preserveAspectRatio', 'none')  // we do not preserve relative ratio\n         .property('height_factor', factor)\n         .property('draw_x', 0)\n         .property('draw_y', 0)\n         .property('draw_width', rect.width)\n         .property('draw_height', rect.height);\n\n      this._pad_x = 0;\n      this._pad_y = 0;\n      this._pad_width = rect.width;\n      this._pad_height = rect.height;\n\n      frect.attr('d', `M0,0H${rect.width}V${rect.height}H0Z`)\n           .call(this.fillatt.func);\n\n      this.setFastDrawing(rect.width, rect.height);\n\n      if (this.alignButtons && btns)\n         this.alignButtons(btns, rect.width, rect.height);\n\n      return true;\n   }\n\n   /** @summary Draw item name on canvas, dummy for RPad\n     * @private */\n   drawItemNameOnCanvas() {\n   }\n\n   /** @summary Enlarge pad draw element when possible */\n   enlargePad(evnt, is_dblclick, is_escape) {\n      evnt?.preventDefault();\n      evnt?.stopPropagation();\n\n      // ignore double click on canvas itself for enlarge\n      if (is_dblclick && this._websocket && (this.enlargeMain('state') === 'off'))\n         return;\n\n      const svg_can = this.getCanvSvg(),\n            pad_enlarged = svg_can.property('pad_enlarged');\n\n      if (this.iscan || !this.has_canvas || (!pad_enlarged && !this.hasObjectsToDraw() && !this.painters)) {\n         if (this._fixed_size) return; // canvas cannot be enlarged in such mode\n         if (!this.enlargeMain(is_escape ? false : 'toggle')) return;\n         if (this.enlargeMain('state') === 'off')\n            svg_can.property('pad_enlarged', null);\n         else\n            selectActivePad({ pp: this, active: true });\n      } else if (!pad_enlarged && !is_escape) {\n         this.enlargeMain(true, true);\n         svg_can.property('pad_enlarged', this.pad);\n         selectActivePad({ pp: this, active: true });\n      } else if (pad_enlarged === this.pad) {\n         this.enlargeMain(false);\n         svg_can.property('pad_enlarged', null);\n      } else if (!is_escape && is_dblclick)\n         console.error('missmatch with pad double click events');\n\n      return this.checkResize(true);\n   }\n\n   /** @summary Create SVG element for the pad\n     * @return true when pad is displayed and all its items should be redrawn */\n   createPadSvg(only_resize) {\n      if (!this.has_canvas) {\n         this.createCanvasSvg(only_resize ? 2 : 0);\n         return true;\n      }\n\n      const svg_parent = this.getPadSvg(this.pad_name), // this.pad_name MUST be here to select parent pad\n            svg_can = this.getCanvSvg(),\n            width = svg_parent.property('draw_width'),\n            height = svg_parent.property('draw_height'),\n            pad_enlarged = svg_can.property('pad_enlarged');\n      let pad_visible = true,\n          w = width, h = height, x = 0, y = 0,\n          svg_pad = null, svg_rect = null, btns = null;\n\n      if (this.pad?.fPos && this.pad?.fSize) {\n         x = Math.round(width * this.pad.fPos.fHoriz.fArr[0]);\n         y = Math.round(height * this.pad.fPos.fVert.fArr[0]);\n         w = Math.round(width * this.pad.fSize.fHoriz.fArr[0]);\n         h = Math.round(height * this.pad.fSize.fVert.fArr[0]);\n      }\n\n      if (pad_enlarged) {\n         pad_visible = false;\n         if (pad_enlarged === this.pad)\n            pad_visible = true;\n         else\n            this.forEachPainterInPad(pp => { if (pp.getObject() === pad_enlarged) pad_visible = true; }, 'pads');\n\n         if (pad_visible) { w = width; h = height; x = y = 0; }\n      }\n\n      if (only_resize) {\n         svg_pad = this.svg_this_pad();\n         svg_rect = svg_pad.selectChild('.root_pad_border');\n         if (!this.isBatchMode())\n            btns = this.getLayerSvg('btns_layer', this.this_pad_name);\n         this.addPadInteractive(true);\n      } else {\n         svg_pad = svg_parent.selectChild('.primitives_layer')\n             .append('svg:svg') // here was g before, svg used to blend all drawings outside\n             .classed('__root_pad_' + this.this_pad_name, true)\n             .attr('pad', this.this_pad_name) // set extra attribute  to mark pad name\n             .property('pad_painter', this); // this is custom property\n\n         if (!this.isBatchMode())\n            svg_pad.append('svg:title').text('ROOT subpad');\n\n         svg_rect = svg_pad.append('svg:path').attr('class', 'root_pad_border');\n\n         svg_pad.append('svg:g').attr('class', 'primitives_layer');\n         if (!this.isBatchMode()) {\n            btns = svg_pad.append('svg:g')\n                          .attr('class', 'btns_layer')\n                          .property('leftside', settings.ToolBarSide !== 'left')\n                          .property('vertical', settings.ToolBarVert);\n         }\n\n         if (settings.ContextMenu)\n            svg_rect.on('contextmenu', evnt => this.padContextMenu(evnt));\n\n         if (!this.isBatchMode()) {\n            svg_rect.style('pointer-events', 'visibleFill') // get events also for not visible rect\n                    .on('dblclick', evnt => this.enlargePad(evnt, true))\n                    .on('click', () => this.selectObjectPainter(this, null))\n                    .on('mouseenter', () => this.showObjectStatus());\n         }\n      }\n\n      this.createAttFill({ attr: this.pad });\n\n      this.createAttLine({ attr: this.pad, color0: this.pad.fBorderMode === 0 ? 'none' : '' });\n\n      svg_pad.style('display', pad_visible ? null : 'none')\n             .attr('viewBox', `0 0 ${w} ${h}`) // due to svg\n             .attr('preserveAspectRatio', 'none')   // due to svg, we do not preserve relative ratio\n             .attr('x', x)    // due to svg\n             .attr('y', y)   // due to svg\n             .attr('width', w)    // due to svg\n             .attr('height', h)   // due to svg\n             .property('draw_x', x) // this is to make similar with canvas\n             .property('draw_y', y)\n             .property('draw_width', w)\n             .property('draw_height', h);\n\n      this._pad_x = x;\n      this._pad_y = y;\n      this._pad_width = w;\n      this._pad_height = h;\n\n      svg_rect.attr('d', `M0,0H${w}V${h}H0Z`)\n              .call(this.fillatt.func)\n              .call(this.lineatt.func);\n\n      this.setFastDrawing(w, h);\n\n      // special case of 3D canvas overlay\n      if (svg_pad.property('can3d') === constants.Embed3D.Overlay) {\n         this.selectDom().select('.draw3d_' + this.this_pad_name)\n             .style('display', pad_visible ? '' : 'none');\n      }\n\n      if (this.alignButtons && btns) this.alignButtons(btns, w, h);\n\n      return pad_visible;\n   }\n\n   /** @summary Add pad interactive features like dragging and resize\n    * @private */\n   addPadInteractive(cleanup = false) {\n      if (isFunc(this.$userInteractive)) {\n         this.$userInteractive();\n         delete this.$userInteractive;\n      }\n      // if (this.isBatchMode())\n      //   return;\n   }\n\n   /** @summary returns true if any objects beside sub-pads exists in the pad */\n   hasObjectsToDraw() {\n      return this.pad?.fPrimitives?.find(obj => obj._typename !== `${nsREX}RPadDisplayItem`);\n   }\n\n   /** @summary sync drawing/redrawing/resize of the pad\n     * @param {string} kind - kind of draw operation, if true - always queued\n     * @return {Promise} when pad is ready for draw operation or false if operation already queued\n     * @private */\n   syncDraw(kind) {\n      const entry = { kind: kind || 'redraw' };\n      if (this._doing_draw === undefined) {\n         this._doing_draw = [entry];\n         return Promise.resolve(true);\n      }\n      // if queued operation registered, ignore next calls, indx === 0 is running operation\n      if ((entry.kind !== true) && (this._doing_draw.findIndex((e, i) => (i > 0) && (e.kind === entry.kind)) > 0))\n         return false;\n      this._doing_draw.push(entry);\n      return new Promise(resolveFunc => {\n         entry.func = resolveFunc;\n      });\n   }\n\n   /** @summary confirms that drawing is completed, may trigger next drawing immediately\n     * @private */\n   confirmDraw() {\n      if (this._doing_draw === undefined)\n         return console.warn('failure, should not happen');\n      this._doing_draw.shift();\n      if (this._doing_draw.length === 0)\n         delete this._doing_draw;\n      else {\n         const entry = this._doing_draw[0];\n         if (entry.func) { entry.func(); delete entry.func; }\n      }\n   }\n\n   /** @summary Draw single primitive */\n   async drawObject(/* dom, obj, opt */) {\n      console.log('Not possible to draw object without loading of draw.mjs');\n      return null;\n   }\n\n   /** @summary Draw pad primitives\n     * @private */\n   async drawPrimitives(indx) {\n      if (indx === undefined) {\n         if (this.iscan)\n            this._start_tm = new Date().getTime();\n\n         // set number of primitives\n         this._num_primitives = this.pad?.fPrimitives?.length ?? 0;\n\n         return this.syncDraw(true).then(() => this.drawPrimitives(0));\n      }\n\n      if (!this.pad || (indx >= this._num_primitives)) {\n         this.confirmDraw();\n\n         if (this._start_tm) {\n            const spenttm = new Date().getTime() - this._start_tm;\n            if (spenttm > 3000) console.log(`Canvas drawing took ${(spenttm*1e-3).toFixed(2)}s`);\n            delete this._start_tm;\n         }\n\n         return;\n      }\n\n      // handle used to invoke callback only when necessary\n      return this.drawObject(this, this.pad.fPrimitives[indx], '').then(op => {\n         // mark painter as belonging to primitives\n         if (isObject(op))\n            op._primitive = true;\n\n         return this.drawPrimitives(indx+1);\n      });\n   }\n\n   /** @summary Process tooltip event in the pad\n     * @private */\n   processPadTooltipEvent(pnt) {\n      const painters = [], hints = [];\n\n      // first count - how many processors are there\n      this.painters?.forEach(obj => {\n         if (isFunc(obj.processTooltipEvent)) painters.push(obj);\n      });\n\n      if (pnt) pnt.nproc = painters.length;\n\n      painters.forEach(obj => {\n         const hint = obj.processTooltipEvent(pnt) || { user_info: null };\n         hints.push(hint);\n         if (pnt?.painters) hint.painter = obj;\n      });\n\n      return hints;\n   }\n\n   /** @summary Changes canvas dark mode\n     * @private */\n   changeDarkMode(mode) {\n      this.getCanvSvg().style('filter', (mode ?? settings.DarkMode) ? 'invert(100%)' : null);\n   }\n\n   /** @summary Fill pad context menu\n     * @private */\n   fillContextMenu(menu) {\n      const clname = this.iscan ? 'RCanvas' : 'RPad';\n\n      menu.header(clname, `${urlClassPrefix}ROOT_1_1Experimental_1_1${clname}.html`);\n\n      menu.addchk(this.isTooltipAllowed(), 'Show tooltips', () => this.setTooltipAllowed('toggle'));\n\n      if (!this._websocket) {\n         menu.addAttributesMenu(this);\n         if (this.iscan) {\n            menu.addSettingsMenu(false, false, arg => {\n               if (arg === 'dark') this.changeDarkMode();\n            });\n         }\n      }\n\n      menu.separator();\n\n      if (isFunc(this.hasMenuBar) && isFunc(this.actiavteMenuBar))\n         menu.addchk(this.hasMenuBar(), 'Menu bar', flag => this.actiavteMenuBar(flag));\n\n      if (isFunc(this.hasEventStatus) && isFunc(this.activateStatusBar) && isFunc(this.canStatusBar)) {\n         if (this.canStatusBar())\n            menu.addchk(this.hasEventStatus(), 'Event status', () => this.activateStatusBar('toggle'));\n      }\n\n      if (this.enlargeMain() || (this.has_canvas && this.hasObjectsToDraw()))\n         menu.addchk((this.enlargeMain('state') === 'on'), 'Enlarge ' + (this.iscan ? 'canvas' : 'pad'), () => this.enlargePad());\n\n      const fname = this.this_pad_name || (this.iscan ? 'canvas' : 'pad');\n      menu.sub('Save as');\n      ['svg', 'png', 'jpeg', 'pdf', 'webp'].forEach(fmt => menu.add(`${fname}.${fmt}`, () => this.saveAs(fmt, this.iscan, `${fname}.${fmt}`)));\n      menu.endsub();\n\n      return true;\n   }\n\n   /** @summary Show pad context menu\n     * @private */\n   padContextMenu(evnt) {\n      if (evnt.stopPropagation) {\n         // this is normal event processing and not emulated jsroot event\n\n         evnt.stopPropagation(); // disable main context menu\n         evnt.preventDefault();  // disable browser context menu\n\n         this.getFramePainter()?.setLastEventPos();\n      }\n\n      createMenu(evnt, this).then(menu => {\n         this.fillContextMenu(menu);\n         return this.fillObjectExecMenu(menu);\n      }).then(menu => menu.show());\n   }\n\n   /** @summary Redraw legend object\n    * @desc Used when object attributes are changed to ensure that legend is up to date\n    * @private */\n   async redrawLegend() {\n   }\n\n   /** @summary Redraw pad means redraw ourself\n     * @return {Promise} when redrawing ready */\n   async redrawPad(reason) {\n      const sync_promise = this.syncDraw(reason);\n      if (sync_promise === false) {\n         console.log('Prevent RPad redrawing');\n         return false;\n      }\n\n      let showsubitems = true;\n      const redrawNext = indx => {\n         while (indx < this.painters.length) {\n            const sub = this.painters[indx++];\n            let res = 0;\n            if (showsubitems || sub.this_pad_name)\n               res = sub.redraw(reason);\n\n            if (isPromise(res))\n               return res.then(() => redrawNext(indx));\n         }\n         return true;\n      };\n\n      return sync_promise.then(() => {\n         if (this.iscan)\n            this.createCanvasSvg(2);\n          else\n            showsubitems = this.createPadSvg(true);\n\n         return redrawNext(0);\n      }).then(() => {\n         this.addPadInteractive();\n         if (getActivePad() === this)\n            this.getCanvPainter()?.producePadEvent('padredraw', this);\n         this.confirmDraw();\n         return true;\n      });\n   }\n\n   /** @summary redraw pad */\n   redraw(reason) {\n      return this.redrawPad(reason);\n   }\n\n\n   /** @summary Checks if pad should be redrawn by resize\n     * @private */\n   needRedrawByResize() {\n      const elem = this.svg_this_pad();\n      if (!elem.empty() && elem.property('can3d') === constants.Embed3D.Overlay) return true;\n\n      for (let i = 0; i < this.painters.length; ++i) {\n         if (isFunc(this.painters[i].needRedrawByResize))\n            if (this.painters[i].needRedrawByResize()) return true;\n      }\n\n      return false;\n   }\n\n   /** @summary Check resize of canvas */\n   checkCanvasResize(size, force) {\n      if (this._ignore_resize)\n         return false;\n\n      if (!this.iscan && this.has_canvas) return false;\n\n      const sync_promise = this.syncDraw('canvas_resize');\n      if (sync_promise === false) return false;\n\n      if ((size === true) || (size === false)) { force = size; size = null; }\n\n      if (isObject(size) && size.force) force = true;\n\n      if (!force) force = this.needRedrawByResize();\n\n      let changed = false;\n      const redrawNext = indx => {\n         if (!changed || (indx >= this.painters.length)) {\n            this.confirmDraw();\n            return changed;\n         }\n\n         return getPromise(this.painters[indx].redraw(force ? 'redraw' : 'resize')).then(() => redrawNext(indx+1));\n      };\n\n\n      return sync_promise.then(() => {\n         changed = this.createCanvasSvg(force ? 2 : 1, size);\n\n         if (changed && this.iscan && this.pad && this.online_canvas && !this.embed_canvas && !this.isBatchMode()) {\n            if (this._resize_tmout)\n               clearTimeout(this._resize_tmout);\n            this._resize_tmout = setTimeout(() => {\n               delete this._resize_tmout;\n               if (!this.pad?.fWinSize) return;\n               const cw = this.getPadWidth(), ch = this.getPadHeight();\n               if ((cw > 0) && (ch > 0) && ((this.pad.fWinSize[0] !== cw) || (this.pad.fWinSize[1] !== ch))) {\n                  this.pad.fWinSize[0] = cw;\n                  this.pad.fWinSize[1] = ch;\n                  this.sendWebsocket(`RESIZED:[${cw},${ch}]`);\n               }\n            }, 1000); // long enough delay to prevent multiple occurrence\n         }\n\n         // if canvas changed, redraw all its subitems.\n         // If redrawing was forced for canvas, same applied for sub-elements\n         return redrawNext(0);\n      });\n   }\n\n   /** @summary update RPad object\n     * @private */\n   updateObject(obj) {\n      if (!obj) return false;\n\n      this.pad.fStyle = obj.fStyle;\n      this.pad.fAttr = obj.fAttr;\n\n      if (this.iscan) {\n         this.pad.fTitle = obj.fTitle;\n         this.pad.fWinSize = obj.fWinSize;\n      } else {\n         this.pad.fPos = obj.fPos;\n         this.pad.fSize = obj.fSize;\n      }\n\n      return true;\n   }\n\n\n   /** @summary Add object painter to list of primitives\n     * @private */\n   addObjectPainter(objpainter, lst, indx) {\n      if (objpainter && lst && lst[indx] && (objpainter.snapid === undefined)) {\n         // keep snap id in painter, will be used for the\n         if (this.painters.indexOf(objpainter) < 0)\n            this.painters.push(objpainter);\n         objpainter.assignSnapId(lst[indx].fObjectID);\n         if (!objpainter.rstyle) objpainter.rstyle = lst[indx].fStyle || this.rstyle;\n      }\n   }\n\n   /** @summary Extract properties from TObjectDisplayItem */\n   extractTObjectProp(snap) {\n      if (snap.fColIndex && snap.fColValue) {\n         const colors = this.root_colors || getRootColors();\n         for (let k = 0; k < snap.fColIndex.length; ++k)\n            colors[snap.fColIndex[k]] = convertColor(snap.fColValue[k]);\n       }\n\n      // painter used only for evaluation of attributes\n      const pattr = new RObjectPainter(), obj = snap.fObject;\n      pattr.assignObject(snap);\n      pattr.csstype = snap.fCssType;\n      pattr.rstyle = snap.fStyle;\n\n      snap.fOption = pattr.v7EvalAttr('options', '');\n\n      const extract_color = (member_name, attr_name) => {\n         const col = pattr.v7EvalColor(attr_name, '');\n         if (col) obj[member_name] = addColor(col, this.root_colors);\n      };\n\n      // handle TAttLine\n      if ((obj.fLineColor !== undefined) && (obj.fLineWidth !== undefined) && (obj.fLineStyle !== undefined)) {\n         extract_color('fLineColor', 'line_color');\n         obj.fLineWidth = pattr.v7EvalAttr('line_width', obj.fLineWidth);\n         obj.fLineStyle = pattr.v7EvalAttr('line_style', obj.fLineStyle);\n      }\n\n      // handle TAttFill\n      if ((obj.fFillColor !== undefined) && (obj.fFillStyle !== undefined)) {\n         extract_color('fFillColor', 'fill_color');\n         obj.fFillStyle = pattr.v7EvalAttr('fill_style', obj.fFillStyle);\n      }\n\n      // handle TAttMarker\n      if ((obj.fMarkerColor !== undefined) && (obj.fMarkerStyle !== undefined) && (obj.fMarkerSize !== undefined)) {\n         extract_color('fMarkerColor', 'marker_color');\n         obj.fMarkerStyle = pattr.v7EvalAttr('marker_style', obj.fMarkerStyle);\n         obj.fMarkerSize = pattr.v7EvalAttr('marker_size', obj.fMarkerSize);\n      }\n\n      // handle TAttText\n      if ((obj.fTextColor !== undefined) && (obj.fTextAlign !== undefined) && (obj.fTextAngle !== undefined) && (obj.fTextSize !== undefined)) {\n         extract_color('fTextColor', 'text_color');\n         obj.fTextAlign = pattr.v7EvalAttr('text_align', obj.fTextAlign);\n         obj.fTextAngle = pattr.v7EvalAttr('text_angle', obj.fTextAngle);\n         obj.fTextSize = pattr.v7EvalAttr('text_size', obj.fTextSize);\n         // TODO: v7 font handling differs much from v6, ignore for the moment\n      }\n   }\n\n   /** @summary Function called when drawing next snapshot from the list\n     * @return {Promise} with pad painter when ready\n     * @private */\n   async drawNextSnap(lst, indx) {\n      if (indx === undefined) {\n         indx = -1;\n         // flag used to prevent immediate pad redraw during first draw\n         this._snaps_map = {}; // to control how much snaps are drawn\n         this._num_primitives = lst ? lst.length : 0;\n         this._auto_color_cnt = 0;\n      }\n\n      delete this.next_rstyle;\n\n      ++indx; // change to the next snap\n\n      if (!lst || indx >= lst.length) {\n         delete this._snaps_map;\n         delete this._auto_color_cnt;\n         return this;\n      }\n\n      const snap = lst[indx],\n            snapid = snap.fObjectID;\n      let cnt = this._snaps_map[snapid],\n          objpainter = null;\n\n      if (cnt) cnt++; else cnt=1;\n      this._snaps_map[snapid] = cnt; // check how many objects with same snapid drawn, use them again\n\n      // empty object, no need to do something, take next\n      if (snap.fDummy) return this.drawNextSnap(lst, indx);\n\n      // first appropriate painter for the object\n      // if same object drawn twice, two painters will exists\n      for (let k = 0; k < this.painters.length; ++k) {\n         if (this.painters[k].snapid === snapid)\n            if (--cnt === 0) { objpainter = this.painters[k]; break; }\n      }\n\n      if (objpainter) {\n         if (snap._typename === `${nsREX}RPadDisplayItem`) {\n            // sub-pad\n            return objpainter.redrawPadSnap(snap).then(ppainter => {\n               this.addObjectPainter(ppainter, lst, indx);\n               return this.drawNextSnap(lst, indx);\n            });\n         }\n\n         if (snap._typename === `${nsREX}TObjectDisplayItem`)\n            this.extractTObjectProp(snap);\n\n         let promise;\n\n         if (objpainter.updateObject(snap.fDrawable || snap.fObject || snap, snap.fOption || '', true))\n            promise = objpainter.redraw();\n\n         return getPromise(promise).then(() => this.drawNextSnap(lst, indx)); // call next\n      }\n\n      if (snap._typename === `${nsREX}RPadDisplayItem`) { // sub-pad\n         const subpad = snap, // not sub-pad, but just attributes\n               padpainter = new RPadPainter(this, subpad, false);\n         padpainter.decodeOptions('');\n         padpainter.addToPadPrimitives();\n         padpainter.assignSnapId(snap.fObjectID);\n         padpainter.rstyle = snap.fStyle;\n\n         padpainter.createPadSvg();\n\n         if (snap.fPrimitives && snap.fPrimitives.length > 0)\n            padpainter.addPadButtons();\n\n         return padpainter.drawNextSnap(snap.fPrimitives).then(() => {\n            padpainter.addPadInteractive();\n            return this.drawNextSnap(lst, indx);\n         });\n      }\n\n      // will be used in addToPadPrimitives to assign style to sub-painters\n      this.next_rstyle = lst[indx].fStyle || this.rstyle;\n\n      if (snap._typename === `${nsREX}TObjectDisplayItem`) {\n         // identifier used in RObjectDrawable\n         const webSnapIds = { kNone: 0, kObject: 1, kColors: 4, kStyle: 5, kPalette: 6 };\n\n         if (snap.fKind === webSnapIds.kStyle) {\n            Object.assign(gStyle, snap.fObject);\n            return this.drawNextSnap(lst, indx);\n         }\n\n         if (snap.fKind === webSnapIds.kColors) {\n            const ListOfColors = [], arr = snap.fObject.arr;\n            for (let n = 0; n < arr.length; ++n) {\n               const name = arr[n].fString, p = name.indexOf('=');\n               if (p > 0)\n                  ListOfColors[parseInt(name.slice(0, p))] = convertColor(name.slice(p+1));\n            }\n\n            this.root_colors = ListOfColors;\n            // set global list of colors\n            // adoptRootColors(ListOfColors);\n            return this.drawNextSnap(lst, indx);\n         }\n\n         if (snap.fKind === webSnapIds.kPalette) {\n            const arr = snap.fObject.arr, palette = [];\n            for (let n = 0; n < arr.length; ++n)\n               palette[n] = arr[n].fString;\n            this.custom_palette = new ColorPalette(palette);\n            return this.drawNextSnap(lst, indx);\n         }\n\n         if (!this.getFramePainter()) {\n            return this.drawObject(this, { _typename: clTFrame, $dummy: true }, '')\n                       .then(() => this.drawNextSnap(lst, indx-1));\n         } // call same object again\n\n         this.extractTObjectProp(snap);\n      }\n\n      // TODO - fDrawable is v7, fObject from v6, maybe use same data member?\n      return this.drawObject(this, snap.fDrawable || snap.fObject || snap, snap.fOption || '').then(objpainter => {\n         this.addObjectPainter(objpainter, lst, indx);\n         return this.drawNextSnap(lst, indx);\n      });\n   }\n\n   /** @summary Search painter with specified snapid, also sub-pads are checked\n     * @private */\n   findSnap(snapid, onlyid) {\n      function check(checkid) {\n         if (!checkid || !isStr(checkid)) return false;\n         if (checkid === snapid) return true;\n         return onlyid && (checkid.length > snapid.length) &&\n                (checkid.indexOf(snapid) === (checkid.length - snapid.length));\n      }\n\n      if (check(this.snapid)) return this;\n\n      if (!this.painters) return null;\n\n      for (let k=0; k<this.painters.length; ++k) {\n         let sub = this.painters[k];\n\n         if (!onlyid && isFunc(sub.findSnap))\n            sub = sub.findSnap(snapid);\n         else if (!check(sub.snapid))\n            sub = null;\n\n         if (sub) return sub;\n      }\n\n      return null;\n   }\n\n   /** @summary Redraw pad snap\n     * @desc Online version of drawing pad primitives\n     * @return {Promise} with pad painter */\n   async redrawPadSnap(snap) {\n      // for the pad/canvas display item contains list of primitives plus pad attributes\n\n      if (!snap || !snap.fPrimitives)\n         return this;\n\n      if (this.iscan && this._websocket && snap.fTitle && !this.embed_canvas && (typeof document !== 'undefined'))\n         document.title = snap.fTitle;\n\n      if (this.snapid === undefined) {\n         // first time getting snap, create all gui elements first\n\n         this.assignSnapId(snap.fObjectID);\n\n         this.draw_object = snap;\n         this.pad = snap;\n\n         if (this.isBatchMode() && this.iscan)\n             this._fixed_size = true;\n\n         const mainid = this.selectDom().attr('id');\n\n         if (!this.isBatchMode() && !this.use_openui && !this.brlayout && mainid && isStr(mainid)) {\n            this.brlayout = new BrowserLayout(mainid, null, this);\n            this.brlayout.create(mainid, true);\n            this.setDom(this.brlayout.drawing_divid()); // need to create canvas\n            registerForResize(this.brlayout);\n         }\n\n         this.createCanvasSvg(0);\n         this.addPadButtons(true);\n\n         return this.drawNextSnap(snap.fPrimitives).then(() => {\n            if (isFunc(this.onCanvasUpdated))\n               this.onCanvasUpdated(this);\n            return this;\n         });\n      }\n\n      // update only pad/canvas attributes\n      this.updateObject(snap);\n\n      // apply all changes in the object (pad or canvas)\n      if (this.iscan)\n         this.createCanvasSvg(2);\n       else\n         this.createPadSvg(true);\n\n\n      let isanyfound = false, isanyremove = false;\n\n      // find and remove painters which no longer exists in the list\n      for (let k = 0; k < this.painters.length; ++k) {\n         let sub = this.painters[k];\n         if (sub.snapid === undefined) continue; // look only for painters with snapid\n\n         snap.fPrimitives.forEach(prim => {\n            if (sub && (prim.fObjectID === sub.snapid)) {\n               sub = null; isanyfound = true;\n            }\n         });\n\n         if (sub) {\n            // remove painter which does not found in the list of snaps\n            this.painters.splice(k--, 1);\n            sub.cleanup(); // cleanup such painter\n            isanyremove = true;\n            if (this.main_painter_ref === sub)\n               delete this.main_painter_ref;\n         }\n      }\n\n      if (isanyremove)\n         delete this.pads_cache;\n\n      if (!isanyfound) {\n         let fp = this.getFramePainter();\n         // cannot preserve ROOT6 frame - it must be recreated\n         if (fp?.is_root6()) fp = null;\n         for (let k = 0; k < this.painters.length; ++k) {\n            if (fp !== this.painters[k])\n               this.painters[k].cleanup();\n         }\n         this.painters = [];\n         delete this.main_painter_ref;\n         if (fp) {\n            this.painters.push(fp);\n            fp.cleanFrameDrawings();\n            fp.redraw(); // need to create all layers again\n         }\n         if (isFunc(this.removePadButtons))\n            this.removePadButtons();\n         this.addPadButtons(true);\n      }\n\n      return this.drawNextSnap(snap.fPrimitives).then(() => {\n         this.addPadInteractive();\n         if (getActivePad() === this)\n            this.getCanvPainter()?.producePadEvent('padredraw', this);\n         if (isFunc(this.onCanvasUpdated))\n            this.onCanvasUpdated(this);\n         return this;\n      });\n   }\n\n   /** @summary Create image for the pad\n     * @desc Used with web-based canvas to create images for server side\n     * @return {Promise} with image data, coded with btoa() function\n     * @private */\n   async createImage(format) {\n      if ((format === 'png') || (format === 'jpeg') || (format === 'svg') || (format === 'webp') || (format === 'pdf')) {\n         return this.produceImage(true, format).then(res => {\n            if (!res || (format === 'svg')) return res;\n            const separ = res.indexOf('base64,');\n            return (separ > 0) ? res.slice(separ+7) : '';\n         });\n      }\n\n      return '';\n   }\n\n   /** @summary Show context menu for specified item\n     * @private */\n   itemContextMenu(name) {\n       const rrr = this.svg_this_pad().node().getBoundingClientRect(),\n           evnt = { clientX: rrr.left+10, clientY: rrr.top + 10 };\n\n       // use timeout to avoid conflict with mouse click and automatic menu close\n       if (name === 'pad')\n          return postponePromise(() => this.padContextMenu(evnt), 50);\n\n       let selp = null, selkind;\n\n       switch (name) {\n          case 'xaxis':\n          case 'yaxis':\n          case 'zaxis':\n             selp = this.getMainPainter();\n             selkind = name[0];\n             break;\n          case 'frame':\n             selp = this.getFramePainter();\n             break;\n          default: {\n             const indx = parseInt(name);\n             if (Number.isInteger(indx)) selp = this.painters[indx];\n          }\n       }\n\n       if (!isFunc(selp?.fillContextMenu)) return;\n\n       return createMenu(evnt, selp).then(menu => {\n          const offline_menu = selp.fillContextMenu(menu, selkind);\n          if (offline_menu || selp.snapid)\n             selp.fillObjectExecMenu(menu, selkind).then(() => postponePromise(() => menu.show(), 50));\n       });\n   }\n\n   /** @summary Save pad in specified format\n     * @desc Used from context menu */\n   saveAs(kind, full_canvas, filename) {\n      if (!filename)\n         filename = (this.this_pad_name || (this.iscan ? 'canvas' : 'pad')) + '.' + kind;\n\n      this.produceImage(full_canvas, kind).then(imgdata => {\n         if (!imgdata)\n            return console.error(`Fail to produce image ${filename}`);\n\n         if ((browser.qt5 || browser.qt6 || browser.cef3) && this.snapid) {\n            console.warn(`sending file ${filename} to server`);\n            let res = imgdata;\n            if (kind !== 'svg') {\n               const separ = res.indexOf('base64,');\n               res = (separ > 0) ? res.slice(separ+7) : '';\n            }\n            if (res)\n              this.getCanvPainter()?.sendWebsocket(`SAVE:${filename}:${res}`);\n         } else\n            saveFile(filename, (kind !== 'svg') ? imgdata : prSVG + encodeURIComponent(imgdata));\n      });\n   }\n\n   /** @summary Search active pad\n     * @return {Object} pad painter for active pad */\n   findActivePad() {\n      return null;\n   }\n\n   /** @summary Produce image for the pad\n     * @return {Promise} with created image */\n   async produceImage(full_canvas, file_format, args) {\n      const use_frame = (full_canvas === 'frame'),\n            elem = use_frame ? this.getFrameSvg(this.this_pad_name) : (full_canvas ? this.getCanvSvg() : this.svg_this_pad()),\n            painter = (full_canvas && !use_frame) ? this.getCanvPainter() : this,\n            items = []; // keep list of replaced elements, which should be moved back at the end\n\n      if (elem.empty())\n         return '';\n\n      if (use_frame || !full_canvas) {\n         const defs = this.getCanvSvg().selectChild('.canvas_defs');\n         if (!defs.empty()) {\n            items.push({ prnt: this.getCanvSvg(), defs });\n            elem.node().insertBefore(defs.node(), elem.node().firstChild);\n         }\n      }\n\n      if (!use_frame) {\n         // do not make transformations for the frame\n         painter.forEachPainterInPad(pp => {\n            const item = { prnt: pp.svg_this_pad() };\n            items.push(item);\n\n            // remove buttons from each sub-pad\n            const btns = pp.getLayerSvg('btns_layer', this.this_pad_name);\n            item.btns_node = btns.node();\n            if (item.btns_node) {\n               item.btns_prnt = item.btns_node.parentNode;\n               item.btns_next = item.btns_node.nextSibling;\n               btns.remove();\n            }\n\n            const fp = pp.getFramePainter();\n            if (!isFunc(fp?.access3dKind)) return;\n\n            const can3d = fp.access3dKind();\n            if ((can3d !== constants.Embed3D.Overlay) && (can3d !== constants.Embed3D.Embed)) return;\n\n            let main, canvas;\n            if (isFunc(fp.render3D)) {\n               main = fp;\n               canvas = fp.renderer?.domElement;\n            } else {\n               main = fp.getMainPainter();\n               canvas = main?._renderer?.domElement;\n            }\n            if (!isFunc(main?.render3D) || !isObject(canvas)) return;\n\n            const sz2 = fp.getSizeFor3d(constants.Embed3D.Embed); // get size and position of DOM element as it will be embed\n            main.render3D(0); // WebGL clears buffers, therefore we should render scene and convert immediately\n            const dataUrl = canvas.toDataURL('image/png');\n\n            // remove 3D drawings\n            if (can3d === constants.Embed3D.Embed) {\n               item.foreign = item.prnt.select('.' + sz2.clname);\n               item.foreign.remove();\n            }\n\n            const svg_frame = main.getFrameSvg();\n            item.frame_node = svg_frame.node();\n            if (item.frame_node) {\n               item.frame_next = item.frame_node.nextSibling;\n               svg_frame.remove();\n            }\n\n            // add svg image\n            item.img = item.prnt.insert('image', '.primitives_layer')     // create image object\n                           .attr('x', sz2.x)\n                           .attr('y', sz2.y)\n                           .attr('width', canvas.width)\n                           .attr('height', canvas.height)\n                           .attr('href', dataUrl);\n         }, 'pads');\n      }\n\n      let width = elem.property('draw_width'), height = elem.property('draw_height');\n      if (use_frame) {\n         const fp = this.getFramePainter();\n         width = fp.getFrameWidth();\n         height = fp.getFrameHeight();\n      }\n\n      const arg = (file_format === 'pdf')\n         ? { node: elem.node(), width, height, reset_tranform: use_frame }\n         : compressSVG(`<svg width=\"${width}\" height=\"${height}\" xmlns=\"${nsSVG}\">${elem.node().innerHTML}</svg>`);\n\n      return svgToImage(arg, file_format, args).then(res => {\n         for (let k = 0; k < items.length; ++k) {\n            const item = items[k];\n\n            item.img?.remove(); // delete embed image\n\n            const prim = item.prnt.selectChild('.primitives_layer');\n\n            if (item.foreign) // reinsert foreign object\n               item.prnt.node().insertBefore(item.foreign.node(), prim.node());\n\n            if (item.frame_node) // reinsert frame as first in list of primitives\n               prim.node().insertBefore(item.frame_node, item.frame_next);\n\n            if (item.btns_node) // reinsert buttons\n               item.btns_prnt.insertBefore(item.btns_node, item.btns_next);\n\n            if (item.defs) // reinsert defs\n               item.prnt.node().insertBefore(item.defs.node(), item.prnt.node().firstChild);\n         }\n         return res;\n      });\n   }\n\n   /** @summary Process pad button click */\n   clickPadButton(funcname, evnt) {\n      if (funcname === 'CanvasSnapShot')\n         return this.saveAs('png', true);\n\n      if (funcname === 'enlargePad')\n         return this.enlargePad();\n\n      if (funcname === 'PadSnapShot')\n         return this.saveAs('png', false);\n\n      if (funcname === 'PadContextMenus') {\n         evnt?.preventDefault();\n         evnt?.stopPropagation();\n         if (closeMenu()) return;\n\n         return createMenu(evnt, this).then(menu => {\n            menu.header('Menus');\n\n            if (this.iscan)\n               menu.add('Canvas', 'pad', this.itemContextMenu);\n            else\n               menu.add('Pad', 'pad', this.itemContextMenu);\n\n            if (this.getFramePainter())\n               menu.add('Frame', 'frame', this.itemContextMenu);\n\n            const main = this.getMainPainter(); // here hist painter methods\n\n            if (main) {\n               menu.add('X axis', 'xaxis', this.itemContextMenu);\n               menu.add('Y axis', 'yaxis', this.itemContextMenu);\n               if (isFunc(main.getDimension) && (main.getDimension() > 1))\n                  menu.add('Z axis', 'zaxis', this.itemContextMenu);\n            }\n\n            if (this.painters?.length) {\n               menu.separator();\n               const shown = [];\n               this.painters.forEach((pp, indx) => {\n                  const obj = pp?.getObject();\n                  if (!obj || (shown.indexOf(obj) >= 0) || pp.isSecondary()) return;\n                  let name = isFunc(pp.getClassName) ? pp.getClassName() : (obj._typename || '');\n                  if (name) name += '::';\n                  name += isFunc(pp.getObjectName) ? pp.getObjectName() : (obj.fName || `item${indx}`);\n                  menu.add(name, indx, this.itemContextMenu);\n                  shown.push(obj);\n               });\n            }\n\n            menu.show();\n         });\n      }\n\n      // click automatically goes to all sub-pads\n      // if any painter indicates that processing completed, it returns true\n      let done = false;\n      const prs = [];\n\n      for (let i = 0; i < this.painters.length; ++i) {\n         const pp = this.painters[i];\n\n         if (isFunc(pp.clickPadButton))\n            prs.push(pp.clickPadButton(funcname, evnt));\n\n         if (!done && isFunc(pp.clickButton)) {\n            done = pp.clickButton(funcname);\n            if (isPromise(done)) prs.push(done);\n         }\n      }\n\n      return Promise.all(prs);\n   }\n\n   /** @summary Add button to the pad\n     * @private */\n   addPadButton(btn, tooltip, funcname, keyname) {\n      if (!settings.ToolBar || this.isBatchMode()) return;\n\n      if (!this._buttons) this._buttons = [];\n      // check if there are duplications\n\n      for (let k = 0; k < this._buttons.length; ++k)\n         if (this._buttons[k].funcname === funcname) return;\n\n      this._buttons.push({ btn, tooltip, funcname, keyname });\n\n      const iscan = this.iscan || !this.has_canvas;\n      if (!iscan && (funcname.indexOf('Pad') !== 0) && (funcname !== 'enlargePad')) {\n         const cp = this.getCanvPainter();\n         if (cp && (cp !== this)) cp.addPadButton(btn, tooltip, funcname);\n      }\n   }\n\n   /** @summary Add buttons for pad or canvas\n     * @private */\n   addPadButtons(is_online) {\n      this.addPadButton('camera', 'Create PNG', this.iscan ? 'CanvasSnapShot' : 'PadSnapShot', 'Ctrl PrintScreen');\n\n      if (settings.ContextMenu)\n         this.addPadButton('question', 'Access context menus', 'PadContextMenus');\n\n      const add_enlarge = !this.iscan && this.has_canvas && this.hasObjectsToDraw();\n\n      if (add_enlarge || this.enlargeMain('verify'))\n         this.addPadButton('circle', 'Enlarge canvas', 'enlargePad');\n\n      if (is_online && this.brlayout) {\n         this.addPadButton('diamand', 'Toggle Ged', 'ToggleGed');\n         this.addPadButton('three_circles', 'Toggle Status', 'ToggleStatus');\n      }\n   }\n\n   /** @summary Show pad buttons\n     * @private */\n   showPadButtons() {\n      if (!this._buttons) return;\n\n      PadButtonsHandler.assign(this);\n      this.showPadButtons();\n   }\n\n   /** @summary Calculates RPadLength value */\n   getPadLength(vertical, len, frame_painter) {\n      let rect, res;\n      const sign = vertical ? -1 : 1,\n            getV = (indx, dflt) => (indx < len.fArr.length) ? len.fArr[indx] : dflt,\n            getRect = () => {\n               if (!rect)\n                  rect = frame_painter ? frame_painter.getFrameRect() : this.getPadRect();\n               return rect;\n            };\n\n      if (frame_painter) {\n         const user = getV(2), func = vertical ? 'gry' : 'grx';\n         if ((user !== undefined) && frame_painter[func])\n            res = frame_painter[func](user);\n      }\n\n      if (res === undefined)\n         res = vertical ? getRect().height : 0;\n\n      const norm = getV(0, 0), pixel = getV(1, 0);\n\n      res += sign*pixel;\n\n      if (norm)\n         res += sign * (vertical ? getRect().height : getRect().width) * norm;\n\n      return Math.round(res);\n   }\n\n\n   /** @summary Calculates pad position for RPadPos values\n     * @param {object} pos - instance of RPadPos\n     * @param {object} frame_painter - if drawing will be performed inside frame, frame painter */\n   getCoordinate(pos, frame_painter) {\n      return {\n         x: this.getPadLength(false, pos.fHoriz, frame_painter),\n         y: this.getPadLength(true, pos.fVert, frame_painter)\n      };\n   }\n\n   /** @summary Decode pad draw options */\n   decodeOptions(opt) {\n      const pad = this.getObject();\n      if (!pad) return;\n\n      const d = new DrawOptions(opt);\n\n      if (!this.options) this.options = {};\n\n      Object.assign(this.options, { GlobalColors: true, LocalColors: false, IgnorePalette: false, RotateFrame: false, FixFrame: false });\n\n      if (d.check('NOCOLORS') || d.check('NOCOL')) this.options.GlobalColors = this.options.LocalColors = false;\n      if (d.check('LCOLORS') || d.check('LCOL')) { this.options.GlobalColors = false; this.options.LocalColors = true; }\n      if (d.check('NOPALETTE') || d.check('NOPAL')) this.options.IgnorePalette = true;\n      if (d.check('ROTATE')) this.options.RotateFrame = true;\n      if (d.check('FIXFRAME')) this.options.FixFrame = true;\n\n      if (d.check('WHITE')) pad.fFillColor = 0;\n      if (d.check('LOGX')) pad.fLogx = 1;\n      if (d.check('LOGY')) pad.fLogy = 1;\n      if (d.check('LOGZ')) pad.fLogz = 1;\n      if (d.check('LOG')) pad.fLogx = pad.fLogy = pad.fLogz = 1;\n      if (d.check('GRIDX')) pad.fGridx = 1;\n      if (d.check('GRIDY')) pad.fGridy = 1;\n      if (d.check('GRID')) pad.fGridx = pad.fGridy = 1;\n      if (d.check('TICKX')) pad.fTickx = 1;\n      if (d.check('TICKY')) pad.fTicky = 1;\n      if (d.check('TICK')) pad.fTickx = pad.fTicky = 1;\n   }\n\n   /** @summary draw RPad object */\n   static async draw(dom, pad, opt) {\n      const painter = new RPadPainter(dom, pad, false);\n      painter.decodeOptions(opt);\n\n      if (painter.getCanvSvg().empty()) {\n         painter.has_canvas = false;\n         painter.this_pad_name = '';\n         painter.setTopPainter();\n      } else\n         painter.addToPadPrimitives(); // must be here due to pad painter\n\n      painter.createPadSvg();\n\n      if (painter.matchObjectType(clTPad) && (!painter.has_canvas || painter.hasObjectsToDraw()))\n         painter.addPadButtons();\n\n      selectActivePad({ pp: painter, active: false });\n\n      // flag used to prevent immediate pad redraw during first draw\n      return painter.drawPrimitives().then(() => {\n         painter.addPadInteractive();\n         painter.showPadButtons();\n         return painter;\n      });\n   }\n\n} // class RPadPainter\n\nexport { RPadPainter };\n","import { settings, create, parse, toJSON, loadScript, registerMethods, isBatchMode, isFunc, isStr, nsREX } from '../core.mjs';\nimport { select as d3_select, rgb as d3_rgb } from '../d3.mjs';\nimport { closeCurrentWindow, showProgress, loadOpenui5, ToolbarIcons, getColorExec } from '../gui/utils.mjs';\nimport { GridDisplay, getHPainter } from '../gui/display.mjs';\nimport { makeTranslate } from '../base/BasePainter.mjs';\nimport { convertColor } from '../base/colors.mjs';\nimport { selectActivePad, cleanup, resize, EAxisBits } from '../base/ObjectPainter.mjs';\nimport { RObjectPainter } from '../base/RObjectPainter.mjs';\nimport { RAxisPainter } from './RAxisPainter.mjs';\nimport { RFramePainter } from './RFramePainter.mjs';\nimport { RPadPainter } from './RPadPainter.mjs';\nimport { addDragHandler } from './TFramePainter.mjs';\n\n\n/**\n * @summary Painter class for RCanvas\n *\n * @private\n */\n\nclass RCanvasPainter extends RPadPainter {\n\n   /** @summary constructor */\n   constructor(dom, canvas) {\n      super(dom, canvas, true);\n      this._websocket = null;\n      this.tooltip_allowed = settings.Tooltip;\n      this.v7canvas = true;\n      if ((dom === null) && (canvas === null)) {\n         // for web canvas details are important\n         settings.SmallPad.width = 20;\n         settings.SmallPad.height = 10;\n      }\n   }\n\n   /** @summary Cleanup canvas painter */\n   cleanup() {\n      delete this._websocket;\n      delete this._submreq;\n\n     if (this._changed_layout)\n         this.setLayoutKind('simple');\n      delete this._changed_layout;\n\n      super.cleanup();\n   }\n\n   /** @summary Returns canvas name */\n   getCanvasName() {\n      const title = this.pad?.fTitle;\n      return (!title || !isStr(title)) ? 'rcanvas' : title.replace(/ /g, '_');\n   }\n\n   /** @summary Returns layout kind */\n   getLayoutKind() {\n      const origin = this.selectDom('origin'),\n         layout = origin.empty() ? '' : origin.property('layout');\n      return layout || 'simple';\n   }\n\n   /** @summary Set canvas layout kind */\n   setLayoutKind(kind, main_selector) {\n      const origin = this.selectDom('origin');\n      if (!origin.empty()) {\n         if (!kind) kind = 'simple';\n         origin.property('layout', kind);\n         origin.property('layout_selector', (kind !== 'simple') && main_selector ? main_selector : null);\n         this._changed_layout = (kind !== 'simple'); // use in cleanup\n      }\n   }\n\n   /** @summary Changes layout\n     * @return {Promise} indicating when finished */\n   async changeLayout(layout_kind, mainid) {\n      const current = this.getLayoutKind();\n      if (current === layout_kind)\n         return true;\n\n      const origin = this.selectDom('origin'),\n            sidebar2 = origin.select('.side_panel2'),\n            lst = [];\n      let sidebar = origin.select('.side_panel'),\n          main = this.selectDom(), force;\n\n      while (main.node().firstChild)\n         lst.push(main.node().removeChild(main.node().firstChild));\n\n      if (!sidebar.empty())\n         cleanup(sidebar.node());\n      if (!sidebar2.empty())\n         cleanup(sidebar2.node());\n\n      this.setLayoutKind('simple'); // restore defaults\n      origin.html(''); // cleanup origin\n\n      if (layout_kind === 'simple') {\n         main = origin;\n         for (let k = 0; k < lst.length; ++k)\n            main.node().appendChild(lst[k]);\n         this.setLayoutKind(layout_kind);\n         force = true;\n      } else {\n         const grid = new GridDisplay(origin.node(), layout_kind);\n\n         if (mainid === undefined)\n            mainid = (layout_kind.indexOf('vert') === 0) ? 0 : 1;\n\n         main = d3_select(grid.getGridFrame(mainid));\n         main.classed('central_panel', true).style('position', 'relative');\n\n         if (mainid === 2) {\n            // left panel for Y\n            sidebar = d3_select(grid.getGridFrame(0));\n            sidebar.classed('side_panel2', true).style('position', 'relative');\n            // bottom panel for X\n            sidebar = d3_select(grid.getGridFrame(3));\n            sidebar.classed('side_panel', true).style('position', 'relative');\n         } else {\n            sidebar = d3_select(grid.getGridFrame(1 - mainid));\n            sidebar.classed('side_panel', true).style('position', 'relative');\n         }\n\n         // now append all childs to the new main\n         for (let k = 0; k < lst.length; ++k)\n            main.node().appendChild(lst[k]);\n\n         this.setLayoutKind(layout_kind, '.central_panel');\n\n         // remove reference to MDIDisplay, solves resize problem\n         origin.property('mdi', null);\n      }\n\n      // resize main drawing and let draw extras\n      resize(main.node(), force);\n      return true;\n   }\n\n   /** @summary Toggle projection\n     * @return {Promise} indicating when ready\n     * @private */\n   async toggleProjection(kind) {\n      delete this.proj_painter;\n\n      if (kind) this.proj_painter = { X: false, Y: false }; // just indicator that drawing can be preformed\n\n      if (isFunc(this.showUI5ProjectionArea))\n         return this.showUI5ProjectionArea(kind);\n\n      let layout = 'simple', mainid;\n\n      switch (kind) {\n         case 'XY': layout = 'projxy'; mainid = 2; break;\n         case 'X':\n         case 'bottom': layout = 'vert2_31'; mainid = 0; break;\n         case 'Y':\n         case 'left': layout = 'horiz2_13'; mainid = 1; break;\n         case 'top': layout = 'vert2_13'; mainid = 1; break;\n         case 'right': layout = 'horiz2_31'; mainid = 0; break;\n      }\n\n      return this.changeLayout(layout, mainid);\n   }\n\n   /** @summary Draw projection for specified histogram\n     * @private */\n   async drawProjection(/* kind, hist, hopt */) {\n      // dummy for the moment\n      return false;\n   }\n\n   /** @summary Draw in side panel\n     * @private */\n   async drawInSidePanel(canv, opt, kind) {\n      const sel = ((this.getLayoutKind() === 'projxy') && (kind === 'Y')) ? '.side_panel2' : '.side_panel',\n            side = this.selectDom('origin').select(sel);\n      return side.empty() ? null : this.drawObject(side.node(), canv, opt);\n   }\n\n   /** @summary Checks if canvas shown inside ui5 widget\n     * @desc Function should be used only from the func which supposed to be replaced by ui5\n     * @private */\n   testUI5() {\n      return this.use_openui ?? false;\n   }\n\n   /** @summary Show message\n     * @desc Used normally with web-based canvas and handled in ui5\n     * @private */\n   showMessage(msg) {\n      if (!this.testUI5())\n         showProgress(msg, 7000);\n   }\n\n   /** @summary Function called when canvas menu item Save is called */\n   saveCanvasAsFile(fname) {\n      const pnt = fname.indexOf('.');\n      this.createImage(fname.slice(pnt+1))\n          .then(res => this.sendWebsocket(`SAVE:${fname}:${res}`));\n   }\n\n   /** @summary Send command to server to save canvas with specified name\n     * @desc Should be only used in web-based canvas\n     * @private */\n   sendSaveCommand(fname) {\n      this.sendWebsocket('PRODUCE:' + fname);\n   }\n\n   /** @summary Return true if message can be send via web socket\n    * @private */\n   canSendWebSocket() { return this._websocket?.canSend(); }\n\n   /** @summary Send message via web socket\n     * @private */\n   sendWebsocket(msg) {\n      if (this._websocket?.canSend()) {\n         this._websocket.send(msg);\n         return true;\n      }\n\n      return false;\n   }\n\n   /** @summary Close websocket connection to canvas\n     * @private */\n   closeWebsocket(force) {\n      if (this._websocket) {\n         this._websocket.close(force);\n         this._websocket.cleanup();\n         delete this._websocket;\n      }\n   }\n\n   /** @summary Use provided connection for the web canvas\n     * @private */\n   useWebsocket(handle) {\n      this.closeWebsocket();\n\n      this._websocket = handle;\n      this._websocket.setReceiver(this);\n      this._websocket.connect();\n   }\n\n   /** @summary set, test or reset timeout of specified name\n     * @desc Used to prevent overloading of websocket for specific function */\n   websocketTimeout(name, tm) {\n      if (!this._websocket)\n         return;\n      if (!this._websocket._tmouts)\n         this._websocket._tmouts = {};\n\n      const handle = this._websocket._tmouts[name];\n      if (tm === undefined)\n         return handle !== undefined;\n\n      if (tm === 'reset') {\n         if (handle) { clearTimeout(handle); delete this._websocket._tmouts[name]; }\n      } else if (!handle && Number.isInteger(tm))\n         this._websocket._tmouts[name] = setTimeout(() => { delete this._websocket._tmouts[name]; }, tm);\n   }\n\n   /** @summary Handler for websocket open event\n     * @private */\n   onWebsocketOpened(/* handle */) {\n   }\n\n   /** @summary Handler for websocket close event\n     * @private */\n   onWebsocketClosed(/* handle */) {\n      if (!this.embed_canvas)\n         closeCurrentWindow();\n   }\n\n   /** @summary Handler for websocket message\n     * @private */\n   onWebsocketMsg(handle, msg) {\n      // console.log('GET_MSG ' + msg.slice(0,30));\n\n      if (msg === 'CLOSE') {\n         this.onWebsocketClosed();\n         this.closeWebsocket(true);\n      } else if (msg.slice(0, 5) === 'SNAP:') {\n         msg = msg.slice(5);\n         const p1 = msg.indexOf(':'),\n             snapid = msg.slice(0, p1),\n             snap = parse(msg.slice(p1+1));\n         this.syncDraw(true)\n             .then(() => {\n                if (!this.snapid && snap?.fWinSize)\n                   this.resizeBrowser(snap.fWinSize[0], snap.fWinSize[1]);\n             }).then(() => this.redrawPadSnap(snap))\n             .then(() => {\n                 this.addPadInteractive();\n                 handle.send(`SNAPDONE:${snapid}`); // send ready message back when drawing completed\n                 this.confirmDraw();\n             }).catch(err => {\n               if (isFunc(this.showConsoleError))\n                  this.showConsoleError(err);\n               else\n                  console.log(err);\n             });\n      } else if (msg.slice(0, 4) === 'JSON') {\n         const obj = parse(msg.slice(4));\n         // console.log('get JSON ', msg.length-4, obj._typename);\n         this.redrawObject(obj);\n      } else if (msg.slice(0, 9) === 'REPL_REQ:')\n         this.processDrawableReply(msg.slice(9));\n       else if (msg.slice(0, 4) === 'CMD:') {\n         msg = msg.slice(4);\n         const p1 = msg.indexOf(':'),\n             cmdid = msg.slice(0, p1),\n             cmd = msg.slice(p1+1),\n             reply = `REPLY:${cmdid}:`;\n         if ((cmd === 'SVG') || (cmd === 'PNG') || (cmd === 'JPEG') || (cmd === 'WEBP') || (cmd === 'PDF')) {\n            this.createImage(cmd.toLowerCase())\n                .then(res => handle.send(reply + res));\n         } else if (cmd.indexOf('ADDPANEL:') === 0) {\n            if (!isFunc(this.showUI5Panel))\n               handle.send(reply + 'false');\n             else {\n               const window_path = cmd.slice(9),\n                     conn = handle.createNewInstance(window_path);\n\n               // set interim receiver until first message arrives\n               conn.setReceiver({\n                  cpainter: this,\n\n                  onWebsocketOpened() {\n                  },\n\n                  onWebsocketMsg(panel_handle, msg) {\n                     const panel_name = (msg.indexOf('SHOWPANEL:') === 0) ? msg.slice(10) : '';\n                     this.cpainter.showUI5Panel(panel_name, panel_handle)\n                                  .then(res => handle.send(reply + (res ? 'true' : 'false')));\n                  },\n\n                  onWebsocketClosed() {\n                     // if connection failed,\n                     handle.send(reply + 'false');\n                  },\n\n                  onWebsocketError() {\n                     // if connection failed,\n                     handle.send(reply + 'false');\n                  }\n\n               });\n\n               // only when connection established, panel will be activated\n               conn.connect();\n            }\n         } else {\n            console.log('Unrecognized command ' + cmd);\n            handle.send(reply);\n         }\n      } else if ((msg.slice(0, 7) === 'DXPROJ:') || (msg.slice(0, 7) === 'DYPROJ:')) {\n         const kind = msg[1],\n             hist = parse(msg.slice(7));\n         this.drawProjection(kind, hist);\n      } else if (msg.slice(0, 5) === 'SHOW:') {\n         const that = msg.slice(5),\n             on = that[that.length-1] === '1';\n         this.showSection(that.slice(0, that.length-2), on);\n      } else\n         console.log(`unrecognized msg len: ${msg.length} msg: ${msg.slice(0, 30)}`);\n   }\n\n   /** @summary Submit request to RDrawable object on server side */\n   submitDrawableRequest(kind, req, painter, method) {\n      if (!this._websocket || !req || !req._typename ||\n          !painter.snapid || !isStr(painter.snapid)) return null;\n\n      if (kind && method) {\n         // if kind specified - check if such request already was submitted\n         if (!painter._requests) painter._requests = {};\n\n         const prevreq = painter._requests[kind];\n\n         if (prevreq) {\n            const tm = new Date().getTime();\n            if (!prevreq._tm || (tm - prevreq._tm < 5000)) {\n               prevreq._nextreq = req; // submit when got reply\n               return false;\n            }\n            delete painter._requests[kind]; // let submit new request after timeout\n         }\n\n         painter._requests[kind] = req; // keep reference on the request\n      }\n\n      req.id = painter.snapid;\n\n      if (method) {\n         if (!this._nextreqid) this._nextreqid = 1;\n         req.reqid = this._nextreqid++;\n      } else\n         req.reqid = 0; // request will not be replied\n\n\n      const msg = JSON.stringify(req);\n\n      if (req.reqid) {\n         req._kind = kind;\n         req._painter = painter;\n         req._method = method;\n         req._tm = new Date().getTime();\n\n         if (!this._submreq) this._submreq = {};\n         this._submreq[req.reqid] = req; // fast access to submitted requests\n      }\n\n      // console.log('Sending request ', msg.slice(0,60));\n\n      this.sendWebsocket('REQ:' + msg);\n      return req;\n   }\n\n   /** @summary Submit menu request\n     * @private */\n   async submitMenuRequest(painter, menukind, reqid) {\n      return new Promise(resolveFunc => {\n         this.submitDrawableRequest('', {\n            _typename: `${nsREX}RDrawableMenuRequest`,\n            menukind: menukind || '',\n            menureqid: reqid // used to identify menu request\n         }, painter, resolveFunc);\n      });\n   }\n\n   /** @summary Submit executable command for given painter */\n   submitExec(painter, exec, subelem) {\n      // snapid is intentionally ignored - only painter.snapid has to be used\n      if (!this._websocket) return;\n\n      if (subelem && isStr(subelem)) {\n         const len = subelem.length;\n         if ((len > 2) && (subelem.indexOf('#x') === len - 2)) subelem = 'x'; else\n         if ((len > 2) && (subelem.indexOf('#y') === len - 2)) subelem = 'y'; else\n         if ((len > 2) && (subelem.indexOf('#z') === len - 2)) subelem = 'z';\n\n         if ((subelem === 'x') || (subelem === 'y') || (subelem === 'z'))\n            exec = subelem + 'axis#' + exec;\n         else\n            return console.log(`not recoginzed subelem ${subelem} in SubmitExec`);\n       }\n\n      this.submitDrawableRequest('', { _typename: `${nsREX}RDrawableExecRequest`, exec }, painter);\n   }\n\n   /** @summary Process reply from request to RDrawable */\n   processDrawableReply(msg) {\n      const reply = parse(msg);\n      if (!reply || !reply.reqid || !this._submreq) return false;\n\n      const req = this._submreq[reply.reqid];\n      if (!req) return false;\n\n      // remove reference first\n      delete this._submreq[reply.reqid];\n\n      // remove blocking reference for that kind\n      if (req._kind && req._painter?._requests) {\n         if (req._painter._requests[req._kind] === req)\n            delete req._painter._requests[req._kind];\n      }\n\n      if (req._method)\n         req._method(reply, req);\n\n      // resubmit last request of that kind\n      if (req._nextreq && !req._painter._requests[req._kind])\n         this.submitDrawableRequest(req._kind, req._nextreq, req._painter, req._method);\n   }\n\n   /** @summary Show specified section in canvas */\n   async showSection(that, on) {\n      switch (that) {\n         case 'Menu': break;\n         case 'StatusBar': break;\n         case 'Editor': break;\n         case 'ToolBar': break;\n         case 'ToolTips': this.setTooltipAllowed(on); break;\n      }\n      return true;\n   }\n\n   /** @summary Method informs that something was changed in the canvas\n     * @desc used to update information on the server (when used with web6gui)\n     * @private */\n   processChanges(kind, painter, subelem) {\n      // check if we could send at least one message more - for some meaningful actions\n      if (!this._websocket || !this._websocket.canSend(2) || !isStr(kind)) return;\n\n      const msg = '';\n      if (!painter) painter = this;\n      switch (kind) {\n         case 'sbits':\n            console.log('Status bits in RCanvas are changed - that to do?');\n            break;\n         case 'frame': // when moving frame\n         case 'zoom':  // when changing zoom inside frame\n            console.log('Frame moved or zoom is changed - that to do?');\n            break;\n         case 'pave_moved':\n            console.log('TPave is moved inside RCanvas - that to do?');\n            break;\n         default:\n            if ((kind.slice(0, 5) === 'exec:') && painter?.snapid)\n               this.submitExec(painter, kind.slice(5), subelem);\n             else\n               console.log('UNPROCESSED CHANGES', kind);\n      }\n\n      if (msg)\n         console.log('RCanvas::processChanges want to send  ' + msg.length + '  ' + msg.slice(0, 40));\n   }\n\n   /** @summary Handle pad button click event\n     * @private */\n   clickPadButton(funcname, evnt) {\n      if (funcname === 'ToggleGed')\n         return this.activateGed(this, null, 'toggle');\n      if (funcname === 'ToggleStatus')\n         return this.activateStatusBar('toggle');\n      return super.clickPadButton(funcname, evnt);\n   }\n\n   /** @summary returns true when event status area exist for the canvas */\n   hasEventStatus() {\n      if (this.testUI5()) return false;\n      if (this.brlayout)\n         return this.brlayout.hasStatus();\n      const hp = getHPainter();\n      return hp ? hp.hasStatusLine() : false;\n   }\n\n   /** @summary Check if status bar can be toggled\n     * @private */\n   canStatusBar() {\n      return this.testUI5() || this.brlayout || getHPainter();\n   }\n\n   /** @summary Show/toggle event status bar\n     * @private */\n   activateStatusBar(state) {\n      if (this.testUI5())\n         return;\n      if (this.brlayout)\n         this.brlayout.createStatusLine(23, state);\n      else\n         getHPainter()?.createStatusLine(23, state);\n\n      this.processChanges('sbits', this);\n   }\n\n   /** @summary Show online canvas status\n     * @private */\n   showCanvasStatus(...msgs) {\n      if (this.testUI5()) return;\n\n      const br = this.brlayout || getHPainter()?.brlayout;\n\n      br?.showStatus(...msgs);\n   }\n\n   /** @summary Returns true if GED is present on the canvas */\n   hasGed() {\n      if (this.testUI5()) return false;\n      return this.brlayout?.hasContent() ?? false;\n   }\n\n   /** @summary Function used to de-activate GED\n     * @private */\n   removeGed() {\n      if (this.testUI5()) return;\n\n      this.registerForPadEvents(null);\n\n      if (this.ged_view) {\n         this.ged_view.getController().cleanupGed();\n         this.ged_view.destroy();\n         delete this.ged_view;\n      }\n      this.brlayout?.deleteContent(true);\n      this.processChanges('sbits', this);\n   }\n\n   /** @summary Get view data for ui5 panel\n     * @private */\n   getUi5PanelData(/* panel_name */) {\n      return { jsroot: { settings, create, parse, toJSON, loadScript, EAxisBits, getColorExec } };\n   }\n\n   /** @summary Function used to activate GED\n     * @return {Promise} when GED is there\n     * @private */\n   async activateGed(objpainter, kind, mode) {\n      if (this.testUI5() || !this.brlayout)\n         return false;\n\n      if (this.brlayout.hasContent()) {\n         if ((mode === 'toggle') || (mode === false))\n            this.removeGed();\n         else\n            objpainter?.getPadPainter()?.selectObjectPainter(objpainter);\n\n         return true;\n      }\n\n      if (mode === false)\n         return false;\n\n      const btns = this.brlayout.createBrowserBtns();\n\n      ToolbarIcons.createSVG(btns, ToolbarIcons.diamand, 15, 'toggle fix-pos mode', 'browser')\n                  .style('margin', '3px').on('click', () => this.brlayout.toggleKind('fix'));\n\n      ToolbarIcons.createSVG(btns, ToolbarIcons.circle, 15, 'toggle float mode', 'browser')\n                  .style('margin', '3px').on('click', () => this.brlayout.toggleKind('float'));\n\n      ToolbarIcons.createSVG(btns, ToolbarIcons.cross, 15, 'delete GED', 'browser')\n                  .style('margin', '3px').on('click', () => this.removeGed());\n\n      // be aware, that jsroot_browser_hierarchy required for flexible layout that element use full browser area\n      this.brlayout.setBrowserContent('<div class=\\'jsroot_browser_hierarchy\\' id=\\'ged_placeholder\\'>Loading GED ...</div>');\n      this.brlayout.setBrowserTitle('GED');\n      this.brlayout.toggleBrowserKind(kind || 'float');\n\n      return new Promise(resolveFunc => {\n         loadOpenui5.then(sap => {\n            d3_select('#ged_placeholder').text('');\n\n            sap.ui.require(['sap/ui/model/json/JSONModel', 'sap/ui/core/mvc/XMLView'], (JSONModel, XMLView) => {\n               const oModel = new JSONModel({ handle: null });\n\n               XMLView.create({\n                  viewName: 'rootui5.canv.view.Ged',\n                  viewData: this.getUi5PanelData('Ged')\n               }).then(oGed => {\n                  oGed.setModel(oModel);\n\n                  oGed.placeAt('ged_placeholder');\n\n                  this.ged_view = oGed;\n\n                  // TODO: should be moved into Ged controller - it must be able to detect canvas painter itself\n                  this.registerForPadEvents(oGed.getController().padEventsReceiver.bind(oGed.getController()));\n\n                  objpainter?.getPadPainter()?.selectObjectPainter(objpainter);\n\n                  this.processChanges('sbits', this);\n\n                  resolveFunc(true);\n               });\n            });\n         });\n      });\n   }\n\n   /** @summary produce JSON for RCanvas, which can be used to display canvas once again\n     * @private */\n   produceJSON() {\n      console.error('RCanvasPainter.produceJSON not yet implemented');\n      return '';\n   }\n\n   /** @summary resize browser window to get requested canvas sizes */\n   resizeBrowser(fullW, fullH) {\n      if (!fullW || !fullH || this.isBatchMode() || this.embed_canvas || this.batch_mode)\n         return;\n      this._websocket?.resizeWindow(fullW, fullH);\n   }\n\n   /** @summary draw RCanvas object */\n   static async draw(dom, can /* , opt */) {\n      const nocanvas = !can;\n      if (nocanvas)\n         can = create(`${nsREX}RCanvas`);\n\n      const painter = new RCanvasPainter(dom, can);\n      painter.normal_canvas = !nocanvas;\n      painter.createCanvasSvg(0);\n\n      selectActivePad({ pp: painter, active: false });\n\n      return painter.drawPrimitives().then(() => {\n         painter.addPadInteractive();\n         painter.addPadButtons();\n         painter.showPadButtons();\n         return painter;\n      });\n   }\n\n} // class RCanvasPainter\n\n\n/** @summary draw RPadSnapshot object\n  * @private */\nfunction drawRPadSnapshot(dom, snap /* , opt */) {\n   const painter = new RCanvasPainter(dom, null);\n   painter.normal_canvas = false;\n   painter.batch_mode = isBatchMode();\n   return painter.syncDraw(true).then(() => painter.redrawPadSnap(snap)).then(() => {\n      painter.confirmDraw();\n      painter.showPadButtons();\n      return painter;\n   });\n}\n\n/** @summary Ensure RCanvas and RFrame for the painter object\n  * @param {Object} painter  - painter object to process\n  * @param {string|boolean} frame_kind  - false for no frame or '3d' for special 3D mode\n  * @desc Assigns DOM, creates and draw RCanvas and RFrame if necessary, add painter to pad list of painters\n  * @return {Promise} for ready\n  * @private */\nasync function ensureRCanvas(painter, frame_kind) {\n   if (!painter)\n      return Promise.reject(Error('Painter not provided in ensureRCanvas'));\n\n   // simple check - if canvas there, can use painter\n   const pr = painter.getCanvSvg().empty() ? RCanvasPainter.draw(painter.getDom(), null /* noframe */) : Promise.resolve(true);\n\n   return pr.then(() => {\n      if ((frame_kind !== false) && painter.getFrameSvg().selectChild('.main_layer').empty())\n         return RFramePainter.draw(painter.getDom(), null, isStr(frame_kind) ? frame_kind : '');\n   }).then(() => {\n      painter.addToPadPrimitives();\n      return painter;\n   });\n}\n\n\n/** @summary Function used for direct draw of RFrameTitle\n  * @private */\nfunction drawRFrameTitle(reason, drag) {\n   const fp = this.getFramePainter();\n   if (!fp)\n      return console.log('no frame painter - no title');\n\n   const rect = fp.getFrameRect(),\n         fx = rect.x,\n         fy = rect.y,\n         fw = rect.width,\n         // fh           = rect.height,\n         ph = this.getPadPainter().getPadHeight(),\n         title = this.getObject(),\n         title_width = fw,\n         textFont = this.v7EvalFont('text', { size: 0.07, color: 'black', align: 22 });\n   let title_margin = this.v7EvalLength('margin', ph, 0.02),\n       title_height = this.v7EvalLength('height', ph, 0.05);\n\n   if (reason === 'drag') {\n      title_height = drag.height;\n      title_margin = fy - drag.y - drag.height;\n      const changes = {};\n      this.v7AttrChange(changes, 'margin', title_margin / ph);\n      this.v7AttrChange(changes, 'height', title_height / ph);\n      this.v7SendAttrChanges(changes, false); // do not invoke canvas update on the server\n   }\n\n   this.createG();\n\n   makeTranslate(this.draw_g, fx, Math.round(fy-title_margin-title_height));\n\n   return this.startTextDrawingAsync(textFont, 'font').then(() => {\n      this.drawText({ x: title_width/2, y: title_height/2, text: title.fText, latex: 1 });\n      return this.finishTextDrawing();\n   }).then(() => {\n      addDragHandler(this, { x: fx, y: Math.round(fy-title_margin-title_height), width: title_width, height: title_height,\n                             minwidth: 20, minheight: 20, no_change_x: true, redraw: d => this.redraw('drag', d) });\n   });\n}\n\n// ==========================================================\n\nregisterMethods(`${nsREX}RPalette`, {\n\n   extractRColor(rcolor) {\n      const col = rcolor.fColor || 'black';\n      return convertColor(col);\n   },\n\n   getColor(indx) {\n      return this.palette[indx];\n   },\n\n   getContourIndex(zc) {\n      const cntr = this.fContour;\n      let l = 0, r = cntr.length-1, mid;\n\n      if (zc < cntr[0]) return -1;\n      if (zc >= cntr[r]) return r-1;\n\n      if (this.fCustomContour) {\n         while (l < r-1) {\n            mid = Math.round((l+r)/2);\n            if (cntr[mid] > zc) r = mid; else l = mid;\n         }\n         return l;\n      }\n\n      // last color in palette starts from level cntr[r-1]\n      return Math.floor((zc-cntr[0]) / (cntr[r-1] - cntr[0]) * (r-1));\n   },\n\n   getContourColor(zc) {\n      const zindx = this.getContourIndex(zc);\n      return (zindx < 0) ? '' : this.getColor(zindx);\n   },\n\n   getContour() {\n      return this.fContour && (this.fContour.length > 1) ? this.fContour : null;\n   },\n\n   deleteContour() {\n      delete this.fContour;\n   },\n\n   calcColor(value, entry1, entry2) {\n      const dist = entry2.fOrdinal - entry1.fOrdinal,\n            r1 = entry2.fOrdinal - value,\n            r2 = value - entry1.fOrdinal;\n\n      if (!this.fInterpolate || (dist <= 0))\n         return convertColor((r1 < r2) ? entry2.fColor : entry1.fColor);\n\n      // interpolate\n      const col1 = d3_rgb(this.extractRColor(entry1.fColor)),\n            col2 = d3_rgb(this.extractRColor(entry2.fColor)),\n            color = d3_rgb(Math.round((col1.r*r1 + col2.r*r2)/dist),\n                           Math.round((col1.g*r1 + col2.g*r2)/dist),\n                           Math.round((col1.b*r1 + col2.b*r2)/dist));\n\n      return color.formatRgb();\n   },\n\n   createPaletteColors(len) {\n      const arr = [];\n      let indx = 0;\n\n      while (arr.length < len) {\n         const value = arr.length / (len-1),\n\n          entry = this.fColors[indx];\n\n         if ((Math.abs(entry.fOrdinal - value) < 0.0001) || (indx === this.fColors.length - 1)) {\n            arr.push(this.extractRColor(entry.fColor));\n            continue;\n         }\n\n         const next = this.fColors[indx+1];\n         if (next.fOrdinal <= value)\n            indx++;\n         else\n            arr.push(this.calcColor(value, entry, next));\n      }\n\n      return arr;\n   },\n\n   getColorOrdinal(value) {\n      // extract color with ordinal value between 0 and 1\n      if (!this.fColors)\n         return 'black';\n      if ((typeof value !== 'number') || (value < 0))\n         value = 0;\n      else if (value > 1)\n         value = 1;\n\n      // TODO: implement better way to find index\n\n      let entry, next = this.fColors[0];\n      for (let indx = 0; indx < this.fColors.length-1; ++indx) {\n         entry = next;\n\n         if (Math.abs(entry.fOrdinal - value) < 0.0001)\n            return this.extractRColor(entry.fColor);\n\n         next = this.fColors[indx+1];\n         if (next.fOrdinal > value)\n            return this.calcColor(value, entry, next);\n      }\n\n      return this.extractRColor(next.fColor);\n   },\n\n   setFullRange(min, max) {\n      // set full z scale range, used in zooming\n      this.full_min = min;\n      this.full_max = max;\n   },\n\n   createContour(logz, nlevels, zmin, zmax, zminpositive) {\n      this.fContour = [];\n      delete this.fCustomContour;\n      this.colzmin = zmin;\n      this.colzmax = zmax;\n\n      if (logz) {\n         if (this.colzmax <= 0) this.colzmax = 1.0;\n         if (this.colzmin <= 0) {\n            if ((zminpositive === undefined) || (zminpositive <= 0))\n               this.colzmin = 0.0001*this.colzmax;\n            else\n               this.colzmin = ((zminpositive < 3) || (zminpositive>100)) ? 0.3*zminpositive : 1;\n         }\n         if (this.colzmin >= this.colzmax)\n            this.colzmin = 0.0001*this.colzmax;\n\n         const logmin = Math.log(this.colzmin)/Math.log(10),\n             logmax = Math.log(this.colzmax)/Math.log(10),\n             dz = (logmax-logmin)/nlevels;\n         this.fContour.push(this.colzmin);\n         for (let level=1; level<nlevels; level++)\n            this.fContour.push(Math.exp((logmin + dz*level)*Math.log(10)));\n         this.fContour.push(this.colzmax);\n         this.fCustomContour = true;\n      } else {\n         if ((this.colzmin === this.colzmax) && (this.colzmin !== 0)) {\n            this.colzmax += 0.01*Math.abs(this.colzmax);\n            this.colzmin -= 0.01*Math.abs(this.colzmin);\n         }\n         const dz = (this.colzmax-this.colzmin)/nlevels;\n         for (let level=0; level<=nlevels; level++)\n            this.fContour.push(this.colzmin + dz*level);\n      }\n\n      if (!this.palette || (this.palette.length !== nlevels))\n         this.palette = this.createPaletteColors(nlevels);\n   }\n\n});\n\n/** @summary draw RFont object\n  * @private */\nfunction drawRFont() {\n   const font = this.getObject(),\n         svg = this.getCanvSvg(),\n         clname = 'custom_font_' + font.fFamily+font.fWeight+font.fStyle;\n   let defs = svg.selectChild('.canvas_defs');\n\n   if (defs.empty())\n      defs = svg.insert('svg:defs', ':first-child').attr('class', 'canvas_defs');\n\n   let entry = defs.selectChild('.' + clname);\n   if (entry.empty()) {\n      entry = defs.append('style')\n                  .attr('type', 'text/css')\n                  .attr('class', clname)\n                  .text(`@font-face { font-family: \"${font.fFamily}\"; font-weight: ${font.fWeight ? font.fWeight : 'normal'}; font-style: ${font.fStyle ? font.fStyle : 'normal'}; src: ${font.fSrc}; }`);\n      const p1 = font.fSrc.indexOf('base64,'),\n            p2 = font.fSrc.lastIndexOf(' format(');\n      if (p1 > 0 && p2 > p1) {\n         const base64 = font.fSrc.slice(p1 + 7, p2 - 2),\n               is_ttf = font.fSrc.indexOf('data:application/font-ttf') > 0;\n         // TODO: for the moment only ttf format supported by jsPDF\n         if (is_ttf)\n            entry.property('$fontcfg', { n: font.fFamily, base64 });\n      }\n   }\n\n   if (font.fDefault)\n      this.getPadPainter()._dfltRFont = font;\n\n   return true;\n}\n\n/** @summary draw RAxis object\n  * @private */\nfunction drawRAxis(dom, obj, opt) {\n   const painter = new RAxisPainter(dom, obj, opt);\n   painter.disable_zooming = true;\n   return ensureRCanvas(painter, false)\n           .then(() => painter.redraw())\n           .then(() => painter);\n}\n\n/** @summary draw RFrame object\n  * @private */\nfunction drawRFrame(dom, obj, opt) {\n   const p = new RFramePainter(dom, obj);\n   if (opt === '3d') p.mode3d = true;\n   return ensureRCanvas(p, false).then(() => p.redraw());\n}\n\nexport { ensureRCanvas, drawRPadSnapshot,\n         drawRFrameTitle, drawRFont, drawRAxis, drawRFrame,\n         RObjectPainter, RPadPainter, RCanvasPainter };\n"],"x_google_ignoreList":[0,1,2,3,4]}