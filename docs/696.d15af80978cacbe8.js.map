{"version":3,"file":"696.d15af80978cacbe8.js","mappings":"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","names":["drawText","text","this","getObject","pp","getPadPainter","onframe","v7EvalAttr","getFramePainter","clipping","p","getCoordinate","fPos","textFont","v7EvalFont","size","color","align","createG","startTextDrawingAsync","then","x","y","fText","latex","finishTextDrawing","drawLine","line","p1","fP1","p2","fP2","createv7AttLine","draw_g","append","attr","call","lineatt","func","drawBox","box","createv7AttFill","fillatt","drawMarker","marker","fP","createv7AttMarker","path","markeratt","create","RPalettePainter","RObjectPainter","getHistPalette","pal","fPalette","isFunc","getColor","addMethods","nsREX","drawPalette","drag","palette","contour","getContour","framep","console","log","zmin","zmax","length","rect","getFrameRect","pad_width","getPadWidth","pad_height","getPadHeight","visible","vertical","palette_x","palette_y","palette_width","palette_height","gmin","full_min","gmax","full_max","width","height","changes","v7AttrChange","v7SendAttrChanges","margin","v7EvalLength","Math","round","makeTranslate","g_btns","selectChild","empty","selectAll","remove","style","undefined","z_handle","configureAxis","reverse","i","z0","gr","z1","col","getContourColor","r","property","d3_rgb","darker","formatRgb","isBatchMode","isTooltipAllowed","on","d3_select","transition","duration","toFixed","settings","Zooming","unzoom","maxTickSize","promise","drawAxis","ContextMenu","evnt","stopPropagation","preventDefault","createMenu","menu","header","addchk","flag","v7SetAttr","redrawPad","fillAxisContextMenu","show","addDragHandler","minwidth","minheight","no_change_x","no_change_y","redraw","d","zoom_rect","zoom_rect_visible","moving_labels","last_pos","doing_zoom","sel1","sel2","moveRectSel","d3_pointer","node","processLabelsMove","min","max","sz","abs","endRectSel","window","z","invert","z2","zoom","startRectSel","setTimeout","assignHandlers","ZoomWheel","pos","item","analyzeWheelEvent","changed","setAfterDrawHandler","draw","dom","opt","_asyncToGenerator","painter","ensureRCanvas"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["../node_modules/jsroot/modules/draw/v7more.mjs"],"sourcesContent":["import { addMethods, settings, nsREX, isFunc } from '../core.mjs';\nimport { select as d3_select, rgb as d3_rgb, pointer as d3_pointer } from '../d3.mjs';\nimport { makeTranslate } from '../base/BasePainter.mjs';\nimport { RObjectPainter } from '../base/RObjectPainter.mjs';\nimport { addDragHandler } from '../gpad/TFramePainter.mjs';\nimport { ensureRCanvas } from '../gpad/RCanvasPainter.mjs';\nimport { createMenu } from '../gui/menu.mjs';\n\n\n/** @summary draw RText object\n  * @private */\nfunction drawText() {\n   const text = this.getObject(),\n       pp = this.getPadPainter(),\n       onframe = this.v7EvalAttr('onFrame', false) ? pp.getFramePainter() : null,\n       clipping = onframe ? this.v7EvalAttr('clipping', false) : false,\n       p = pp.getCoordinate(text.fPos, onframe),\n       textFont = this.v7EvalFont('text', { size: 12, color: 'black', align: 22 });\n\n   this.createG(clipping ? 'main_layer' : (onframe ? 'upper_layer' : false));\n\n   return this.startTextDrawingAsync(textFont, 'font').then(() => {\n      this.drawText({ x: p.x, y: p.y, text: text.fText, latex: 1 });\n      return this.finishTextDrawing();\n   });\n}\n\n/** @summary draw RLine object\n  * @private */\nfunction drawLine() {\n    const line = this.getObject(),\n        pp = this.getPadPainter(),\n        onframe = this.v7EvalAttr('onFrame', false) ? pp.getFramePainter() : null,\n        clipping = onframe ? this.v7EvalAttr('clipping', false) : false,\n        p1 = pp.getCoordinate(line.fP1, onframe),\n        p2 = pp.getCoordinate(line.fP2, onframe);\n\n    this.createG(clipping ? 'main_layer' : (onframe ? 'upper_layer' : false));\n\n    this.createv7AttLine();\n\n    this.draw_g\n        .append('svg:path')\n        .attr('d', `M${p1.x},${p1.y}L${p2.x},${p2.y}`)\n        .call(this.lineatt.func);\n}\n\n/** @summary draw RBox object\n  * @private */\nfunction drawBox() {\n   const box = this.getObject(),\n       pp = this.getPadPainter(),\n       onframe = this.v7EvalAttr('onFrame', false) ? pp.getFramePainter() : null,\n       clipping = onframe ? this.v7EvalAttr('clipping', false) : false,\n       p1 = pp.getCoordinate(box.fP1, onframe),\n       p2 = pp.getCoordinate(box.fP2, onframe);\n\n   this.createG(clipping ? 'main_layer' : (onframe ? 'upper_layer' : false));\n\n   this.createv7AttLine('border_');\n\n   this.createv7AttFill();\n\n   this.draw_g\n       .append('svg:path')\n       .attr('d', `M${p1.x},${p1.y}H${p2.x}V${p2.y}H${p1.x}Z`)\n       .call(this.lineatt.func)\n       .call(this.fillatt.func);\n}\n\n/** @summary draw RMarker object\n  * @private */\nfunction drawMarker() {\n    const marker = this.getObject(),\n        pp = this.getPadPainter(),\n        onframe = this.v7EvalAttr('onFrame', false) ? pp.getFramePainter() : null,\n        clipping = onframe ? this.v7EvalAttr('clipping', false) : false,\n        p = pp.getCoordinate(marker.fP, onframe);\n\n    this.createG(clipping ? 'main_layer' : (onframe ? 'upper_layer' : false));\n\n    this.createv7AttMarker();\n\n    const path = this.markeratt.create(p.x, p.y);\n\n    if (path) {\n       this.draw_g.append('svg:path')\n                  .attr('d', path)\n                  .call(this.markeratt.func);\n    }\n}\n\n/** @summary painter for RPalette\n *\n * @private\n */\n\nclass RPalettePainter extends RObjectPainter {\n\n   /** @summary get palette */\n   getHistPalette() {\n      const pal = this.getObject()?.fPalette;\n\n      if (pal && !isFunc(pal.getColor))\n         addMethods(pal, `${nsREX}RPalette`);\n\n      return pal;\n   }\n\n   /** @summary Draw palette */\n   drawPalette(drag) {\n      const palette = this.getHistPalette(),\n            contour = palette.getContour(),\n            framep = this.getFramePainter();\n\n      if (!contour)\n         return console.log('no contour - no palette');\n\n      // frame painter must  be there\n      if (!framep)\n         return console.log('no frame painter - no palette');\n\n      const zmin = contour[0],\n            zmax = contour[contour.length-1],\n            rect = framep.getFrameRect(),\n            pad_width = this.getPadPainter().getPadWidth(),\n            pad_height = this.getPadPainter().getPadHeight(),\n            visible = this.v7EvalAttr('visible', true),\n            vertical = this.v7EvalAttr('vertical', true);\n      let gmin = palette.full_min,\n          gmax = palette.full_max,\n          palette_x, palette_y, palette_width, palette_height;\n\n      if (drag) {\n         palette_width = drag.width;\n         palette_height = drag.height;\n\n         const changes = {};\n         if (vertical) {\n            this.v7AttrChange(changes, 'margin', (drag.x - rect.x - rect.width) / pad_width);\n            this.v7AttrChange(changes, 'width', palette_width / pad_width);\n         } else {\n            this.v7AttrChange(changes, 'margin', (drag.y - rect.y - rect.height) / pad_width);\n            this.v7AttrChange(changes, 'width', palette_height / pad_height);\n         }\n         this.v7SendAttrChanges(changes, false); // do not invoke canvas update on the server\n      } else {\n          if (vertical) {\n            const margin = this.v7EvalLength('margin', pad_width, 0.02);\n            palette_x = Math.round(rect.x + rect.width + margin);\n            palette_width = this.v7EvalLength('width', pad_width, 0.05);\n            palette_y = rect.y;\n            palette_height = rect.height;\n          } else {\n            const margin = this.v7EvalLength('margin', pad_height, 0.02);\n            palette_x = rect.x;\n            palette_width = rect.width;\n            palette_y = Math.round(rect.y + rect.height + margin);\n            palette_height = this.v7EvalLength('width', pad_height, 0.05);\n          }\n\n          // x,y,width,height attributes used for drag functionality\n          makeTranslate(this.draw_g, palette_x, palette_y);\n      }\n\n      let g_btns = this.draw_g.selectChild('.colbtns');\n      if (g_btns.empty())\n         g_btns = this.draw_g.append('svg:g').attr('class', 'colbtns');\n      else\n         g_btns.selectAll('*').remove();\n\n      if (!visible) return;\n\n      g_btns.append('svg:path')\n          .attr('d', `M0,0H${palette_width}V${palette_height}H0Z`)\n          .style('stroke', 'black')\n          .style('fill', 'none');\n\n      if ((gmin === undefined) || (gmax === undefined)) { gmin = zmin; gmax = zmax; }\n\n      if (vertical)\n         framep.z_handle.configureAxis('zaxis', gmin, gmax, zmin, zmax, true, [palette_height, 0], -palette_height, { reverse: false });\n      else\n         framep.z_handle.configureAxis('zaxis', gmin, gmax, zmin, zmax, false, [0, palette_width], palette_width, { reverse: false });\n\n      for (let i = 0; i < contour.length-1; ++i) {\n         const z0 = Math.round(framep.z_handle.gr(contour[i])),\n               z1 = Math.round(framep.z_handle.gr(contour[i+1])),\n               col = palette.getContourColor((contour[i]+contour[i+1])/2),\n\n         r = g_btns.append('svg:path')\n                   .attr('d', vertical ? `M0,${z1}H${palette_width}V${z0}H0Z` : `M${z0},0V${palette_height}H${z1}V0Z`)\n                   .style('fill', col)\n                   .style('stroke', col)\n                   .property('fill0', col)\n                   .property('fill1', d3_rgb(col).darker(0.5).formatRgb());\n\n         if (this.isBatchMode())\n            continue;\n\n         if (this.isTooltipAllowed()) {\n            r.on('mouseover', function() {\n               d3_select(this).transition().duration(100).style('fill', d3_select(this).property('fill1'));\n            }).on('mouseout', function() {\n               d3_select(this).transition().duration(100).style('fill', d3_select(this).property('fill0'));\n            }).append('svg:title').text(contour[i].toFixed(2) + ' - ' + contour[i+1].toFixed(2));\n         }\n\n         if (settings.Zooming)\n            r.on('dblclick', () => framep.unzoom('z'));\n      }\n\n      framep.z_handle.maxTickSize = Math.round(palette_width*0.3);\n\n      const promise = framep.z_handle.drawAxis(this.draw_g, makeTranslate(vertical ? palette_width : 0, palette_height), vertical ? -1 : 1);\n\n      if (this.isBatchMode() || drag)\n         return promise;\n\n      return promise.then(() => {\n         if (settings.ContextMenu) {\n            this.draw_g.on('contextmenu', evnt => {\n               evnt.stopPropagation(); // disable main context menu\n               evnt.preventDefault();  // disable browser context menu\n               createMenu(evnt, this).then(menu => {\n                  menu.header('Palette');\n                  menu.addchk(vertical, 'Vertical', flag => { this.v7SetAttr('vertical', flag); this.redrawPad(); });\n                  framep.z_handle.fillAxisContextMenu(menu, 'z');\n                  menu.show();\n               });\n            });\n         }\n\n         addDragHandler(this, { x: palette_x, y: palette_y, width: palette_width, height: palette_height,\n                                minwidth: 20, minheight: 20, no_change_x: !vertical, no_change_y: vertical, redraw: d => this.drawPalette(d) });\n\n         if (!settings.Zooming) return;\n\n         let doing_zoom = false, sel1 = 0, sel2 = 0, zoom_rect, zoom_rect_visible, moving_labels, last_pos;\n\n         const moveRectSel = evnt => {\n            if (!doing_zoom) return;\n            evnt.preventDefault();\n\n            last_pos = d3_pointer(evnt, this.draw_g.node());\n\n            if (moving_labels)\n               return framep.z_handle.processLabelsMove('move', last_pos);\n\n            if (vertical)\n               sel2 = Math.min(Math.max(last_pos[1], 0), palette_height);\n            else\n               sel2 = Math.min(Math.max(last_pos[0], 0), palette_width);\n\n            const sz = Math.abs(sel2-sel1);\n\n            if (!zoom_rect_visible && (sz > 1)) {\n               zoom_rect.style('display', null);\n               zoom_rect_visible = true;\n            }\n\n            if (vertical)\n               zoom_rect.attr('y', Math.min(sel1, sel2)).attr('height', sz);\n            else\n               zoom_rect.attr('x', Math.min(sel1, sel2)).attr('width', sz);\n         }, endRectSel = evnt => {\n            if (!doing_zoom) return;\n\n            evnt.preventDefault();\n            d3_select(window).on('mousemove.colzoomRect', null)\n                             .on('mouseup.colzoomRect', null);\n            zoom_rect.remove();\n            zoom_rect = null;\n            doing_zoom = false;\n\n            if (moving_labels)\n               framep.z_handle.processLabelsMove('stop', last_pos);\n             else {\n               const z = framep.z_handle.func, z1 = z.invert(sel1), z2 = z.invert(sel2);\n               this.getFramePainter().zoom('z', Math.min(z1, z2), Math.max(z1, z2));\n            }\n         }, startRectSel = evnt => {\n            // ignore when touch selection is activated\n            if (doing_zoom) return;\n            doing_zoom = true;\n\n            evnt.preventDefault();\n            evnt.stopPropagation();\n\n            last_pos = d3_pointer(evnt, this.draw_g.node());\n            sel1 = sel2 = last_pos[vertical ? 1 : 0];\n            zoom_rect_visible = false;\n            moving_labels = false;\n            zoom_rect = g_btns\n                 .append('svg:rect')\n                 .attr('class', 'zoom')\n                 .attr('id', 'colzoomRect')\n                 .style('display', 'none');\n            if (vertical)\n               zoom_rect.attr('x', 0).attr('width', palette_width).attr('y', sel1).attr('height', 1);\n            else\n               zoom_rect.attr('x', sel1).attr('width', 1).attr('y', 0).attr('height', palette_height);\n\n            d3_select(window).on('mousemove.colzoomRect', moveRectSel)\n                             .on('mouseup.colzoomRect', endRectSel, true);\n\n            setTimeout(() => {\n               if (!zoom_rect_visible && doing_zoom)\n                  moving_labels = framep.z_handle.processLabelsMove('start', last_pos);\n            }, 500);\n         }, assignHandlers = () => {\n            this.draw_g.selectAll('.axis_zoom, .axis_labels')\n                       .on('mousedown', startRectSel)\n                       .on('dblclick', () => framep.unzoom('z'));\n\n            if (settings.ZoomWheel) {\n               this.draw_g.on('wheel', evnt => {\n                  evnt.stopPropagation();\n                  evnt.preventDefault();\n\n                  const pos = d3_pointer(evnt, this.draw_g.node()),\n                      coord = vertical ? (1 - pos[1] / palette_height) : pos[0] / palette_width,\n\n                   item = framep.z_handle.analyzeWheelEvent(evnt, coord);\n                  if (item.changed)\n                     framep.zoom('z', item.min, item.max);\n               });\n            }\n         };\n\n         framep.z_handle.setAfterDrawHandler(assignHandlers);\n\n         assignHandlers();\n      });\n   }\n\n   /** @summary draw RPalette object */\n   static async draw(dom, palette, opt) {\n      const painter = new RPalettePainter(dom, palette, opt, 'palette');\n      return ensureRCanvas(painter, false).then(() => {\n         painter.createG(); // just create container, real drawing will be done by histogram\n         return painter;\n      });\n   }\n\n} // class RPalettePainter\n\nexport { RPalettePainter, drawText, drawLine, drawBox, drawMarker };\n"],"x_google_ignoreList":[0]}